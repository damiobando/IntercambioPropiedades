{"ast":null,"code":"'use strict';\n\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\nvar fs = require('fs');\nvar _require = require('path'),\n  extname = _require.extname,\n  basename = _require.basename;\nvar Q = require('q');\nvar Writable = require(\"stream\").Writable;\nvar urlLib = require('url');\n\n// eslint-disable-next-line import/order\n\nvar _require2 = require(\"./config\")(),\n  upload_prefix = _require2.upload_prefix;\nvar isSecure = !(upload_prefix && upload_prefix.slice(0, 5) === 'http:');\nvar https = isSecure ? require('https') : require('http');\nvar Cache = require('./cache');\nvar utils = require(\"./utils\");\nvar UploadStream = require('./upload_stream');\nvar config = require(\"./config\");\nvar ensureOption = require('./utils/ensureOption').defaults(config());\nvar agent = config.api_proxy ? new https.Agent(config.api_proxy) : null;\nvar build_upload_params = utils.build_upload_params,\n  extend = utils.extend,\n  includes = utils.includes,\n  isEmpty = utils.isEmpty,\n  isObject = utils.isObject,\n  isRemoteUrl = utils.isRemoteUrl,\n  merge = utils.merge,\n  pickOnlyExistingValues = utils.pickOnlyExistingValues;\nexports.unsigned_upload_stream = function unsigned_upload_stream(upload_preset, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return exports.upload_stream(callback, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\nexports.upload_stream = function upload_stream(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return exports.upload(null, callback, extend({\n    stream: true\n  }, options));\n};\nexports.unsigned_upload = function unsigned_upload(file, upload_preset, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return exports.upload(file, callback, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\nexports.upload = function upload(file, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"upload\", callback, options, function () {\n    var params = build_upload_params(options);\n    return isRemoteUrl(file) ? [params, {\n      file: file\n    }] : [params, {}, file];\n  });\n};\nexports.upload_large = function upload_large(path, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  if (path != null && isRemoteUrl(path)) {\n    // upload a remote file\n    return exports.upload(path, callback, options);\n  }\n  if (path != null && !options.filename) {\n    options.filename = path.split(/(\\\\|\\/)/g).pop().replace(/\\.[^/.]+$/, \"\");\n  }\n  return exports.upload_chunked(path, callback, extend({\n    resource_type: 'raw'\n  }, options));\n};\nexports.upload_chunked = function upload_chunked(path, callback, options) {\n  var file_reader = fs.createReadStream(path);\n  var out_stream = exports.upload_chunked_stream(callback, options);\n  return file_reader.pipe(out_stream);\n};\nvar Chunkable = function (_Writable) {\n  _inherits(Chunkable, _Writable);\n  function Chunkable(options) {\n    _classCallCheck(this, Chunkable);\n    var _this = _possibleConstructorReturn(this, (Chunkable.__proto__ || Object.getPrototypeOf(Chunkable)).call(this, options));\n    _this.chunk_size = options.chunk_size != null ? options.chunk_size : 20000000;\n    _this.buffer = Buffer.alloc(0);\n    _this.active = true;\n    _this.on('finish', function () {\n      if (_this.active) {\n        _this.emit('ready', _this.buffer, true, function () {});\n      }\n    });\n    return _this;\n  }\n  _createClass(Chunkable, [{\n    key: '_write',\n    value: function _write(data, encoding, done) {\n      var _this2 = this;\n      if (!this.active) {\n        done();\n      }\n      if (this.buffer.length + data.length <= this.chunk_size) {\n        this.buffer = Buffer.concat([this.buffer, data], this.buffer.length + data.length);\n        done();\n      } else {\n        var grab = this.chunk_size - this.buffer.length;\n        this.buffer = Buffer.concat([this.buffer, data.slice(0, grab)], this.buffer.length + grab);\n        this.emit('ready', this.buffer, false, function (active) {\n          _this2.active = active;\n          if (_this2.active) {\n            _this2.buffer = data.slice(grab);\n            done();\n          }\n        });\n      }\n    }\n  }]);\n  return Chunkable;\n}(Writable);\nexports.upload_large_stream = function upload_large_stream(_unused_, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return exports.upload_chunked_stream(callback, extend({\n    resource_type: 'raw'\n  }, options));\n};\nexports.upload_chunked_stream = function upload_chunked_stream(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options = extend({}, options, {\n    stream: true\n  });\n  options.x_unique_upload_id = utils.random_public_id();\n  var params = build_upload_params(options);\n  var chunk_size = options.chunk_size != null ? options.chunk_size : options.part_size;\n  var chunker = new Chunkable({\n    chunk_size: chunk_size\n  });\n  var sent = 0;\n  chunker.on('ready', function (buffer, is_last, done) {\n    var chunk_start = sent;\n    sent += buffer.length;\n    options.content_range = `bytes ${chunk_start}-${sent - 1}/${is_last ? sent : -1}`;\n    params.timestamp = utils.timestamp();\n    var finished_part = function finished_part(result) {\n      var errorOrLast = result.error != null || is_last;\n      if (errorOrLast && typeof callback === \"function\") {\n        callback(result);\n      }\n      return done(!errorOrLast);\n    };\n    var stream = call_api(\"upload\", finished_part, options, function () {\n      return [params, {}, buffer];\n    });\n    return stream.write(buffer, 'buffer', function () {\n      return stream.end();\n    });\n  });\n  return chunker;\n};\nexports.explicit = function explicit(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"explicit\", callback, options, function () {\n    return utils.build_explicit_api_params(public_id, options);\n  });\n};\n\n// Creates a new archive in the server and returns information in JSON format\nexports.create_archive = function create_archive(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var target_format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  return call_api(\"generate_archive\", callback, options, function () {\n    var opt = utils.archive_params(options);\n    if (target_format) {\n      opt.target_format = target_format;\n    }\n    return [opt];\n  });\n};\n\n// Creates a new zip archive in the server and returns information in JSON format\nexports.create_zip = function create_zip(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return exports.create_archive(callback, options, \"zip\");\n};\nexports.create_slideshow = function create_slideshow(options, callback) {\n  options.resource_type = ensureOption(options, \"resource_type\", \"video\");\n  return call_api(\"create_slideshow\", callback, options, function () {\n    // Generate a transformation from the manifest_transformation key, which should be a valid transformation\n    var manifest_transformation = utils.generate_transformation_string(extend({}, options.manifest_transformation));\n\n    // Try to use {options.transformation} to generate a transformation (Example: options.transformation.width, options.transformation.height)\n    var transformation = utils.generate_transformation_string(extend({}, ensureOption(options, 'transformation', {})));\n    return [{\n      timestamp: utils.timestamp(),\n      manifest_transformation: manifest_transformation,\n      upload_preset: options.upload_preset,\n      overwrite: options.overwrite,\n      public_id: options.public_id,\n      notification_url: options.notification_url,\n      manifest_json: options.manifest_json,\n      tags: options.tags,\n      transformation: transformation\n    }];\n  });\n};\nexports.destroy = function destroy(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"destroy\", callback, options, function () {\n    return [{\n      timestamp: utils.timestamp(),\n      type: options.type,\n      invalidate: options.invalidate,\n      public_id: public_id\n    }];\n  });\n};\nexports.rename = function rename(from_public_id, to_public_id, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return call_api(\"rename\", callback, options, function () {\n    return [{\n      timestamp: utils.timestamp(),\n      type: options.type,\n      from_public_id: from_public_id,\n      to_public_id: to_public_id,\n      overwrite: options.overwrite,\n      invalidate: options.invalidate,\n      to_type: options.to_type,\n      context: options.context,\n      metadata: options.metadata\n    }];\n  });\n};\nvar TEXT_PARAMS = [\"public_id\", \"font_family\", \"font_size\", \"font_color\", \"text_align\", \"font_weight\", \"font_style\", \"background\", \"opacity\", \"text_decoration\", \"font_hinting\", \"font_antialiasing\"];\nexports.text = function text(content, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"text\", callback, options, function () {\n    var textParams = pickOnlyExistingValues.apply(undefined, [options].concat(TEXT_PARAMS));\n    var params = _extends({\n      timestamp: utils.timestamp(),\n      text: content\n    }, textParams);\n    return [params];\n  });\n};\n\n/**\n * Generate a sprite by merging multiple images into a single large image for reducing network overhead and bypassing\n * download limitations.\n *\n * The process produces 2 files as follows:\n * - A single image file containing all the images with the specified tag (PNG by default).\n * - A CSS file that includes the style class names and the location of the individual images in the sprite.\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Function}     callback   Callback function\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @return {Object}\n */\nexports.generate_sprite = function generate_sprite(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"sprite\", callback, options, function () {\n    return [utils.build_multi_and_sprite_params(tag, options)];\n  });\n};\n\n/**\n * Returns a signed url to download a sprite\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @returns {string}\n */\nexports.download_generated_sprite = function download_generated_sprite(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return utils.api_download_url(\"sprite\", utils.build_multi_and_sprite_params(tag, options), options);\n};\n\n/**\n * Returns a signed url to download a single animated image (GIF, PNG or WebP), video (MP4 or WebM) or a single PDF from\n * multiple image assets.\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @returns {string}\n */\nexports.download_multi = function download_multi(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return utils.api_download_url(\"multi\", utils.build_multi_and_sprite_params(tag, options), options);\n};\n\n/**\n * Creates either a single animated image (GIF, PNG or WebP), video (MP4 or WebM) or a single PDF from multiple image\n * assets.\n *\n * Each asset is included as a single frame of the resulting animated image/video, or a page of the PDF (sorted\n * alphabetically by their Public ID).\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Function}     callback   Callback function\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @return {Object}\n */\nexports.multi = function multi(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"multi\", callback, options, function () {\n    return [utils.build_multi_and_sprite_params(tag, options)];\n  });\n};\nexports.explode = function explode(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_api(\"explode\", callback, options, function () {\n    var transformation = utils.generate_transformation_string(extend({}, options));\n    return [{\n      timestamp: utils.timestamp(),\n      public_id: public_id,\n      transformation: transformation,\n      format: options.format,\n      type: options.type,\n      notification_url: options.notification_url\n    }];\n  });\n};\n\n/**\n *\n * @param {String}          tag                  The tag or tags to assign. Can specify multiple\n *                                               tags in a single string, separated by commas - \"t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11\".\n *\n * @param {Array}          public_ids           A list of public IDs (up to 1000) of assets uploaded to Cloudinary.\n *\n * @param {Function}        callback             Callback function\n *\n * @param {Object}          options              Configuration options may include 'exclusive' (boolean) which causes\n *                                               clearing this tag from all other resources\n * @return {Object}\n */\nexports.add_tag = function add_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  var exclusive = utils.option_consume(\"exclusive\", options);\n  var command = exclusive ? \"set_exclusive\" : \"add\";\n  return call_tags_api(tag, command, public_ids, callback, options);\n};\n\n/**\n * @param {String}          tag                  The tag or tags to remove. Can specify multiple\n *                                               tags in a single string, separated by commas - \"t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11\".\n *\n * @param {Array}          public_ids            A list of public IDs (up to 1000) of assets uploaded to Cloudinary.\n *\n * @param {Function}        callback             Callback function\n *\n * @param {Object}          options              Configuration options may include 'exclusive' (boolean) which causes\n *                                               clearing this tag from all other resources\n * @return {Object}\n */\nexports.remove_tag = function remove_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return call_tags_api(tag, \"remove\", public_ids, callback, options);\n};\nexports.remove_all_tags = function remove_all_tags() {\n  var public_ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var callback = arguments[1];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_tags_api(null, \"remove_all\", public_ids, callback, options);\n};\nexports.replace_tag = function replace_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return call_tags_api(tag, \"replace\", public_ids, callback, options);\n};\nfunction call_tags_api(tag, command) {\n  var public_ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var callback = arguments[3];\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  return call_api(\"tags\", callback, options, function () {\n    var params = {\n      timestamp: utils.timestamp(),\n      public_ids: utils.build_array(public_ids),\n      command: command,\n      type: options.type\n    };\n    if (tag != null) {\n      params.tag = tag;\n    }\n    return [params];\n  });\n}\nexports.add_context = function add_context(context) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return call_context_api(context, 'add', public_ids, callback, options);\n};\nexports.remove_all_context = function remove_all_context() {\n  var public_ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var callback = arguments[1];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return call_context_api(null, 'remove_all', public_ids, callback, options);\n};\nfunction call_context_api(context, command) {\n  var public_ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var callback = arguments[3];\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n  return call_api('context', callback, options, function () {\n    var params = {\n      timestamp: utils.timestamp(),\n      public_ids: utils.build_array(public_ids),\n      command: command,\n      type: options.type\n    };\n    if (context != null) {\n      params.context = utils.encode_context(context);\n    }\n    return [params];\n  });\n}\n\n/**\n * Cache (part of) the upload results.\n * @param result\n * @param {object} options\n * @param {string} options.type\n * @param {string} options.resource_type\n */\nfunction cacheResults(result, _ref) {\n  var type = _ref.type,\n    resource_type = _ref.resource_type;\n  if (result.responsive_breakpoints) {\n    result.responsive_breakpoints.forEach(function (_ref2) {\n      var transformation = _ref2.transformation,\n        url = _ref2.url,\n        breakpoints = _ref2.breakpoints;\n      return Cache.set(result.public_id, {\n        type,\n        resource_type,\n        raw_transformation: transformation,\n        format: extname(breakpoints[0].url).slice(1)\n      }, breakpoints.map(function (i) {\n        return i.width;\n      }));\n    });\n  }\n}\nfunction parseResult(buffer, res) {\n  var result = '';\n  try {\n    result = JSON.parse(buffer);\n    if (result.error && !result.error.name) {\n      result.error.name = \"Error\";\n    }\n  } catch (jsonError) {\n    result = {\n      error: {\n        message: `Server return invalid JSON response. Status Code ${res.statusCode}. ${jsonError}`,\n        name: \"Error\"\n      }\n    };\n  }\n  return result;\n}\nfunction call_api(action, callback, options, get_params) {\n  if (typeof callback !== \"function\") {\n    callback = function callback() {};\n  }\n  var USE_PROMISES = !options.disable_promises;\n  var deferred = Q.defer();\n  if (options == null) {\n    options = {};\n  }\n  var _get_params$call = get_params.call(),\n    _get_params$call2 = _slicedToArray(_get_params$call, 3),\n    params = _get_params$call2[0],\n    unsigned_params = _get_params$call2[1],\n    file = _get_params$call2[2];\n  params = utils.process_request_params(params, options);\n  params = extend(params, unsigned_params);\n  var api_url = utils.api_url(action, options);\n  var boundary = utils.random_public_id();\n  var errorRaised = false;\n  var handle_response = function handle_response(res) {\n    // let buffer;\n    if (errorRaised) {\n\n      // Already reported\n    } else if (res.error) {\n      errorRaised = true;\n      if (USE_PROMISES) {\n        deferred.reject(res);\n      }\n      callback(res);\n    } else if (includes([200, 400, 401, 404, 420, 500], res.statusCode)) {\n      var buffer = \"\";\n      res.on(\"data\", function (d) {\n        buffer += d;\n        return buffer;\n      });\n      res.on(\"end\", function () {\n        var result = void 0;\n        if (errorRaised) {\n          return;\n        }\n        result = parseResult(buffer, res);\n        if (result.error) {\n          result.error.http_code = res.statusCode;\n          if (USE_PROMISES) {\n            deferred.reject(result.error);\n          }\n        } else {\n          cacheResults(result, options);\n          if (USE_PROMISES) {\n            deferred.resolve(result);\n          }\n        }\n        callback(result);\n      });\n      res.on(\"error\", function (error) {\n        errorRaised = true;\n        if (USE_PROMISES) {\n          deferred.reject(error);\n        }\n        callback({\n          error\n        });\n      });\n    } else {\n      var error = {\n        message: `Server returned unexpected status code - ${res.statusCode}`,\n        http_code: res.statusCode,\n        name: \"UnexpectedResponse\"\n      };\n      if (USE_PROMISES) {\n        deferred.reject(error);\n      }\n      callback({\n        error\n      });\n    }\n  };\n  var post_data = utils.hashToParameters(params).filter(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      key = _ref4[0],\n      value = _ref4[1];\n    return value != null;\n  }).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n      key = _ref6[0],\n      value = _ref6[1];\n    return Buffer.from(encodeFieldPart(boundary, key, value), 'utf8');\n  });\n  var result = post(api_url, post_data, boundary, file, handle_response, options);\n  if (isObject(result)) {\n    return result;\n  }\n  if (USE_PROMISES) {\n    return deferred.promise;\n  }\n}\nfunction post(url, post_data, boundary, file, callback, options) {\n  var file_header = void 0;\n  var finish_buffer = Buffer.from(\"--\" + boundary + \"--\", 'ascii');\n  var oauth_token = options.oauth_token || config().oauth_token;\n  if (file != null || options.stream) {\n    // eslint-disable-next-line no-nested-ternary\n    var filename = options.stream ? options.filename ? options.filename : \"file\" : basename(file);\n    file_header = Buffer.from(encodeFilePart(boundary, 'application/octet-stream', 'file', filename), 'binary');\n  }\n  var post_options = urlLib.parse(url);\n  var headers = {\n    'Content-Type': `multipart/form-data; boundary=${boundary}`,\n    'User-Agent': utils.getUserAgent()\n  };\n  if (options.content_range != null) {\n    headers['Content-Range'] = options.content_range;\n  }\n  if (options.x_unique_upload_id != null) {\n    headers['X-Unique-Upload-Id'] = options.x_unique_upload_id;\n  }\n  if (options.extra_headers !== null) {\n    headers = merge(headers, options.extra_headers);\n  }\n  if (oauth_token != null) {\n    headers.Authorization = `Bearer ${oauth_token}`;\n  }\n  post_options = extend(post_options, {\n    method: 'POST',\n    headers: headers\n  });\n  if (options.agent != null) {\n    post_options.agent = options.agent;\n  }\n  var proxy = options.api_proxy || config().api_proxy;\n  if (!isEmpty(proxy)) {\n    if (!post_options.agent && agent) {\n      post_options.agent = agent;\n    } else if (!post_options.agent) {\n      post_options.agent = new https.Agent(proxy);\n    } else {\n      console.warn(\"Proxy is set, but request uses a custom agent, proxy is ignored.\");\n    }\n  }\n  var post_request = https.request(post_options, callback);\n  var upload_stream = new UploadStream({\n    boundary\n  });\n  upload_stream.pipe(post_request);\n  var timeout = false;\n  post_request.on(\"error\", function (error) {\n    if (timeout) {\n      error = {\n        message: \"Request Timeout\",\n        http_code: 499,\n        name: \"TimeoutError\"\n      };\n    }\n    return callback({\n      error\n    });\n  });\n  post_request.setTimeout(options.timeout != null ? options.timeout : 60000, function () {\n    timeout = true;\n    return post_request.abort();\n  });\n  post_data.forEach(function (postDatum) {\n    return post_request.write(postDatum);\n  });\n  if (options.stream) {\n    post_request.write(file_header);\n    return upload_stream;\n  }\n  if (file != null) {\n    post_request.write(file_header);\n    fs.createReadStream(file).on('error', function (error) {\n      callback({\n        error: error\n      });\n      return post_request.abort();\n    }).pipe(upload_stream);\n  } else {\n    post_request.write(finish_buffer);\n    post_request.end();\n  }\n  return true;\n}\nfunction encodeFieldPart(boundary, name, value) {\n  return [`--${boundary}`, `Content-Disposition: form-data; name=\"${name}\"`, '', value, ''].join(\"\\r\\n\");\n}\nfunction encodeFilePart(boundary, type, name, filename) {\n  return [`--${boundary}`, `Content-Disposition: form-data; name=\"${name}\"; filename=\"${filename}\"`, `Content-Type: ${type}`, '', ''].join(\"\\r\\n\");\n}\nexports.direct_upload = function direct_upload(callback_url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = build_upload_params(extend({\n    callback: callback_url\n  }, options));\n  params = utils.process_request_params(params, options);\n  var api_url = utils.api_url(\"upload\", options);\n  return {\n    hidden_fields: params,\n    form_attrs: {\n      action: api_url,\n      method: \"POST\",\n      enctype: \"multipart/form-data\"\n    }\n  };\n};\nexports.upload_tag_params = function upload_tag_params() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var params = build_upload_params(options);\n  params = utils.process_request_params(params, options);\n  return JSON.stringify(params);\n};\nexports.upload_url = function upload_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (options.resource_type == null) {\n    options.resource_type = \"auto\";\n  }\n  return utils.api_url(\"upload\", options);\n};\nexports.image_upload_tag = function image_upload_tag(field) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var html_options = options.html || {};\n  var tag_options = extend({\n    type: \"file\",\n    name: \"file\",\n    \"data-url\": exports.upload_url(options),\n    \"data-form-data\": exports.upload_tag_params(options),\n    \"data-cloudinary-field\": field,\n    \"data-max-chunk-size\": options.chunk_size,\n    \"class\": [html_options.class, \"cloudinary-fileupload\"].join(\" \")\n  }, html_options);\n  return `<input ${utils.html_attrs(tag_options)}/>`;\n};\nexports.unsigned_image_upload_tag = function unsigned_image_upload_tag(field, upload_preset) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  return exports.image_upload_tag(field, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\n\n/**\n * Populates metadata fields with the given values. Existing values will be overwritten.\n *\n * @param {Object}   metadata   A list of custom metadata fields (by external_id) and the values to assign to each\n * @param {Array}    public_ids The public IDs of the resources to update\n * @param {Function} callback   Callback function\n * @param {Object}   options    Configuration options\n *\n * @return {Object}\n */\nexports.update_metadata = function update_metadata(metadata, public_ids, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  return call_api(\"metadata\", callback, options, function () {\n    var params = {\n      metadata: utils.encode_context(metadata),\n      public_ids: utils.build_array(public_ids),\n      timestamp: utils.timestamp(),\n      type: options.type,\n      clear_invalid: options.clear_invalid\n    };\n    return [params];\n  });\n};","map":{"version":3,"names":["_slicedToArray","sliceIterator","arr","i","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","length","err","Array","isArray","Object","TypeError","_extends","assign","target","arguments","source","key","prototype","hasOwnProperty","call","_createClass","defineProperties","props","descriptor","enumerable","configurable","writable","defineProperty","Constructor","protoProps","staticProps","_classCallCheck","instance","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","constructor","setPrototypeOf","__proto__","fs","require","_require","extname","basename","Q","Writable","urlLib","_require2","upload_prefix","isSecure","slice","https","Cache","utils","UploadStream","config","ensureOption","defaults","agent","api_proxy","Agent","build_upload_params","extend","includes","isEmpty","isObject","isRemoteUrl","merge","pickOnlyExistingValues","exports","unsigned_upload_stream","upload_preset","callback","options","upload_stream","unsigned","upload","stream","unsigned_upload","file","call_api","params","upload_large","path","filename","split","pop","replace","upload_chunked","resource_type","file_reader","createReadStream","out_stream","upload_chunked_stream","pipe","Chunkable","_Writable","_this","getPrototypeOf","chunk_size","buffer","Buffer","alloc","active","on","emit","_write","data","encoding","_this2","concat","grab","upload_large_stream","_unused_","x_unique_upload_id","random_public_id","part_size","chunker","sent","is_last","chunk_start","content_range","timestamp","finished_part","result","errorOrLast","error","write","end","explicit","public_id","build_explicit_api_params","create_archive","target_format","opt","archive_params","create_zip","create_slideshow","manifest_transformation","generate_transformation_string","transformation","overwrite","notification_url","manifest_json","tags","destroy","type","invalidate","rename","from_public_id","to_public_id","to_type","context","metadata","TEXT_PARAMS","text","content","textParams","apply","generate_sprite","tag","build_multi_and_sprite_params","download_generated_sprite","api_download_url","download_multi","multi","explode","format","add_tag","public_ids","exclusive","option_consume","command","call_tags_api","remove_tag","remove_all_tags","replace_tag","build_array","add_context","call_context_api","remove_all_context","encode_context","cacheResults","_ref","responsive_breakpoints","forEach","_ref2","url","breakpoints","set","raw_transformation","map","width","parseResult","res","JSON","parse","name","jsonError","message","statusCode","action","get_params","USE_PROMISES","disable_promises","deferred","defer","_get_params$call","_get_params$call2","unsigned_params","process_request_params","api_url","boundary","errorRaised","handle_response","reject","d","http_code","resolve","post_data","hashToParameters","filter","_ref3","_ref4","_ref5","_ref6","from","encodeFieldPart","post","promise","file_header","finish_buffer","oauth_token","encodeFilePart","post_options","headers","getUserAgent","extra_headers","Authorization","method","proxy","console","warn","post_request","request","timeout","setTimeout","abort","postDatum","join","direct_upload","callback_url","hidden_fields","form_attrs","enctype","upload_tag_params","stringify","upload_url","image_upload_tag","field","html_options","html","tag_options","class","html_attrs","unsigned_image_upload_tag","update_metadata","clear_invalid"],"sources":["C:/Users/PC/Documents/GitHub/IntercambioPropiedades/front-end/node_modules/cloudinary/lib-es5/uploader.js"],"sourcesContent":["'use strict';\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar fs = require('fs');\n\nvar _require = require('path'),\n    extname = _require.extname,\n    basename = _require.basename;\n\nvar Q = require('q');\nvar Writable = require(\"stream\").Writable;\nvar urlLib = require('url');\n\n// eslint-disable-next-line import/order\n\nvar _require2 = require(\"./config\")(),\n    upload_prefix = _require2.upload_prefix;\n\nvar isSecure = !(upload_prefix && upload_prefix.slice(0, 5) === 'http:');\nvar https = isSecure ? require('https') : require('http');\n\nvar Cache = require('./cache');\nvar utils = require(\"./utils\");\nvar UploadStream = require('./upload_stream');\nvar config = require(\"./config\");\nvar ensureOption = require('./utils/ensureOption').defaults(config());\n\nvar agent = config.api_proxy ? new https.Agent(config.api_proxy) : null;\n\nvar build_upload_params = utils.build_upload_params,\n    extend = utils.extend,\n    includes = utils.includes,\n    isEmpty = utils.isEmpty,\n    isObject = utils.isObject,\n    isRemoteUrl = utils.isRemoteUrl,\n    merge = utils.merge,\n    pickOnlyExistingValues = utils.pickOnlyExistingValues;\n\n\nexports.unsigned_upload_stream = function unsigned_upload_stream(upload_preset, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return exports.upload_stream(callback, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\n\nexports.upload_stream = function upload_stream(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return exports.upload(null, callback, extend({\n    stream: true\n  }, options));\n};\n\nexports.unsigned_upload = function unsigned_upload(file, upload_preset, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return exports.upload(file, callback, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\n\nexports.upload = function upload(file, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"upload\", callback, options, function () {\n    var params = build_upload_params(options);\n    return isRemoteUrl(file) ? [params, { file: file }] : [params, {}, file];\n  });\n};\n\nexports.upload_large = function upload_large(path, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  if (path != null && isRemoteUrl(path)) {\n    // upload a remote file\n    return exports.upload(path, callback, options);\n  }\n  if (path != null && !options.filename) {\n    options.filename = path.split(/(\\\\|\\/)/g).pop().replace(/\\.[^/.]+$/, \"\");\n  }\n  return exports.upload_chunked(path, callback, extend({\n    resource_type: 'raw'\n  }, options));\n};\n\nexports.upload_chunked = function upload_chunked(path, callback, options) {\n  var file_reader = fs.createReadStream(path);\n  var out_stream = exports.upload_chunked_stream(callback, options);\n  return file_reader.pipe(out_stream);\n};\n\nvar Chunkable = function (_Writable) {\n  _inherits(Chunkable, _Writable);\n\n  function Chunkable(options) {\n    _classCallCheck(this, Chunkable);\n\n    var _this = _possibleConstructorReturn(this, (Chunkable.__proto__ || Object.getPrototypeOf(Chunkable)).call(this, options));\n\n    _this.chunk_size = options.chunk_size != null ? options.chunk_size : 20000000;\n    _this.buffer = Buffer.alloc(0);\n    _this.active = true;\n    _this.on('finish', function () {\n      if (_this.active) {\n        _this.emit('ready', _this.buffer, true, function () {});\n      }\n    });\n    return _this;\n  }\n\n  _createClass(Chunkable, [{\n    key: '_write',\n    value: function _write(data, encoding, done) {\n      var _this2 = this;\n\n      if (!this.active) {\n        done();\n      }\n      if (this.buffer.length + data.length <= this.chunk_size) {\n        this.buffer = Buffer.concat([this.buffer, data], this.buffer.length + data.length);\n        done();\n      } else {\n        var grab = this.chunk_size - this.buffer.length;\n        this.buffer = Buffer.concat([this.buffer, data.slice(0, grab)], this.buffer.length + grab);\n        this.emit('ready', this.buffer, false, function (active) {\n          _this2.active = active;\n          if (_this2.active) {\n            _this2.buffer = data.slice(grab);\n            done();\n          }\n        });\n      }\n    }\n  }]);\n\n  return Chunkable;\n}(Writable);\n\nexports.upload_large_stream = function upload_large_stream(_unused_, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return exports.upload_chunked_stream(callback, extend({\n    resource_type: 'raw'\n  }, options));\n};\n\nexports.upload_chunked_stream = function upload_chunked_stream(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  options = extend({}, options, {\n    stream: true\n  });\n  options.x_unique_upload_id = utils.random_public_id();\n  var params = build_upload_params(options);\n  var chunk_size = options.chunk_size != null ? options.chunk_size : options.part_size;\n  var chunker = new Chunkable({\n    chunk_size: chunk_size\n  });\n  var sent = 0;\n  chunker.on('ready', function (buffer, is_last, done) {\n    var chunk_start = sent;\n    sent += buffer.length;\n    options.content_range = `bytes ${chunk_start}-${sent - 1}/${is_last ? sent : -1}`;\n    params.timestamp = utils.timestamp();\n    var finished_part = function finished_part(result) {\n      var errorOrLast = result.error != null || is_last;\n      if (errorOrLast && typeof callback === \"function\") {\n        callback(result);\n      }\n      return done(!errorOrLast);\n    };\n    var stream = call_api(\"upload\", finished_part, options, function () {\n      return [params, {}, buffer];\n    });\n    return stream.write(buffer, 'buffer', function () {\n      return stream.end();\n    });\n  });\n  return chunker;\n};\n\nexports.explicit = function explicit(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"explicit\", callback, options, function () {\n    return utils.build_explicit_api_params(public_id, options);\n  });\n};\n\n// Creates a new archive in the server and returns information in JSON format\nexports.create_archive = function create_archive(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var target_format = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  return call_api(\"generate_archive\", callback, options, function () {\n    var opt = utils.archive_params(options);\n    if (target_format) {\n      opt.target_format = target_format;\n    }\n    return [opt];\n  });\n};\n\n// Creates a new zip archive in the server and returns information in JSON format\nexports.create_zip = function create_zip(callback) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return exports.create_archive(callback, options, \"zip\");\n};\n\nexports.create_slideshow = function create_slideshow(options, callback) {\n  options.resource_type = ensureOption(options, \"resource_type\", \"video\");\n  return call_api(\"create_slideshow\", callback, options, function () {\n    // Generate a transformation from the manifest_transformation key, which should be a valid transformation\n    var manifest_transformation = utils.generate_transformation_string(extend({}, options.manifest_transformation));\n\n    // Try to use {options.transformation} to generate a transformation (Example: options.transformation.width, options.transformation.height)\n    var transformation = utils.generate_transformation_string(extend({}, ensureOption(options, 'transformation', {})));\n\n    return [{\n      timestamp: utils.timestamp(),\n      manifest_transformation: manifest_transformation,\n      upload_preset: options.upload_preset,\n      overwrite: options.overwrite,\n      public_id: options.public_id,\n      notification_url: options.notification_url,\n      manifest_json: options.manifest_json,\n      tags: options.tags,\n      transformation: transformation\n    }];\n  });\n};\n\nexports.destroy = function destroy(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"destroy\", callback, options, function () {\n    return [{\n      timestamp: utils.timestamp(),\n      type: options.type,\n      invalidate: options.invalidate,\n      public_id: public_id\n    }];\n  });\n};\n\nexports.rename = function rename(from_public_id, to_public_id, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return call_api(\"rename\", callback, options, function () {\n    return [{\n      timestamp: utils.timestamp(),\n      type: options.type,\n      from_public_id: from_public_id,\n      to_public_id: to_public_id,\n      overwrite: options.overwrite,\n      invalidate: options.invalidate,\n      to_type: options.to_type,\n      context: options.context,\n      metadata: options.metadata\n    }];\n  });\n};\n\nvar TEXT_PARAMS = [\"public_id\", \"font_family\", \"font_size\", \"font_color\", \"text_align\", \"font_weight\", \"font_style\", \"background\", \"opacity\", \"text_decoration\", \"font_hinting\", \"font_antialiasing\"];\n\nexports.text = function text(content, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"text\", callback, options, function () {\n    var textParams = pickOnlyExistingValues.apply(undefined, [options].concat(TEXT_PARAMS));\n    var params = _extends({\n      timestamp: utils.timestamp(),\n      text: content\n    }, textParams);\n\n    return [params];\n  });\n};\n\n/**\n * Generate a sprite by merging multiple images into a single large image for reducing network overhead and bypassing\n * download limitations.\n *\n * The process produces 2 files as follows:\n * - A single image file containing all the images with the specified tag (PNG by default).\n * - A CSS file that includes the style class names and the location of the individual images in the sprite.\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Function}     callback   Callback function\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @return {Object}\n */\nexports.generate_sprite = function generate_sprite(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"sprite\", callback, options, function () {\n    return [utils.build_multi_and_sprite_params(tag, options)];\n  });\n};\n\n/**\n * Returns a signed url to download a sprite\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @returns {string}\n */\nexports.download_generated_sprite = function download_generated_sprite(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return utils.api_download_url(\"sprite\", utils.build_multi_and_sprite_params(tag, options), options);\n};\n\n/**\n * Returns a signed url to download a single animated image (GIF, PNG or WebP), video (MP4 or WebM) or a single PDF from\n * multiple image assets.\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @returns {string}\n */\nexports.download_multi = function download_multi(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return utils.api_download_url(\"multi\", utils.build_multi_and_sprite_params(tag, options), options);\n};\n\n/**\n * Creates either a single animated image (GIF, PNG or WebP), video (MP4 or WebM) or a single PDF from multiple image\n * assets.\n *\n * Each asset is included as a single frame of the resulting animated image/video, or a page of the PDF (sorted\n * alphabetically by their Public ID).\n *\n * @param {String|Object} tag     A string specifying a tag that indicates which images to include or an object\n *                                which includes options and image URLs.\n * @param {Function}     callback   Callback function\n * @param {Object}       options  Configuration options. If options are passed as the first parameter, this parameter\n *                                should be empty\n *\n * @return {Object}\n */\nexports.multi = function multi(tag, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"multi\", callback, options, function () {\n    return [utils.build_multi_and_sprite_params(tag, options)];\n  });\n};\n\nexports.explode = function explode(public_id, callback) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_api(\"explode\", callback, options, function () {\n    var transformation = utils.generate_transformation_string(extend({}, options));\n    return [{\n      timestamp: utils.timestamp(),\n      public_id: public_id,\n      transformation: transformation,\n      format: options.format,\n      type: options.type,\n      notification_url: options.notification_url\n    }];\n  });\n};\n\n/**\n *\n * @param {String}          tag                  The tag or tags to assign. Can specify multiple\n *                                               tags in a single string, separated by commas - \"t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11\".\n *\n * @param {Array}          public_ids           A list of public IDs (up to 1000) of assets uploaded to Cloudinary.\n *\n * @param {Function}        callback             Callback function\n *\n * @param {Object}          options              Configuration options may include 'exclusive' (boolean) which causes\n *                                               clearing this tag from all other resources\n * @return {Object}\n */\nexports.add_tag = function add_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  var exclusive = utils.option_consume(\"exclusive\", options);\n  var command = exclusive ? \"set_exclusive\" : \"add\";\n  return call_tags_api(tag, command, public_ids, callback, options);\n};\n\n/**\n * @param {String}          tag                  The tag or tags to remove. Can specify multiple\n *                                               tags in a single string, separated by commas - \"t1,t2,t3,t4,t5,t6,t7,t8,t9,t10,t11\".\n *\n * @param {Array}          public_ids            A list of public IDs (up to 1000) of assets uploaded to Cloudinary.\n *\n * @param {Function}        callback             Callback function\n *\n * @param {Object}          options              Configuration options may include 'exclusive' (boolean) which causes\n *                                               clearing this tag from all other resources\n * @return {Object}\n */\nexports.remove_tag = function remove_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return call_tags_api(tag, \"remove\", public_ids, callback, options);\n};\n\nexports.remove_all_tags = function remove_all_tags() {\n  var public_ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var callback = arguments[1];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_tags_api(null, \"remove_all\", public_ids, callback, options);\n};\n\nexports.replace_tag = function replace_tag(tag) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return call_tags_api(tag, \"replace\", public_ids, callback, options);\n};\n\nfunction call_tags_api(tag, command) {\n  var public_ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var callback = arguments[3];\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  return call_api(\"tags\", callback, options, function () {\n    var params = {\n      timestamp: utils.timestamp(),\n      public_ids: utils.build_array(public_ids),\n      command: command,\n      type: options.type\n    };\n    if (tag != null) {\n      params.tag = tag;\n    }\n    return [params];\n  });\n}\n\nexports.add_context = function add_context(context) {\n  var public_ids = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  var callback = arguments[2];\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return call_context_api(context, 'add', public_ids, callback, options);\n};\n\nexports.remove_all_context = function remove_all_context() {\n  var public_ids = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var callback = arguments[1];\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return call_context_api(null, 'remove_all', public_ids, callback, options);\n};\n\nfunction call_context_api(context, command) {\n  var public_ids = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : [];\n  var callback = arguments[3];\n  var options = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n\n  return call_api('context', callback, options, function () {\n    var params = {\n      timestamp: utils.timestamp(),\n      public_ids: utils.build_array(public_ids),\n      command: command,\n      type: options.type\n    };\n    if (context != null) {\n      params.context = utils.encode_context(context);\n    }\n    return [params];\n  });\n}\n\n/**\n * Cache (part of) the upload results.\n * @param result\n * @param {object} options\n * @param {string} options.type\n * @param {string} options.resource_type\n */\nfunction cacheResults(result, _ref) {\n  var type = _ref.type,\n      resource_type = _ref.resource_type;\n\n  if (result.responsive_breakpoints) {\n    result.responsive_breakpoints.forEach(function (_ref2) {\n      var transformation = _ref2.transformation,\n          url = _ref2.url,\n          breakpoints = _ref2.breakpoints;\n      return Cache.set(result.public_id, { type, resource_type, raw_transformation: transformation, format: extname(breakpoints[0].url).slice(1) }, breakpoints.map(function (i) {\n        return i.width;\n      }));\n    });\n  }\n}\n\nfunction parseResult(buffer, res) {\n  var result = '';\n  try {\n    result = JSON.parse(buffer);\n    if (result.error && !result.error.name) {\n      result.error.name = \"Error\";\n    }\n  } catch (jsonError) {\n    result = {\n      error: {\n        message: `Server return invalid JSON response. Status Code ${res.statusCode}. ${jsonError}`,\n        name: \"Error\"\n      }\n    };\n  }\n  return result;\n}\n\nfunction call_api(action, callback, options, get_params) {\n  if (typeof callback !== \"function\") {\n    callback = function callback() {};\n  }\n\n  var USE_PROMISES = !options.disable_promises;\n\n  var deferred = Q.defer();\n  if (options == null) {\n    options = {};\n  }\n\n  var _get_params$call = get_params.call(),\n      _get_params$call2 = _slicedToArray(_get_params$call, 3),\n      params = _get_params$call2[0],\n      unsigned_params = _get_params$call2[1],\n      file = _get_params$call2[2];\n\n  params = utils.process_request_params(params, options);\n  params = extend(params, unsigned_params);\n  var api_url = utils.api_url(action, options);\n  var boundary = utils.random_public_id();\n  var errorRaised = false;\n  var handle_response = function handle_response(res) {\n    // let buffer;\n    if (errorRaised) {\n\n      // Already reported\n    } else if (res.error) {\n      errorRaised = true;\n\n      if (USE_PROMISES) {\n        deferred.reject(res);\n      }\n      callback(res);\n    } else if (includes([200, 400, 401, 404, 420, 500], res.statusCode)) {\n      var buffer = \"\";\n      res.on(\"data\", function (d) {\n        buffer += d;\n        return buffer;\n      });\n      res.on(\"end\", function () {\n        var result = void 0;\n        if (errorRaised) {\n          return;\n        }\n        result = parseResult(buffer, res);\n        if (result.error) {\n          result.error.http_code = res.statusCode;\n          if (USE_PROMISES) {\n            deferred.reject(result.error);\n          }\n        } else {\n          cacheResults(result, options);\n          if (USE_PROMISES) {\n            deferred.resolve(result);\n          }\n        }\n        callback(result);\n      });\n      res.on(\"error\", function (error) {\n        errorRaised = true;\n        if (USE_PROMISES) {\n          deferred.reject(error);\n        }\n        callback({ error });\n      });\n    } else {\n      var error = {\n        message: `Server returned unexpected status code - ${res.statusCode}`,\n        http_code: res.statusCode,\n        name: \"UnexpectedResponse\"\n      };\n      if (USE_PROMISES) {\n        deferred.reject(error);\n      }\n      callback({ error });\n    }\n  };\n  var post_data = utils.hashToParameters(params).filter(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return value != null;\n  }).map(function (_ref5) {\n    var _ref6 = _slicedToArray(_ref5, 2),\n        key = _ref6[0],\n        value = _ref6[1];\n\n    return Buffer.from(encodeFieldPart(boundary, key, value), 'utf8');\n  });\n  var result = post(api_url, post_data, boundary, file, handle_response, options);\n  if (isObject(result)) {\n    return result;\n  }\n\n  if (USE_PROMISES) {\n    return deferred.promise;\n  }\n}\n\nfunction post(url, post_data, boundary, file, callback, options) {\n  var file_header = void 0;\n  var finish_buffer = Buffer.from(\"--\" + boundary + \"--\", 'ascii');\n  var oauth_token = options.oauth_token || config().oauth_token;\n  if (file != null || options.stream) {\n    // eslint-disable-next-line no-nested-ternary\n    var filename = options.stream ? options.filename ? options.filename : \"file\" : basename(file);\n    file_header = Buffer.from(encodeFilePart(boundary, 'application/octet-stream', 'file', filename), 'binary');\n  }\n  var post_options = urlLib.parse(url);\n  var headers = {\n    'Content-Type': `multipart/form-data; boundary=${boundary}`,\n    'User-Agent': utils.getUserAgent()\n  };\n  if (options.content_range != null) {\n    headers['Content-Range'] = options.content_range;\n  }\n  if (options.x_unique_upload_id != null) {\n    headers['X-Unique-Upload-Id'] = options.x_unique_upload_id;\n  }\n  if (options.extra_headers !== null) {\n    headers = merge(headers, options.extra_headers);\n  }\n  if (oauth_token != null) {\n    headers.Authorization = `Bearer ${oauth_token}`;\n  }\n\n  post_options = extend(post_options, {\n    method: 'POST',\n    headers: headers\n  });\n  if (options.agent != null) {\n    post_options.agent = options.agent;\n  }\n  var proxy = options.api_proxy || config().api_proxy;\n  if (!isEmpty(proxy)) {\n    if (!post_options.agent && agent) {\n      post_options.agent = agent;\n    } else if (!post_options.agent) {\n      post_options.agent = new https.Agent(proxy);\n    } else {\n      console.warn(\"Proxy is set, but request uses a custom agent, proxy is ignored.\");\n    }\n  }\n\n  var post_request = https.request(post_options, callback);\n  var upload_stream = new UploadStream({ boundary });\n  upload_stream.pipe(post_request);\n  var timeout = false;\n  post_request.on(\"error\", function (error) {\n    if (timeout) {\n      error = {\n        message: \"Request Timeout\",\n        http_code: 499,\n        name: \"TimeoutError\"\n      };\n    }\n    return callback({ error });\n  });\n  post_request.setTimeout(options.timeout != null ? options.timeout : 60000, function () {\n    timeout = true;\n    return post_request.abort();\n  });\n  post_data.forEach(function (postDatum) {\n    return post_request.write(postDatum);\n  });\n  if (options.stream) {\n    post_request.write(file_header);\n    return upload_stream;\n  }\n  if (file != null) {\n    post_request.write(file_header);\n    fs.createReadStream(file).on('error', function (error) {\n      callback({\n        error: error\n      });\n      return post_request.abort();\n    }).pipe(upload_stream);\n  } else {\n    post_request.write(finish_buffer);\n    post_request.end();\n  }\n  return true;\n}\n\nfunction encodeFieldPart(boundary, name, value) {\n  return [`--${boundary}`, `Content-Disposition: form-data; name=\"${name}\"`, '', value, ''].join(\"\\r\\n\");\n}\n\nfunction encodeFilePart(boundary, type, name, filename) {\n  return [`--${boundary}`, `Content-Disposition: form-data; name=\"${name}\"; filename=\"${filename}\"`, `Content-Type: ${type}`, '', ''].join(\"\\r\\n\");\n}\n\nexports.direct_upload = function direct_upload(callback_url) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var params = build_upload_params(extend({\n    callback: callback_url\n  }, options));\n  params = utils.process_request_params(params, options);\n  var api_url = utils.api_url(\"upload\", options);\n  return {\n    hidden_fields: params,\n    form_attrs: {\n      action: api_url,\n      method: \"POST\",\n      enctype: \"multipart/form-data\"\n    }\n  };\n};\n\nexports.upload_tag_params = function upload_tag_params() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var params = build_upload_params(options);\n  params = utils.process_request_params(params, options);\n  return JSON.stringify(params);\n};\n\nexports.upload_url = function upload_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.resource_type == null) {\n    options.resource_type = \"auto\";\n  }\n  return utils.api_url(\"upload\", options);\n};\n\nexports.image_upload_tag = function image_upload_tag(field) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var html_options = options.html || {};\n  var tag_options = extend({\n    type: \"file\",\n    name: \"file\",\n    \"data-url\": exports.upload_url(options),\n    \"data-form-data\": exports.upload_tag_params(options),\n    \"data-cloudinary-field\": field,\n    \"data-max-chunk-size\": options.chunk_size,\n    \"class\": [html_options.class, \"cloudinary-fileupload\"].join(\" \")\n  }, html_options);\n  return `<input ${utils.html_attrs(tag_options)}/>`;\n};\n\nexports.unsigned_image_upload_tag = function unsigned_image_upload_tag(field, upload_preset) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  return exports.image_upload_tag(field, merge(options, {\n    unsigned: true,\n    upload_preset: upload_preset\n  }));\n};\n\n/**\n * Populates metadata fields with the given values. Existing values will be overwritten.\n *\n * @param {Object}   metadata   A list of custom metadata fields (by external_id) and the values to assign to each\n * @param {Array}    public_ids The public IDs of the resources to update\n * @param {Function} callback   Callback function\n * @param {Object}   options    Configuration options\n *\n * @return {Object}\n */\nexports.update_metadata = function update_metadata(metadata, public_ids, callback) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  return call_api(\"metadata\", callback, options, function () {\n    var params = {\n      metadata: utils.encode_context(metadata),\n      public_ids: utils.build_array(public_ids),\n      timestamp: utils.timestamp(),\n      type: options.type,\n      clear_invalid: options.clear_invalid\n    };\n    return [params];\n  });\n};"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}