{"ast":null,"code":"const api = require('./api');\nconst config = require('../config');\nconst {\n  isEmpty,\n  isNumber,\n  compute_hash,\n  build_distribution_domain,\n  clear_blank,\n  sort_object_by_key\n} = require('../utils');\nconst {\n  base64Encode\n} = require('../utils/encoding/base64Encode');\nconst Search = class Search {\n  constructor() {\n    this.query_hash = {\n      sort_by: [],\n      aggregate: [],\n      with_field: []\n    };\n    this._ttl = 300;\n  }\n  static instance() {\n    return new Search();\n  }\n  static expression(value) {\n    return this.instance().expression(value);\n  }\n  static max_results(value) {\n    return this.instance().max_results(value);\n  }\n  static next_cursor(value) {\n    return this.instance().next_cursor(value);\n  }\n  static aggregate(value) {\n    return this.instance().aggregate(value);\n  }\n  static with_field(value) {\n    return this.instance().with_field(value);\n  }\n  static sort_by(field_name, dir = 'asc') {\n    return this.instance().sort_by(field_name, dir);\n  }\n  static ttl(newTtl) {\n    return this.instance().ttl(newTtl);\n  }\n  expression(value) {\n    this.query_hash.expression = value;\n    return this;\n  }\n  max_results(value) {\n    this.query_hash.max_results = value;\n    return this;\n  }\n  next_cursor(value) {\n    this.query_hash.next_cursor = value;\n    return this;\n  }\n  aggregate(value) {\n    const found = this.query_hash.aggregate.find(v => v === value);\n    if (!found) {\n      this.query_hash.aggregate.push(value);\n    }\n    return this;\n  }\n  with_field(value) {\n    const found = this.query_hash.with_field.find(v => v === value);\n    if (!found) {\n      this.query_hash.with_field.push(value);\n    }\n    return this;\n  }\n  sort_by(field_name, dir = \"desc\") {\n    let sort_bucket;\n    sort_bucket = {};\n    sort_bucket[field_name] = dir;\n\n    // Check if this field name is already stored in the hash\n    const previously_sorted_obj = this.query_hash.sort_by.find(sort_by => sort_by[field_name]);\n\n    // Since objects are references in Javascript, we can update the reference we found\n    // For example,\n    if (previously_sorted_obj) {\n      previously_sorted_obj[field_name] = dir;\n    } else {\n      this.query_hash.sort_by.push(sort_bucket);\n    }\n    return this;\n  }\n  ttl(newTtl) {\n    if (isNumber(newTtl)) {\n      this._ttl = newTtl;\n      return this;\n    }\n    throw new Error('New TTL value has to be a Number.');\n  }\n  to_query() {\n    Object.keys(this.query_hash).forEach(k => {\n      let v = this.query_hash[k];\n      if (!isNumber(v) && isEmpty(v)) {\n        delete this.query_hash[k];\n      }\n    });\n    return this.query_hash;\n  }\n  execute(options, callback) {\n    if (callback === null) {\n      callback = options;\n    }\n    options = options || {};\n    return api.search(this.to_query(), options, callback);\n  }\n  to_url(ttl, next_cursor, options = {}) {\n    const apiSecret = 'api_secret' in options ? options.api_secret : config().api_secret;\n    if (!apiSecret) {\n      throw new Error('Must supply api_secret');\n    }\n    const urlTtl = ttl || this._ttl;\n    const query = this.to_query();\n    let urlCursor = next_cursor;\n    if (query.next_cursor && !next_cursor) {\n      urlCursor = query.next_cursor;\n    }\n    delete query.next_cursor;\n    const dataOrderedByKey = sort_object_by_key(clear_blank(query));\n    const encodedQuery = base64Encode(JSON.stringify(dataOrderedByKey));\n    const urlPrefix = build_distribution_domain(options.source, options);\n    const signature = compute_hash(`${urlTtl}${encodedQuery}${apiSecret}`, 'sha256', 'hex');\n    const urlWithoutCursor = `${urlPrefix}/search/${signature}/${urlTtl}/${encodedQuery}`;\n    return urlCursor ? `${urlWithoutCursor}/${urlCursor}` : urlWithoutCursor;\n  }\n};\nmodule.exports = Search;","map":{"version":3,"names":["api","require","config","isEmpty","isNumber","compute_hash","build_distribution_domain","clear_blank","sort_object_by_key","base64Encode","Search","constructor","query_hash","sort_by","aggregate","with_field","_ttl","instance","expression","value","max_results","next_cursor","field_name","dir","ttl","newTtl","found","find","v","push","sort_bucket","previously_sorted_obj","Error","to_query","Object","keys","forEach","k","execute","options","callback","search","to_url","apiSecret","api_secret","urlTtl","query","urlCursor","dataOrderedByKey","encodedQuery","JSON","stringify","urlPrefix","source","signature","urlWithoutCursor","module","exports"],"sources":["C:/Users/PC/Documents/GitHub/IntercambioPropiedades/front-end/node_modules/cloudinary/lib/v2/search.js"],"sourcesContent":["const api = require('./api');\nconst config = require('../config');\nconst {\n  isEmpty,\n  isNumber,\n  compute_hash,\n  build_distribution_domain,\n  clear_blank,\n  sort_object_by_key\n} = require('../utils');\nconst {base64Encode} = require('../utils/encoding/base64Encode');\n\nconst Search = class Search {\n  constructor() {\n    this.query_hash = {\n      sort_by: [],\n      aggregate: [],\n      with_field: []\n    };\n    this._ttl = 300;\n  }\n\n  static instance() {\n    return new Search();\n  }\n\n  static expression(value) {\n    return this.instance().expression(value);\n  }\n\n  static max_results(value) {\n    return this.instance().max_results(value);\n  }\n\n  static next_cursor(value) {\n    return this.instance().next_cursor(value);\n  }\n\n  static aggregate(value) {\n    return this.instance().aggregate(value);\n  }\n\n  static with_field(value) {\n    return this.instance().with_field(value);\n  }\n\n  static sort_by(field_name, dir = 'asc') {\n    return this.instance().sort_by(field_name, dir);\n  }\n\n  static ttl(newTtl) {\n    return this.instance().ttl(newTtl);\n  }\n\n  expression(value) {\n    this.query_hash.expression = value;\n    return this;\n  }\n\n  max_results(value) {\n    this.query_hash.max_results = value;\n    return this;\n  }\n\n  next_cursor(value) {\n    this.query_hash.next_cursor = value;\n    return this;\n  }\n\n  aggregate(value) {\n    const found = this.query_hash.aggregate.find(v => v === value);\n\n    if (!found) {\n      this.query_hash.aggregate.push(value);\n    }\n\n    return this;\n  }\n\n  with_field(value) {\n    const found = this.query_hash.with_field.find(v => v === value);\n\n    if (!found) {\n      this.query_hash.with_field.push(value);\n    }\n\n    return this;\n  }\n\n  sort_by(field_name, dir = \"desc\") {\n    let sort_bucket;\n    sort_bucket = {};\n    sort_bucket[field_name] = dir;\n\n    // Check if this field name is already stored in the hash\n    const previously_sorted_obj = this.query_hash.sort_by.find((sort_by) => sort_by[field_name]);\n\n    // Since objects are references in Javascript, we can update the reference we found\n    // For example,\n    if (previously_sorted_obj) {\n      previously_sorted_obj[field_name] = dir;\n    } else {\n      this.query_hash.sort_by.push(sort_bucket);\n    }\n\n    return this;\n  }\n\n  ttl(newTtl) {\n    if (isNumber(newTtl)) {\n      this._ttl = newTtl;\n      return this;\n    }\n\n    throw new Error('New TTL value has to be a Number.');\n  }\n\n  to_query() {\n    Object.keys(this.query_hash).forEach((k) => {\n      let v = this.query_hash[k];\n      if (!isNumber(v) && isEmpty(v)) {\n        delete this.query_hash[k];\n      }\n    });\n    return this.query_hash;\n  }\n\n  execute(options, callback) {\n    if (callback === null) {\n      callback = options;\n    }\n    options = options || {};\n    return api.search(this.to_query(), options, callback);\n  }\n\n  to_url(ttl, next_cursor, options = {}) {\n    const apiSecret = 'api_secret' in options ? options.api_secret : config().api_secret;\n    if (!apiSecret) {\n      throw new Error('Must supply api_secret');\n    }\n\n    const urlTtl = ttl || this._ttl;\n\n    const query = this.to_query();\n\n    let urlCursor = next_cursor;\n    if (query.next_cursor && !next_cursor) {\n      urlCursor = query.next_cursor;\n    }\n    delete query.next_cursor;\n\n    const dataOrderedByKey = sort_object_by_key(clear_blank(query));\n    const encodedQuery = base64Encode(JSON.stringify(dataOrderedByKey));\n\n    const urlPrefix = build_distribution_domain(options.source, options);\n\n    const signature = compute_hash(`${urlTtl}${encodedQuery}${apiSecret}`, 'sha256', 'hex');\n\n    const urlWithoutCursor = `${urlPrefix}/search/${signature}/${urlTtl}/${encodedQuery}`;\n    return urlCursor ? `${urlWithoutCursor}/${urlCursor}` : urlWithoutCursor;\n  }\n};\n\nmodule.exports = Search;\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}