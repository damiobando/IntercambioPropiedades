{"ast":null,"code":"var _jsxFileName = \"/Users/sebas2002cr/Desktop/ProyectoIngenieria/IntercambioPropiedades/front-end/src/components/PropertyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropertyCard from './PropertyCard';\nimport Pagination from './Pagination';\nimport './PropertyList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyList = () => {\n  _s();\n  // Estado para manejar la lista de propiedades\n  const [properties, setProperties] = useState([]);\n  // Estado para manejar la página actual\n  const [currentPage, setCurrentPage] = useState(1);\n  // Estado para manejar el número de propiedades por página\n  const [propertiesPerPage] = useState(10); // Puedes ajustar este número según tus necesidades\n\n  // Lógica para obtener las propiedades, por ejemplo, usando una API\n  useEffect(() => {\n    // Lógica para obtener las propiedades (puedes usar fetch o axios)\n    // y actualizar el estado de las propiedades\n    // Ejemplo: fetchProperties().then(data => setProperties(data));\n  }, []); // Se ejecuta solo al montar el componente\n\n  // Lógica para la paginación\n  const indexOfLastProperty = currentPage * propertiesPerPage;\n  const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\n  const currentProperties = properties.slice(indexOfFirstProperty, indexOfLastProperty);\n\n  // Cambiar de página\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar propiedades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), currentProperties.map(property => /*#__PURE__*/_jsxDEV(PropertyCard, {\n      property: property\n    }, property.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 9\n    }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n      propertiesPerPage: propertiesPerPage,\n      totalProperties: properties.length,\n      currentPage: currentPage,\n      paginate: paginate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyList, \"m613hurdoe9YGMEI3C1CxCWVw/8=\");\n_c = PropertyList;\nexport default PropertyList;\nvar _c;\n$RefreshReg$(_c, \"PropertyList\");","map":{"version":3,"names":["React","useState","useEffect","PropertyCard","Pagination","jsxDEV","_jsxDEV","PropertyList","_s","properties","setProperties","currentPage","setCurrentPage","propertiesPerPage","indexOfLastProperty","indexOfFirstProperty","currentProperties","slice","paginate","pageNumber","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","property","id","totalProperties","length","_c","$RefreshReg$"],"sources":["/Users/sebas2002cr/Desktop/ProyectoIngenieria/IntercambioPropiedades/front-end/src/components/PropertyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport PropertyCard from './PropertyCard'; \nimport Pagination from './Pagination'; \nimport './PropertyList.css'\n\nconst PropertyList = () => {\n  // Estado para manejar la lista de propiedades\n  const [properties, setProperties] = useState([]);\n  // Estado para manejar la página actual\n  const [currentPage, setCurrentPage] = useState(1);\n  // Estado para manejar el número de propiedades por página\n  const [propertiesPerPage] = useState(10); // Puedes ajustar este número según tus necesidades\n\n  // Lógica para obtener las propiedades, por ejemplo, usando una API\n  useEffect(() => {\n    // Lógica para obtener las propiedades (puedes usar fetch o axios)\n    // y actualizar el estado de las propiedades\n    // Ejemplo: fetchProperties().then(data => setProperties(data));\n  }, []); // Se ejecuta solo al montar el componente\n\n  // Lógica para la paginación\n  const indexOfLastProperty = currentPage * propertiesPerPage;\n  const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\n  const currentProperties = properties.slice(indexOfFirstProperty, indexOfLastProperty);\n\n  // Cambiar de página\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\n\n  return (\n    <div className='main'>\n      {/* Search Bar (puedes implementar un componente separado si es necesario) */}\n      <input type=\"text\" placeholder=\"Buscar propiedades\" />\n\n      {/* Lista de propiedades */}\n      {currentProperties.map((property) => (\n        <PropertyCard key={property.id} property={property} />\n      ))}\n\n      {/* Paginación */}\n      <Pagination\n        propertiesPerPage={propertiesPerPage}\n        totalProperties={properties.length}\n        currentPage={currentPage}\n        paginate={paginate}\n      />\n    </div>\n  );\n};\n\nexport default PropertyList;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD;EACA,MAAM,CAACY,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd;IACA;IACA;EAAA,CACD,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMY,mBAAmB,GAAGH,WAAW,GAAGE,iBAAiB;EAC3D,MAAME,oBAAoB,GAAGD,mBAAmB,GAAGD,iBAAiB;EACpE,MAAMG,iBAAiB,GAAGP,UAAU,CAACQ,KAAK,CAACF,oBAAoB,EAAED,mBAAmB,CAAC;;EAErF;EACA,MAAMI,QAAQ,GAAIC,UAAU,IAAKP,cAAc,CAACO,UAAU,CAAC;EAE3D,oBACEb,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,gBAEnBf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAGrDX,iBAAiB,CAACY,GAAG,CAAEC,QAAQ,iBAC9BvB,OAAA,CAACH,YAAY;MAAmB0B,QAAQ,EAAEA;IAAS,GAAhCA,QAAQ,CAACC,EAAE;MAAAN,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAuB,CACtD,CAAC,eAGFrB,OAAA,CAACF,UAAU;MACTS,iBAAiB,EAAEA,iBAAkB;MACrCkB,eAAe,EAAEtB,UAAU,CAACuB,MAAO;MACnCrB,WAAW,EAAEA,WAAY;MACzBO,QAAQ,EAAEA;IAAS;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACpB,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV,CAAC;AAACnB,EAAA,CA1CID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA4ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}