{"ast":null,"code":"\"use strict\";\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n  return target;\n};\nvar _slicedToArray = function () {\n  function sliceIterator(arr, i) {\n    var _arr = [];\n    var _n = true;\n    var _d = false;\n    var _e = undefined;\n    try {\n      for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) {\n        _arr.push(_s.value);\n        if (i && _arr.length === i) break;\n      }\n    } catch (err) {\n      _d = true;\n      _e = err;\n    } finally {\n      try {\n        if (!_n && _i[\"return\"]) _i[\"return\"]();\n      } finally {\n        if (_d) throw _e;\n      }\n    }\n    return _arr;\n  }\n  return function (arr, i) {\n    if (Array.isArray(arr)) {\n      return arr;\n    } else if (Symbol.iterator in Object(arr)) {\n      return sliceIterator(arr, i);\n    } else {\n      throw new TypeError(\"Invalid attempt to destructure non-iterable instance\");\n    }\n  };\n}();\nfunction _toConsumableArray(arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {\n      arr2[i] = arr[i];\n    }\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n}\n\n/**\n * Utilities\n * @module utils\n * @borrows module:auth_token as generate_auth_token\n */\n\nvar crypto = require(\"crypto\");\nvar querystring = require(\"querystring\");\nvar urlParse = require(\"url\").parse;\n\n// Functions used internally\nvar compact = require(\"lodash/compact\");\nvar first = require(\"lodash/first\");\nvar isFunction = require(\"lodash/isFunction\");\nvar isPlainObject = require(\"lodash/isPlainObject\");\nvar last = require(\"lodash/last\");\nvar map = require(\"lodash/map\");\nvar take = require(\"lodash/take\");\nvar at = require(\"lodash/at\");\n\n// Exposed by the module\nvar clone = require(\"lodash/clone\");\nvar extend = require(\"lodash/extend\");\nvar filter = require(\"lodash/filter\");\nvar includes = require(\"lodash/includes\");\nvar isArray = require(\"lodash/isArray\");\nvar isEmpty = require(\"lodash/isEmpty\");\nvar isNumber = require(\"lodash/isNumber\");\nvar isObject = require(\"lodash/isObject\");\nvar isString = require(\"lodash/isString\");\nvar isUndefined = require(\"lodash/isUndefined\");\nvar smart_escape = require(\"./encoding/smart_escape\");\nvar consumeOption = require('./parsing/consumeOption');\nvar toArray = require('./parsing/toArray');\nvar _require = require('./encoding/base64EncodeURL'),\n  base64EncodeURL = _require.base64EncodeURL;\nvar encodeDoubleArray = require('./encoding/encodeDoubleArray');\nvar config = require(\"../config\");\nvar generate_token = require(\"../auth_token\");\nvar crc32 = require('./crc32');\nvar ensurePresenceOf = require('./ensurePresenceOf');\nvar ensureOption = require('./ensureOption').defaults(config());\nvar entries = require('./entries');\nvar isRemoteUrl = require('./isRemoteUrl');\nvar getSDKVersions = require('./encoding/sdkAnalytics/getSDKVersions');\nvar _require$Util = require('cloudinary-core').Util,\n  getAnalyticsOptions = _require$Util.getAnalyticsOptions,\n  getSDKAnalyticsSignature = _require$Util.getSDKAnalyticsSignature;\nexports = module.exports;\nvar utils = module.exports;\ntry {\n  // eslint-disable-next-line global-require\n  utils.VERSION = require('../../package.json').version;\n} catch (error) {\n  utils.VERSION = '';\n}\nfunction generate_auth_token(options) {\n  var token_options = Object.assign({}, config().auth_token, options);\n  return generate_token(token_options);\n}\nexports.CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\nexports.OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\nexports.AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\nexports.SHARED_CDN = exports.AKAMAI_SHARED_CDN;\nexports.USER_AGENT = `CloudinaryNodeJS/${exports.VERSION} (Node ${process.versions.node})`;\n\n// Add platform information to the USER_AGENT header\n// This is intended for platform information and not individual applications!\nexports.userPlatform = \"\";\nfunction getUserAgent() {\n  return isEmpty(utils.userPlatform) ? `${utils.USER_AGENT}` : `${utils.userPlatform} ${utils.USER_AGENT}`;\n}\nvar _require2 = require('./consts'),\n  DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION = _require2.DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION,\n  DEFAULT_POSTER_OPTIONS = _require2.DEFAULT_POSTER_OPTIONS,\n  DEFAULT_VIDEO_SOURCE_TYPES = _require2.DEFAULT_VIDEO_SOURCE_TYPES,\n  CONDITIONAL_OPERATORS = _require2.CONDITIONAL_OPERATORS,\n  PREDEFINED_VARS = _require2.PREDEFINED_VARS,\n  LAYER_KEYWORD_PARAMS = _require2.LAYER_KEYWORD_PARAMS,\n  TRANSFORMATION_PARAMS = _require2.TRANSFORMATION_PARAMS,\n  SIMPLE_PARAMS = _require2.SIMPLE_PARAMS,\n  UPLOAD_PREFIX = _require2.UPLOAD_PREFIX,\n  SUPPORTED_SIGNATURE_ALGORITHMS = _require2.SUPPORTED_SIGNATURE_ALGORITHMS,\n  DEFAULT_SIGNATURE_ALGORITHM = _require2.DEFAULT_SIGNATURE_ALGORITHM;\nfunction textStyle(layer) {\n  var keywords = [];\n  var style = \"\";\n  if (!isEmpty(layer.text_style)) {\n    return layer.text_style;\n  }\n  Object.keys(LAYER_KEYWORD_PARAMS).forEach(function (attr) {\n    var default_value = LAYER_KEYWORD_PARAMS[attr];\n    var attr_value = layer[attr] || default_value;\n    if (attr_value !== default_value) {\n      keywords.push(attr_value);\n    }\n  });\n  Object.keys(layer).forEach(function (attr) {\n    if (attr === \"letter_spacing\" || attr === \"line_spacing\") {\n      keywords.push(`${attr}_${layer[attr]}`);\n    }\n    if (attr === \"font_hinting\") {\n      keywords.push(`${attr.split(\"_\").pop()}_${layer[attr]}`);\n    }\n    if (attr === \"font_antialiasing\") {\n      keywords.push(`antialias_${layer[attr]}`);\n    }\n  });\n  if (layer.hasOwnProperty(\"font_size\" || \"font_family\") || !isEmpty(keywords)) {\n    if (!layer.font_size) throw new Error('Must supply font_size for text in overlay/underlay');\n    if (!layer.font_family) throw new Error('Must supply font_family for text in overlay/underlay');\n    keywords.unshift(layer.font_size);\n    keywords.unshift(layer.font_family);\n    style = compact(keywords).join(\"_\");\n  }\n  return style;\n}\n\n/**\n * Normalize an expression string, replace \"nice names\" with their coded values and spaces with \"_\"\n * e.g. `width > 0` => `w_lt_0`\n *\n * @param {String} expression An expression to be normalized\n * @return {Object|String} A normalized String of the input value if possible otherwise the value itself\n */\nfunction normalize_expression(expression) {\n  if (!isString(expression) || expression.length === 0 || expression.match(/^!.+!$/)) {\n    return expression;\n  }\n  var operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\^|\\\\+|\\\\*\";\n  var operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\n  var operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\n  expression = expression.replace(operatorsReplaceRE, function (match) {\n    return CONDITIONAL_OPERATORS[match];\n  });\n\n  // Duplicate PREDEFINED_VARS to also include :{var_name} as well as {var_name}\n  // Example:\n  // -- PREDEFINED_VARS = ['foo']\n  // -- predefinedVarsPattern = ':foo|foo'\n  // It is done like this because node 6 does not support regex lookbehind\n  var predefinedVarsPattern = \"(\" + Object.keys(PREDEFINED_VARS).map(function (v) {\n    return `:${v}|${v}`;\n  }).join(\"|\") + \")\";\n  var userVariablePattern = '(\\\\$_*[^_ ]+)';\n  var variablesReplaceRE = new RegExp(`${userVariablePattern}|${predefinedVarsPattern}`, \"g\");\n  expression = expression.replace(variablesReplaceRE, function (match) {\n    return PREDEFINED_VARS[match] || match;\n  });\n  return expression.replace(/[ _]+/g, '_');\n}\n\n/**\n * Parse custom_function options\n * @private\n * @param {object|*} customFunction a custom function object containing function_type and source values\n * @return {string|*} custom_function transformation string\n */\nfunction process_custom_function(customFunction) {\n  if (!isObject(customFunction)) {\n    return customFunction;\n  }\n  if (customFunction.function_type === \"remote\") {\n    var encodedSource = base64EncodeURL(customFunction.source);\n    return [customFunction.function_type, encodedSource].join(\":\");\n  }\n  return [customFunction.function_type, customFunction.source].join(\":\");\n}\n\n/**\n * Parse custom_pre_function options\n * @private\n * @param {object|*} customPreFunction a custom function object containing function_type and source values\n * @return {string|*} custom_pre_function transformation string\n */\nfunction process_custom_pre_function(customPreFunction) {\n  var result = process_custom_function(customPreFunction);\n  return utils.isString(result) ? `pre:${result}` : null;\n}\n\n/**\n * Parse \"if\" parameter\n * Translates the condition if provided.\n * @private\n * @return {string} \"if_\" + ifValue\n */\nfunction process_if(ifValue) {\n  return ifValue ? \"if_\" + normalize_expression(ifValue) : ifValue;\n}\n\n/**\n * Parse layer options\n * @private\n * @param {object|*} layer The layer to parse.\n * @return {string} layer transformation string\n */\nfunction process_layer(layer) {\n  if (isString(layer)) {\n    var resourceType = null;\n    var layerUrl = '';\n    var fetchLayerBegin = 'fetch:';\n    if (layer.startsWith(fetchLayerBegin)) {\n      layerUrl = layer.substring(fetchLayerBegin.length);\n    } else if (layer.indexOf(':fetch:', 0) !== -1) {\n      var parts = layer.split(':', 3);\n      resourceType = parts[0];\n      layerUrl = parts[2];\n    } else {\n      return layer;\n    }\n    layer = {\n      url: layerUrl,\n      type: 'fetch'\n    };\n    if (resourceType) {\n      layer.resource_type = resourceType;\n    }\n  }\n  if (typeof layer !== 'object') {\n    return layer;\n  }\n  var _layer = layer,\n    resource_type = _layer.resource_type,\n    text = _layer.text,\n    type = _layer.type,\n    public_id = _layer.public_id,\n    format = _layer.format,\n    fetchUrl = _layer.url;\n  var components = [];\n  if (!isEmpty(text) && isEmpty(resource_type)) {\n    resource_type = 'text';\n  }\n  if (!isEmpty(fetchUrl) && isEmpty(type)) {\n    type = 'fetch';\n  }\n  if (!isEmpty(public_id) && !isEmpty(format)) {\n    public_id = `${public_id}.${format}`;\n  }\n  if (isEmpty(public_id) && resource_type !== 'text' && type !== 'fetch') {\n    throw new Error('Must supply public_id for non-text overlay');\n  }\n  if (!isEmpty(resource_type) && resource_type !== 'image') {\n    components.push(resource_type);\n  }\n  if (!isEmpty(type) && type !== 'upload') {\n    components.push(type);\n  }\n  if (resource_type === 'text' || resource_type === 'subtitles') {\n    if (isEmpty(public_id) && isEmpty(text)) {\n      throw new Error('Must supply either text or public_in in overlay');\n    }\n    var textOptions = textStyle(layer);\n    if (!isEmpty(textOptions)) {\n      components.push(textOptions);\n    }\n    if (!isEmpty(public_id)) {\n      public_id = public_id.replace('/', ':');\n      components.push(public_id);\n    }\n    if (!isEmpty(text)) {\n      var variablesRegex = new RegExp(/(\\$\\([a-zA-Z]\\w+\\))/g);\n      var textDividedByVariables = text.split(variablesRegex).filter(function (x) {\n        return x;\n      });\n      var encodedParts = textDividedByVariables.map(function (subText) {\n        var matches = variablesRegex[Symbol.match](subText);\n        var isVariable = matches ? matches.length > 0 : false;\n        if (isVariable) {\n          return subText;\n        }\n        return encodeCurlyBraces(encodeURIComponent(smart_escape(subText, new RegExp(/([,\\/])/g))));\n      });\n      components.push(encodedParts.join(''));\n    }\n  } else if (type === 'fetch') {\n    var encodedUrl = base64EncodeURL(fetchUrl);\n    components.push(encodedUrl);\n  } else {\n    public_id = public_id.replace('/', ':');\n    components.push(public_id);\n  }\n  return components.join(':');\n}\nfunction replaceAllSubstrings(string, search) {\n  var replacement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n  return string.split(search).join(replacement);\n}\nfunction encodeCurlyBraces(input) {\n  return replaceAllSubstrings(replaceAllSubstrings(input, '(', '%28'), ')', '%29');\n}\n\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} radius The radius to parse\n * @return {string} radius transformation string\n */\nfunction process_radius(radius) {\n  if (!radius) {\n    return radius;\n  }\n  if (!isArray(radius)) {\n    radius = [radius];\n  }\n  if (radius.length === 0 || radius.length > 4) {\n    throw new Error(\"Radius array should contain between 1 and 4 values\");\n  }\n  if (radius.findIndex(function (x) {\n    return x === null;\n  }) >= 0) {\n    throw new Error(\"Corner: Cannot be null\");\n  }\n  return radius.map(normalize_expression).join(':');\n}\nfunction build_multi_and_sprite_params(tagOrOptions, options) {\n  var tag = null;\n  if (typeof tagOrOptions === 'string') {\n    tag = tagOrOptions;\n  } else {\n    if (isEmpty(options)) {\n      options = tagOrOptions;\n    } else {\n      throw new Error('First argument must be a tag when additional options are passed');\n    }\n    tag = null;\n  }\n  if (!options && !tag) {\n    throw new Error('Either tag or urls are required');\n  }\n  if (!options) {\n    options = {};\n  }\n  var urls = options.urls;\n  var transformation = generate_transformation_string(extend({}, options, {\n    fetch_format: options.format\n  }));\n  return {\n    tag,\n    transformation,\n    urls,\n    timestamp: utils.timestamp(),\n    async: options.async,\n    notification_url: options.notification_url\n  };\n}\nfunction build_upload_params(options) {\n  var params = {\n    access_mode: options.access_mode,\n    allowed_formats: options.allowed_formats && toArray(options.allowed_formats).join(\",\"),\n    asset_folder: options.asset_folder,\n    async: utils.as_safe_bool(options.async),\n    backup: utils.as_safe_bool(options.backup),\n    callback: options.callback,\n    cinemagraph_analysis: utils.as_safe_bool(options.cinemagraph_analysis),\n    colors: utils.as_safe_bool(options.colors),\n    display_name: options.display_name,\n    discard_original_filename: utils.as_safe_bool(options.discard_original_filename),\n    eager: utils.build_eager(options.eager),\n    eager_async: utils.as_safe_bool(options.eager_async),\n    eager_notification_url: options.eager_notification_url,\n    eval: options.eval,\n    exif: utils.as_safe_bool(options.exif),\n    faces: utils.as_safe_bool(options.faces),\n    folder: options.folder,\n    format: options.format,\n    filename_override: options.filename_override,\n    image_metadata: utils.as_safe_bool(options.image_metadata),\n    media_metadata: utils.as_safe_bool(options.media_metadata),\n    invalidate: utils.as_safe_bool(options.invalidate),\n    moderation: options.moderation,\n    notification_url: options.notification_url,\n    overwrite: utils.as_safe_bool(options.overwrite),\n    phash: utils.as_safe_bool(options.phash),\n    proxy: options.proxy,\n    public_id: options.public_id,\n    public_id_prefix: options.public_id_prefix,\n    quality_analysis: utils.as_safe_bool(options.quality_analysis),\n    responsive_breakpoints: utils.generate_responsive_breakpoints_string(options.responsive_breakpoints),\n    return_delete_token: utils.as_safe_bool(options.return_delete_token),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformation: utils.generate_transformation_string(clone(options)),\n    type: options.type,\n    unique_filename: utils.as_safe_bool(options.unique_filename),\n    upload_preset: options.upload_preset,\n    use_filename: utils.as_safe_bool(options.use_filename),\n    use_filename_as_display_name: utils.as_safe_bool(options.use_filename_as_display_name),\n    quality_override: options.quality_override,\n    accessibility_analysis: utils.as_safe_bool(options.accessibility_analysis),\n    use_asset_folder_as_public_id_prefix: utils.as_safe_bool(options.use_asset_folder_as_public_id_prefix),\n    visual_search: utils.as_safe_bool(options.visual_search),\n    on_success: options.on_success\n  };\n  return utils.updateable_resource_params(options, params);\n}\nfunction encode_key_value(arg) {\n  if (!isObject(arg)) {\n    return arg;\n  }\n  return entries(arg).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n      k = _ref2[0],\n      v = _ref2[1];\n    return `${k}=${v}`;\n  }).join('|');\n}\n\n/**\n * @description Escape = and | with two backslashes \\\\\n * @param {string|number} value\n * @return {string}\n */\nfunction escapeMetadataValue(value) {\n  return value.toString().replace(/([=|])/g, '\\\\$&');\n}\n\n/**\n *\n * @description Encode metadata fields based on incoming value.\n *              If array, escape as color_id=[\\\"green\\\",\\\"red\\\"]\n *              If string/number, escape as in_stock_id=50\n *\n *              Joins resulting values with a pipe:\n *              in_stock_id=50|color_id=[\\\"green\\\",\\\"red\\\"]\n *\n *              = and | and escaped by default (this can't be turned off)\n *\n * @param metadataObj\n * @return {string}\n */\nfunction encode_context(metadataObj) {\n  if (!isObject(metadataObj)) {\n    return metadataObj;\n  }\n  return entries(metadataObj).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n      key = _ref4[0],\n      value = _ref4[1];\n\n    // if string, simply parse the value and move on\n    if (isString(value)) {\n      return `${key}=${escapeMetadataValue(value)}`;\n\n      // If array, parse each item individually\n    } else if (isArray(value)) {\n      var values = value.map(function (innerVal) {\n        return `\\\"${escapeMetadataValue(innerVal)}\\\"`;\n      }).join(',');\n      return `${key}=[${values}]`;\n      // if number, convert to string\n    } else if (Number.isInteger(value)) {\n      return `${key}=${escapeMetadataValue(String(value))}`;\n      // if unknown, return the value as string\n    } else {\n      return value.toString();\n    }\n  }).join('|');\n}\nfunction build_eager(transformations) {\n  return toArray(transformations).map(function (transformation) {\n    var transformationString = utils.generate_transformation_string(clone(transformation));\n    var format = transformation.format;\n    return format == null ? transformationString : `${transformationString}/${format}`;\n  }).join('|');\n}\n\n/**\n * Build the custom headers for the request\n * @private\n * @param headers\n * @return {Array<string>|object|string} An object of name and value,\n *         an array of header strings, or a string of headers\n */\nfunction build_custom_headers(headers) {\n  switch (true) {\n    case headers == null:\n      return void 0;\n    case isArray(headers):\n      return headers.join(\"\\n\");\n    case isObject(headers):\n      return entries(headers).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n          k = _ref6[0],\n          v = _ref6[1];\n        return `${k}:${v}`;\n      }).join(\"\\n\");\n    default:\n      return headers;\n  }\n}\nfunction generate_transformation_string(options) {\n  if (utils.isString(options)) {\n    return options;\n  }\n  if (isArray(options)) {\n    return options.map(function (t) {\n      return utils.generate_transformation_string(clone(t));\n    }).filter(utils.present).join('/');\n  }\n  var responsive_width = consumeOption(options, \"responsive_width\", config().responsive_width);\n  var width = options.width;\n  var height = options.height;\n  var size = consumeOption(options, \"size\");\n  if (size) {\n    var _size$split = size.split(\"x\");\n    var _size$split2 = _slicedToArray(_size$split, 2);\n    width = _size$split2[0];\n    height = _size$split2[1];\n    var _ref7 = [width, height];\n    options.width = _ref7[0];\n    options.height = _ref7[1];\n  }\n  var has_layer = options.overlay || options.underlay;\n  var crop = consumeOption(options, \"crop\");\n  var angle = toArray(consumeOption(options, \"angle\")).join(\".\");\n  var no_html_sizes = has_layer || utils.present(angle) || crop === \"fit\" || crop === \"limit\" || responsive_width;\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width) < 1)) {\n    delete options.width;\n  }\n  if (height && (no_html_sizes || parseFloat(height) < 1)) {\n    delete options.height;\n  }\n  var background = consumeOption(options, \"background\");\n  background = background && background.replace(/^#/, \"rgb:\");\n  var color = consumeOption(options, \"color\");\n  color = color && color.replace(/^#/, \"rgb:\");\n  var base_transformations = toArray(consumeOption(options, \"transformation\", []));\n  var named_transformation = [];\n  if (base_transformations.some(isObject)) {\n    base_transformations = base_transformations.map(function (tr) {\n      return utils.generate_transformation_string(isObject(tr) ? clone(tr) : {\n        transformation: tr\n      });\n    });\n  } else {\n    named_transformation = base_transformations.join(\".\");\n    base_transformations = [];\n  }\n  var effect = consumeOption(options, \"effect\");\n  if (isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = entries(effect).map(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n        key = _ref9[0],\n        value = _ref9[1];\n      return `${key}:${value}`;\n    });\n  }\n  var border = consumeOption(options, \"border\");\n  if (isObject(border)) {\n    border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n  } else if (/^\\d+$/.exec(border)) {\n    // fallback to html border attributes\n    options.border = border;\n    border = void 0;\n  }\n  var flags = toArray(consumeOption(options, \"flags\")).join(\".\");\n  var dpr = consumeOption(options, \"dpr\", config().dpr);\n  if (options.offset != null) {\n    var _split_range = split_range(consumeOption(options, \"offset\"));\n    var _split_range2 = _slicedToArray(_split_range, 2);\n    options.start_offset = _split_range2[0];\n    options.end_offset = _split_range2[1];\n  }\n  if (options.start_offset) {\n    options.start_offset = normalize_expression(options.start_offset);\n  }\n  if (options.end_offset) {\n    options.end_offset = normalize_expression(options.end_offset);\n  }\n  var overlay = process_layer(consumeOption(options, \"overlay\"));\n  var radius = process_radius(consumeOption(options, \"radius\"));\n  var underlay = process_layer(consumeOption(options, \"underlay\"));\n  var ifValue = process_if(consumeOption(options, \"if\"));\n  var custom_function = process_custom_function(consumeOption(options, \"custom_function\"));\n  var custom_pre_function = process_custom_pre_function(consumeOption(options, \"custom_pre_function\"));\n  var fps = consumeOption(options, 'fps');\n  if (isArray(fps)) {\n    fps = fps.join('-');\n  }\n  var params = {\n    a: normalize_expression(angle),\n    ar: normalize_expression(consumeOption(options, \"aspect_ratio\")),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: normalize_expression(dpr),\n    e: normalize_expression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: normalize_expression(height),\n    ki: normalize_expression(consumeOption(options, \"keyframe_interval\")),\n    l: overlay,\n    o: normalize_expression(consumeOption(options, \"opacity\")),\n    q: normalize_expression(consumeOption(options, \"quality\")),\n    r: radius,\n    t: named_transformation,\n    u: underlay,\n    w: normalize_expression(width),\n    x: normalize_expression(consumeOption(options, \"x\")),\n    y: normalize_expression(consumeOption(options, \"y\")),\n    z: normalize_expression(consumeOption(options, \"zoom\"))\n  };\n  SIMPLE_PARAMS.forEach(function (_ref10) {\n    var _ref11 = _slicedToArray(_ref10, 2),\n      name = _ref11[0],\n      short = _ref11[1];\n    var value = consumeOption(options, name);\n    if (value !== undefined) {\n      params[short] = value;\n    }\n  });\n  if (params.vc != null) {\n    params.vc = process_video_params(params.vc);\n  }\n  [\"so\", \"eo\", \"du\"].forEach(function (short) {\n    if (params[short] !== undefined) {\n      params[short] = norm_range_value(params[short]);\n    }\n  });\n  var variablesParam = consumeOption(options, \"variables\", []);\n  var variables = entries(options).filter(function (_ref12) {\n    var _ref13 = _slicedToArray(_ref12, 2),\n      key = _ref13[0],\n      value = _ref13[1];\n    return key.startsWith('$');\n  }).map(function (_ref14) {\n    var _ref15 = _slicedToArray(_ref14, 2),\n      key = _ref15[0],\n      value = _ref15[1];\n    delete options[key];\n    return `${key}_${normalize_expression(value)}`;\n  }).sort().concat(variablesParam.map(function (_ref16) {\n    var _ref17 = _slicedToArray(_ref16, 2),\n      name = _ref17[0],\n      value = _ref17[1];\n    return `${name}_${normalize_expression(value)}`;\n  })).join(',');\n  var transformations = entries(params).filter(function (_ref18) {\n    var _ref19 = _slicedToArray(_ref18, 2),\n      key = _ref19[0],\n      value = _ref19[1];\n    return utils.present(value);\n  }).map(function (_ref20) {\n    var _ref21 = _slicedToArray(_ref20, 2),\n      key = _ref21[0],\n      value = _ref21[1];\n    return key + '_' + value;\n  }).sort().join(',');\n  var raw_transformation = consumeOption(options, 'raw_transformation');\n  transformations = compact([ifValue, variables, transformations, raw_transformation]).join(\",\");\n  base_transformations.push(transformations);\n  transformations = base_transformations;\n  if (responsive_width) {\n    var responsive_width_transformation = config().responsive_width_transformation || DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION;\n    transformations.push(utils.generate_transformation_string(clone(responsive_width_transformation)));\n  }\n  if (String(width).startsWith(\"auto\") || responsive_width) {\n    options.responsive = true;\n  }\n  if (dpr === \"auto\") {\n    options.hidpi = true;\n  }\n  return filter(transformations, utils.present).join(\"/\");\n}\nfunction updateable_resource_params(options) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  if (options.access_control != null) {\n    params.access_control = utils.jsonArrayParam(options.access_control);\n  }\n  if (options.auto_tagging != null) {\n    params.auto_tagging = options.auto_tagging;\n  }\n  if (options.background_removal != null) {\n    params.background_removal = options.background_removal;\n  }\n  if (options.categorization != null) {\n    params.categorization = options.categorization;\n  }\n  if (options.context != null) {\n    params.context = utils.encode_context(options.context);\n  }\n  if (options.metadata != null) {\n    params.metadata = utils.encode_context(options.metadata);\n  }\n  if (options.custom_coordinates != null) {\n    params.custom_coordinates = encodeDoubleArray(options.custom_coordinates);\n  }\n  if (options.detection != null) {\n    params.detection = options.detection;\n  }\n  if (options.face_coordinates != null) {\n    params.face_coordinates = encodeDoubleArray(options.face_coordinates);\n  }\n  if (options.headers != null) {\n    params.headers = utils.build_custom_headers(options.headers);\n  }\n  if (options.notification_url != null) {\n    params.notification_url = options.notification_url;\n  }\n  if (options.ocr != null) {\n    params.ocr = options.ocr;\n  }\n  if (options.raw_convert != null) {\n    params.raw_convert = options.raw_convert;\n  }\n  if (options.similarity_search != null) {\n    params.similarity_search = options.similarity_search;\n  }\n  if (options.tags != null) {\n    params.tags = toArray(options.tags).join(\",\");\n  }\n  if (options.quality_override != null) {\n    params.quality_override = options.quality_override;\n  }\n  if (options.asset_folder != null) {\n    params.asset_folder = options.asset_folder;\n  }\n  if (options.display_name != null) {\n    params.display_name = options.display_name;\n  }\n  if (options.unique_display_name != null) {\n    params.unique_display_name = options.unique_display_name;\n  }\n  if (options.visual_search != null) {\n    params.visual_search = options.visual_search;\n  }\n  return params;\n}\n\n/**\n * A list of keys used by the url() function.\n * @private\n */\nvar URL_KEYS = ['api_secret', 'auth_token', 'cdn_subdomain', 'cloud_name', 'cname', 'format', 'long_url_signature', 'private_cdn', 'resource_type', 'secure', 'secure_cdn_subdomain', 'secure_distribution', 'shorten', 'sign_url', 'ssl_detected', 'type', 'url_suffix', 'use_root_path', 'version'];\n\n/**\n * Create a new object with only URL parameters\n * @param {object} options The source object\n * @return {Object} An object containing only URL parameters\n */\n\nfunction extractUrlParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(URL_KEYS));\n}\n\n/**\n * Create a new object with only transformation parameters\n * @param {object} options The source object\n * @return {Object} An object containing only transformation parameters\n */\n\nfunction extractTransformationParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(_toConsumableArray(TRANSFORMATION_PARAMS)));\n}\n\n/**\n * Handle the format parameter for fetch urls\n * @private\n * @param options url and transformation options. This argument may be changed by the function!\n */\n\nfunction patchFetchFormat() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  if (options.type === \"fetch\") {\n    if (options.fetch_format == null) {\n      options.fetch_format = consumeOption(options, \"format\");\n    }\n  }\n}\nfunction build_distribution_domain(source, options) {\n  var cloud_name = consumeOption(options, 'cloud_name', config().cloud_name);\n  if (!cloud_name) {\n    throw new Error('Must supply cloud_name in tag or in configuration');\n  }\n  var secure = consumeOption(options, 'secure', null);\n  var ssl_detected = consumeOption(options, 'ssl_detected', config().ssl_detected);\n  if (secure === null) {\n    secure = ssl_detected || config().secure;\n  }\n  var private_cdn = consumeOption(options, 'private_cdn', config().private_cdn);\n  var cname = consumeOption(options, 'cname', config().cname);\n  var secure_distribution = consumeOption(options, 'secure_distribution', config().secure_distribution);\n  var cdn_subdomain = consumeOption(options, 'cdn_subdomain', config().cdn_subdomain);\n  var secure_cdn_subdomain = consumeOption(options, 'secure_cdn_subdomain', config().secure_cdn_subdomain);\n  return unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution);\n}\nfunction url(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var signature = void 0,\n    source_to_sign = void 0;\n  utils.patchFetchFormat(options);\n  var type = consumeOption(options, \"type\", null);\n  var transformation = utils.generate_transformation_string(options);\n  var resource_type = consumeOption(options, \"resource_type\", \"image\");\n  var version = consumeOption(options, \"version\");\n  var force_version = consumeOption(options, \"force_version\", config().force_version);\n  if (force_version == null) {\n    force_version = true;\n  }\n  var long_url_signature = !!consumeOption(options, \"long_url_signature\", config().long_url_signature);\n  var format = consumeOption(options, \"format\");\n  var shorten = consumeOption(options, \"shorten\", config().shorten);\n  var sign_url = consumeOption(options, \"sign_url\", config().sign_url);\n  var api_secret = consumeOption(options, \"api_secret\", config().api_secret);\n  var url_suffix = consumeOption(options, \"url_suffix\");\n  var use_root_path = consumeOption(options, \"use_root_path\", config().use_root_path);\n  var signature_algorithm = consumeOption(options, \"signature_algorithm\", config().signature_algorithm || DEFAULT_SIGNATURE_ALGORITHM);\n  if (long_url_signature) {\n    signature_algorithm = 'sha256';\n  }\n  var auth_token = consumeOption(options, \"auth_token\");\n  if (auth_token !== false) {\n    auth_token = exports.merge(config().auth_token, auth_token);\n  }\n  var preloaded = /^(image|raw)\\/([a-z0-9_]+)\\/v(\\d+)\\/([^#]+)$/.exec(public_id);\n  if (preloaded) {\n    resource_type = preloaded[1];\n    type = preloaded[2];\n    version = preloaded[3];\n    public_id = preloaded[4];\n  }\n  var original_source = public_id;\n  if (public_id == null) {\n    return original_source;\n  }\n  public_id = public_id.toString();\n  if (type === null && public_id.match(/^https?:\\//i)) {\n    return original_source;\n  }\n  var _finalize_resource_ty = finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten);\n  var _finalize_resource_ty2 = _slicedToArray(_finalize_resource_ty, 2);\n  resource_type = _finalize_resource_ty2[0];\n  type = _finalize_resource_ty2[1];\n  var _finalize_source = finalize_source(public_id, format, url_suffix);\n  var _finalize_source2 = _slicedToArray(_finalize_source, 2);\n  public_id = _finalize_source2[0];\n  source_to_sign = _finalize_source2[1];\n  if (version == null && force_version && source_to_sign.indexOf(\"/\") >= 0 && !source_to_sign.match(/^v[0-9]+/) && !source_to_sign.match(/^https?:\\//)) {\n    version = 1;\n  }\n  if (version != null) {\n    version = `v${version}`;\n  } else {\n    version = null;\n  }\n  transformation = transformation.replace(/([^:])\\/\\//g, '$1/');\n  if (sign_url && isEmpty(auth_token)) {\n    var to_sign = [transformation, source_to_sign].filter(function (part) {\n      return part != null && part !== '';\n    }).join('/');\n    var signatureConfig = {};\n    if (long_url_signature) {\n      signatureConfig.algorithm = 'sha256';\n      signatureConfig.signatureLength = 32;\n    } else {\n      signatureConfig.algorithm = signature_algorithm;\n      signatureConfig.signatureLength = 8;\n    }\n    var truncated = compute_hash(to_sign + api_secret, signatureConfig.algorithm, 'base64').slice(0, signatureConfig.signatureLength).replace(/\\//g, '_').replace(/\\+/g, '-');\n    signature = `s--${truncated}--`;\n  }\n  var prefix = build_distribution_domain(public_id, options);\n  var resultUrl = [prefix, resource_type, type, signature, transformation, version, public_id].filter(function (part) {\n    return part != null && part !== '';\n  }).join('/').replace(/ /g, '%20');\n  if (sign_url && !isEmpty(auth_token)) {\n    auth_token.url = urlParse(resultUrl).path;\n    var token = generate_token(auth_token);\n    resultUrl += `?${token}`;\n  }\n  var urlAnalytics = ensureOption(options, 'urlAnalytics', false);\n  if (urlAnalytics === true) {\n    var _getSDKVersions = getSDKVersions(),\n      sdkCode = _getSDKVersions.sdkCode,\n      sdkSemver = _getSDKVersions.sdkSemver,\n      techVersion = _getSDKVersions.techVersion;\n    var sdkVersions = {\n      sdkCode: ensureOption(options, 'sdkCode', sdkCode),\n      sdkSemver: ensureOption(options, 'sdkSemver', sdkSemver),\n      techVersion: ensureOption(options, 'techVersion', techVersion)\n    };\n    var analyticsOptions = getAnalyticsOptions(Object.assign({}, options, sdkVersions));\n    var sdkAnalyticsSignature = getSDKAnalyticsSignature(analyticsOptions);\n\n    // url might already have a '?' query param\n    var appender = '?';\n    if (resultUrl.indexOf('?') >= 0) {\n      appender = '&';\n    }\n    resultUrl = `${resultUrl}${appender}_a=${sdkAnalyticsSignature}`;\n  }\n  return resultUrl;\n}\nfunction video_url(public_id, options) {\n  options = extend({\n    resource_type: 'video'\n  }, options);\n  return utils.url(public_id, options);\n}\nfunction finalize_source(source, format, url_suffix) {\n  var source_to_sign = void 0;\n  source = source.replace(/([^:])\\/\\//g, '$1/');\n  if (source.match(/^https?:\\//i)) {\n    source = smart_escape(source);\n    source_to_sign = source;\n  } else {\n    source = encodeURIComponent(decodeURIComponent(source)).replace(/%3A/g, \":\").replace(/%2F/g, \"/\");\n    source_to_sign = source;\n    if (url_suffix) {\n      if (url_suffix.match(/[\\.\\/]/)) {\n        throw new Error('url_suffix should not include . or /');\n      }\n      source = source + '/' + url_suffix;\n    }\n    if (format != null) {\n      source = source + '.' + format;\n      source_to_sign = source_to_sign + '.' + format;\n    }\n  }\n  return [source, source_to_sign];\n}\nfunction video_thumbnail_url(public_id, options) {\n  options = extend({}, DEFAULT_POSTER_OPTIONS, options);\n  return utils.url(public_id, options);\n}\nfunction finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten) {\n  if (type == null) {\n    type = 'upload';\n  }\n  if (url_suffix != null) {\n    if (resource_type === 'image' && type === 'upload') {\n      resource_type = \"images\";\n      type = null;\n    } else if (resource_type === 'image' && type === 'private') {\n      resource_type = 'private_images';\n      type = null;\n    } else if (resource_type === 'image' && type === 'authenticated') {\n      resource_type = 'authenticated_images';\n      type = null;\n    } else if (resource_type === 'raw' && type === 'upload') {\n      resource_type = 'files';\n      type = null;\n    } else if (resource_type === 'video' && type === 'upload') {\n      resource_type = 'videos';\n      type = null;\n    } else {\n      throw new Error(\"URL Suffix only supported for image/upload, image/private, image/authenticated, video/upload and raw/upload\");\n    }\n  }\n  if (use_root_path) {\n    if (resource_type === 'image' && type === 'upload' || resource_type === 'images' && type == null) {\n      resource_type = null;\n      type = null;\n    } else {\n      throw new Error(\"Root path only supported for image/upload\");\n    }\n  }\n  if (shorten && resource_type === 'image' && type === 'upload') {\n    resource_type = 'iu';\n    type = null;\n  }\n  return [resource_type, type];\n}\n\n// cdn_subdomain and secure_cdn_subdomain\n// 1) Customers in shared distribution (e.g. res.cloudinary.com)\n//    if cdn_domain is true uses res-[1-5].cloudinary.com for both http and https.\n//    Setting secure_cdn_subdomain to false disables this for https.\n// 2) Customers with private cdn\n//    if cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for http\n//    if secure_cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for https\n//      (please contact support if you require this)\n// 3) Customers with cname\n//    if cdn_domain is true uses a[1-5].cname for http.\n//    For https, uses the same naming scheme as 1 for shared distribution and as 2 for private distribution.\n\nfunction unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution) {\n  var prefix = void 0;\n  if (cloud_name.indexOf(\"/\") === 0) {\n    return '/res' + cloud_name;\n  }\n  var shared_domain = !private_cdn;\n  if (secure) {\n    if (secure_distribution == null || secure_distribution === exports.OLD_AKAMAI_SHARED_CDN) {\n      secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : exports.SHARED_CDN;\n    }\n    if (shared_domain == null) {\n      shared_domain = secure_distribution === exports.SHARED_CDN;\n    }\n    if (secure_cdn_subdomain == null && shared_domain) {\n      secure_cdn_subdomain = cdn_subdomain;\n    }\n    if (secure_cdn_subdomain) {\n      secure_distribution = secure_distribution.replace('res.cloudinary.com', 'res-' + (crc32(source) % 5 + 1 + '.cloudinary.com'));\n    }\n    prefix = 'https://' + secure_distribution;\n  } else if (cname) {\n    var subdomain = cdn_subdomain ? 'a' + (crc32(source) % 5 + 1) + '.' : '';\n    prefix = 'http://' + subdomain + cname;\n  } else {\n    var cdn_part = private_cdn ? cloud_name + '-' : '';\n    var subdomain_part = cdn_subdomain ? '-' + (crc32(source) % 5 + 1) : '';\n    var host = [cdn_part, 'res', subdomain_part, '.cloudinary.com'].join('');\n    prefix = 'http://' + host;\n  }\n  if (shared_domain) {\n    prefix += '/' + cloud_name;\n  }\n  return prefix;\n}\nfunction base_api_url() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var cloudinary = ensureOption(options, \"upload_prefix\", UPLOAD_PREFIX);\n  var cloud_name = ensureOption(options, \"cloud_name\");\n  var encode_path = function encode_path(unencoded_path) {\n    return encodeURIComponent(unencoded_path).replace(\"'\", '%27');\n  };\n  var encoded_path = Array.isArray(path) ? path.map(encode_path) : encode_path(path);\n  return [cloudinary, \"v1_1\", cloud_name].concat(encoded_path).join(\"/\");\n}\nfunction api_url() {\n  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'upload';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var resource_type = options.resource_type || \"image\";\n  return base_api_url([resource_type, action], options);\n}\nfunction random_public_id() {\n  return crypto.randomBytes(12).toString('base64').replace(/[^a-z0-9]/g, \"\");\n}\nfunction signed_preloaded_image(result) {\n  return `${result.resource_type}/upload/v${result.version}/${filter([result.public_id, result.format], utils.present).join(\".\")}#${result.signature}`;\n}\nfunction api_sign_request(params_to_sign, api_secret) {\n  var to_sign = entries(params_to_sign).filter(function (_ref22) {\n    var _ref23 = _slicedToArray(_ref22, 2),\n      k = _ref23[0],\n      v = _ref23[1];\n    return utils.present(v);\n  }).map(function (_ref24) {\n    var _ref25 = _slicedToArray(_ref24, 2),\n      k = _ref25[0],\n      v = _ref25[1];\n    return `${k}=${toArray(v).join(\",\")}`;\n  }).sort().join(\"&\");\n  return compute_hash(to_sign + api_secret, config().signature_algorithm || DEFAULT_SIGNATURE_ALGORITHM, 'hex');\n}\n\n/**\n * Computes hash from input string using specified algorithm.\n * @private\n * @param {string} input string which to compute hash from\n * @param {string} signature_algorithm algorithm to use for computing hash\n * @param {string} encoding type of encoding\n * @return {string} computed hash value\n */\nfunction compute_hash(input, signature_algorithm, encoding) {\n  if (!SUPPORTED_SIGNATURE_ALGORITHMS.includes(signature_algorithm)) {\n    throw new Error(`Signature algorithm ${signature_algorithm} is not supported. Supported algorithms: ${SUPPORTED_SIGNATURE_ALGORITHMS.join(', ')}`);\n  }\n  var hash = crypto.createHash(signature_algorithm).update(input).digest();\n  return Buffer.from(hash).toString(encoding);\n}\nfunction clear_blank(hash) {\n  var filtered_hash = {};\n  entries(hash).filter(function (_ref26) {\n    var _ref27 = _slicedToArray(_ref26, 2),\n      k = _ref27[0],\n      v = _ref27[1];\n    return utils.present(v);\n  }).forEach(function (_ref28) {\n    var _ref29 = _slicedToArray(_ref28, 2),\n      k = _ref29[0],\n      v = _ref29[1];\n    filtered_hash[k] = v.filter ? v.filter(function (x) {\n      return x;\n    }) : v;\n  });\n  return filtered_hash;\n}\nfunction sort_object_by_key(object) {\n  return Object.keys(object).sort().reduce(function (obj, key) {\n    obj[key] = object[key];\n    return obj;\n  }, {});\n}\nfunction merge(hash1, hash2) {\n  return _extends({}, hash1, hash2);\n}\nfunction sign_request(params) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var apiKey = ensureOption(options, 'api_key');\n  var apiSecret = ensureOption(options, 'api_secret');\n  params = exports.clear_blank(params);\n  params.signature = exports.api_sign_request(params, apiSecret);\n  params.api_key = apiKey;\n  return params;\n}\nfunction webhook_signature(data, timestamp) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  ensurePresenceOf({\n    data,\n    timestamp\n  });\n  var api_secret = ensureOption(options, 'api_secret');\n  var signature_algorithm = ensureOption(options, 'signature_algorithm', DEFAULT_SIGNATURE_ALGORITHM);\n  return compute_hash(data + timestamp + api_secret, signature_algorithm, 'hex');\n}\n\n/**\n * Verifies the authenticity of a notification signature\n *\n * @param {string} body JSON of the request's body\n * @param {number} timestamp Unix timestamp in seconds. Can be retrieved from the X-Cld-Timestamp header\n * @param {string} signature Actual signature. Can be retrieved from the X-Cld-Signature header\n * @param {number} [valid_for=7200] The desired time in seconds for considering the request valid\n *\n * @return {boolean}\n */\nfunction verifyNotificationSignature(body, timestamp, signature) {\n  var valid_for = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7200;\n\n  // verify that signature is valid for the given timestamp\n  if (timestamp < Math.round(Date.now() / 1000) - valid_for) {\n    return false;\n  }\n  var payload_hash = utils.webhook_signature(body, timestamp, {\n    api_secret: config().api_secret,\n    signature_algorithm: config().signature_algorithm\n  });\n  return signature === payload_hash;\n}\nfunction process_request_params(params, options) {\n  if (options.unsigned != null && options.unsigned) {\n    params = exports.clear_blank(params);\n    delete params.timestamp;\n  } else if (options.oauth_token || config().oauth_token) {\n    params = exports.clear_blank(params);\n  } else if (options.signature) {\n    params = exports.clear_blank(options);\n  } else {\n    params = exports.sign_request(params, options);\n  }\n  return params;\n}\nfunction private_download_url(public_id, format) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    public_id: public_id,\n    format: format,\n    type: options.type,\n    attachment: options.attachment,\n    expires_at: options.expires_at\n  }, options);\n  return exports.api_url(\"download\", options) + \"?\" + querystring.stringify(params);\n}\n\n/**\n * Utility method that uses the deprecated ZIP download API.\n * @deprecated Replaced by {download_zip_url} that uses the more advanced and robust archive generation and download API\n */\n\nfunction zip_download_url(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    tag: tag,\n    transformation: utils.generate_transformation_string(options)\n  }, options);\n  return exports.api_url(\"download_tag.zip\", options) + \"?\" + hashToQuery(params);\n}\n\n/**\n * The returned url should allow downloading the backedup asset based on the\n * version and asset id\n * asset and version id are returned with resource(<PUBLIC_ID1>, { versions: true })\n * @param asset_id\n * @param version_id\n * @param options\n * @returns {string }\n */\nfunction download_backedup_asset(asset_id, version_id) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    asset_id: asset_id,\n    version_id: version_id\n  }, options);\n  return exports.base_api_url(['download_backup'], options) + \"?\" + hashToQuery(params);\n}\n\n/**\n * Utility method to create a signed URL for specified resources.\n * @param action\n * @param params\n * @param options\n */\nfunction api_download_url(action, params, options) {\n  var download_params = _extends({}, params, {\n    mode: \"download\"\n  });\n  var cloudinary_params = exports.sign_request(download_params, options);\n  return exports.api_url(action, options) + \"?\" + hashToQuery(cloudinary_params);\n}\n\n/**\n * Returns a URL that when invokes creates an archive and returns it.\n * @param {object} options\n * @param {string} [options.resource_type=\"image\"] The resource type of files to include in the archive.\n *   Must be one of :image | :video | :raw\n * @param {string} [options.type=\"upload\"] The specific file type of resources: :upload|:private|:authenticated\n * @param {string|Array} [options.tags] list of tags to include in the archive\n * @param {string|Array<string>} [options.public_ids] list of public_ids to include in the archive\n * @param {string|Array<string>} [options.prefixes]  list of prefixes of public IDs (e.g., folders).\n * @param {string|Array<string>} [options.fully_qualified_public_ids] list of fully qualified public_ids to include\n *   in the archive.\n * @param {string|Array<string>} [options.transformations]  list of transformations.\n *   The derived images of the given transformations are included in the archive. Using the string representation of\n *   multiple chained transformations as we use for the 'eager' upload parameter.\n * @param {string} [options.mode=\"create\"] return the generated archive file or to store it as a raw resource and\n *   return a JSON with URLs for accessing the archive. Possible values: :download, :create\n * @param {string} [options.target_format=\"zip\"]\n * @param {string} [options.target_public_id]  public ID of the generated raw resource.\n *   Relevant only for the create mode. If not specified, random public ID is generated.\n * @param {boolean} [options.flatten_folders=false] If true, flatten public IDs with folders to be in the root\n *   of the archive. Add numeric counter to the file name in case of a name conflict.\n * @param {boolean} [options.flatten_transformations=false] If true, and multiple transformations are given,\n *   flatten the folder structure of derived images and store the transformation details on the file name instead.\n * @param {boolean} [options.use_original_filename] Use the original file name of included images\n *   (if available) instead of the public ID.\n * @param {boolean} [options.async=false] If true, return immediately and perform archive creation in the background.\n *   Relevant only for the create mode.\n * @param {string} [options.notification_url] URL to send an HTTP post request (webhook) to when the\n *   archive creation is completed.\n * @param {string|Array<string>} [options.target_tags=] Allows assigning one or more tags to the generated archive file\n *   (for later housekeeping via the admin API).\n * @param {string} [options.keep_derived=false] keep the derived images used for generating the archive\n * @return {String} archive url\n */\nfunction download_archive_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var params = exports.archive_params(merge(options, {\n    mode: \"download\"\n  }));\n  return api_download_url(\"generate_archive\", params, options);\n}\n\n/**\n * Returns a URL that when invokes creates an zip archive and returns it.\n * @see download_archive_url\n */\n\nfunction download_zip_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return exports.download_archive_url(merge(options, {\n    target_format: \"zip\"\n  }));\n}\n\n/**\n * Creates and returns a URL that when invoked creates an archive of a folder\n * @param {string} folder_path Full path (from the root) of the folder to download\n * @param {object} options Additional options\n * @returns {string} Url for downloading an archive of a folder\n */\nfunction download_folder(folder_path) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  options.resource_type = options.resource_type || \"all\";\n  options.prefixes = folder_path;\n  var cloudinary_params = exports.sign_request(exports.archive_params(merge(options, {\n    mode: \"download\"\n  })), options);\n  return exports.api_url(\"generate_archive\", options) + \"?\" + hashToQuery(cloudinary_params);\n}\n\n/**\n * Render the key/value pair as an HTML tag attribute\n * @private\n * @param {string} key\n * @param {string|boolean|number} [value]\n * @return {string} A string representing the HTML attribute\n */\nfunction join_pair(key, value) {\n  if (!value) {\n    return void 0;\n  }\n  return value === true ? key : key + \"='\" + value + \"'\";\n}\n\n/**\n * If the given value is a string, replaces single or double quotes with character entities\n * @private\n * @param {*} value The string to encode quotes in\n * @return {*} Encoded string or original value if not a string\n */\nfunction escapeQuotes(value) {\n  return isString(value) ? value.replace(/\\\"/g, '&#34;').replace(/\\'/g, '&#39;') : value;\n}\n\n/**\n *\n * @param attrs\n * @return {*}\n */\nexports.html_attrs = function html_attrs(attrs) {\n  return filter(map(attrs, function (value, key) {\n    return join_pair(key, escapeQuotes(value));\n  })).sort().join(\" \");\n};\nvar CLOUDINARY_JS_CONFIG_PARAMS = ['api_key', 'cloud_name', 'private_cdn', 'secure_distribution', 'cdn_subdomain'];\nfunction cloudinary_js_config() {\n  var params = pickOnlyExistingValues.apply(undefined, [config()].concat(CLOUDINARY_JS_CONFIG_PARAMS));\n  return `<script type='text/javascript'>\\n$.cloudinary.config(${JSON.stringify(params)});\\n</script>`;\n}\nfunction v1_result_adapter(callback) {\n  if (callback == null) {\n    return undefined;\n  }\n  return function (result) {\n    if (result.error != null) {\n      return callback(result.error);\n    }\n    return callback(void 0, result);\n  };\n}\nfunction v1_adapter(name, num_pass_args, v1) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    var pass_args = take(args, num_pass_args);\n    var options = args[num_pass_args];\n    var callback = args[num_pass_args + 1];\n    if (callback == null && isFunction(options)) {\n      callback = options;\n      options = {};\n    }\n    callback = v1_result_adapter(callback);\n    args = pass_args.concat([callback, options]);\n    return v1[name].apply(this, args);\n  };\n}\nfunction v1_adapters(exports, v1, mapping) {\n  return Object.keys(mapping).map(function (name) {\n    var num_pass_args = mapping[name];\n    exports[name] = v1_adapter(name, num_pass_args, v1);\n    return exports[name];\n  });\n}\nfunction as_safe_bool(value) {\n  if (value == null) {\n    return void 0;\n  }\n  if (value === true || value === 'true' || value === '1') {\n    value = 1;\n  }\n  if (value === false || value === 'false' || value === '0') {\n    value = 0;\n  }\n  return value;\n}\nvar NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\nvar OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\nvar RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\nvar OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`);\n\n// Split a range into the start and end values\nfunction split_range(range) {\n  // :nodoc:\n  switch (range.constructor) {\n    case String:\n      if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n        return range;\n      }\n      return range.split(\"..\");\n    case Array:\n      return [first(range), last(range)];\n    default:\n      return [null, null];\n  }\n}\nfunction norm_range_value(value) {\n  // :nodoc:\n  var offset = String(value).match(RANGE_VALUE_RE);\n  if (offset) {\n    var modifier = offset[5] ? 'p' : '';\n    value = `${offset[1] || offset[4]}${modifier}`;\n  }\n  return value;\n}\n\n/**\n * A video codec parameter can be either a String or a Hash.\n * @param {Object} param <code>vc_<codec>[ : <profile> : [<level>]]</code>\n *                       or <code>{ codec: 'h264', profile: 'basic', level: '3.1' }</code>\n * @return {String} <code><codec> : <profile> : [<level>]]</code> if a Hash was provided\n *                   or the param if a String was provided.\n *                   Returns null if param is not a Hash or String\n */\nfunction process_video_params(param) {\n  switch (param.constructor) {\n    case Object:\n      {\n        var video = \"\";\n        if ('codec' in param) {\n          video = param.codec;\n          if ('profile' in param) {\n            video += \":\" + param.profile;\n            if ('level' in param) {\n              video += \":\" + param.level;\n            }\n          }\n        }\n        return video;\n      }\n    case String:\n      return param;\n    default:\n      return null;\n  }\n}\n\n/**\n * Returns a Hash of parameters used to create an archive\n * @private\n * @param {object} options\n * @return {object} Archive API parameters\n */\n\nfunction archive_params() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return {\n    allow_missing: exports.as_safe_bool(options.allow_missing),\n    async: exports.as_safe_bool(options.async),\n    expires_at: options.expires_at,\n    flatten_folders: exports.as_safe_bool(options.flatten_folders),\n    flatten_transformations: exports.as_safe_bool(options.flatten_transformations),\n    keep_derived: exports.as_safe_bool(options.keep_derived),\n    mode: options.mode,\n    notification_url: options.notification_url,\n    prefixes: options.prefixes && toArray(options.prefixes),\n    fully_qualified_public_ids: options.fully_qualified_public_ids && toArray(options.fully_qualified_public_ids),\n    public_ids: options.public_ids && toArray(options.public_ids),\n    skip_transformation_name: exports.as_safe_bool(options.skip_transformation_name),\n    tags: options.tags && toArray(options.tags),\n    target_format: options.target_format,\n    target_public_id: options.target_public_id,\n    target_tags: options.target_tags && toArray(options.target_tags),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformations: utils.build_eager(options.transformations),\n    type: options.type,\n    use_original_filename: exports.as_safe_bool(options.use_original_filename)\n  };\n}\nexports.process_layer = process_layer;\nexports.create_source_tag = function create_source_tag(src, source_type) {\n  var codecs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n  var video_type = source_type === 'ogv' ? 'ogg' : source_type;\n  var mime_type = `video/${video_type}`;\n  if (!isEmpty(codecs)) {\n    var codecs_str = isArray(codecs) ? codecs.join(', ') : codecs;\n    mime_type += `; codecs=${codecs_str}`;\n  }\n  return `<source ${utils.html_attrs({\n    src,\n    type: mime_type\n  })}>`;\n};\nfunction build_explicit_api_params(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  return [exports.build_upload_params(extend({}, {\n    public_id\n  }, options))];\n}\nfunction generate_responsive_breakpoints_string(breakpoints) {\n  if (breakpoints == null) {\n    return null;\n  }\n  breakpoints = clone(breakpoints);\n  if (!isArray(breakpoints)) {\n    breakpoints = [breakpoints];\n  }\n  for (var j = 0; j < breakpoints.length; j++) {\n    var breakpoint_settings = breakpoints[j];\n    if (breakpoint_settings != null) {\n      if (breakpoint_settings.transformation) {\n        breakpoint_settings.transformation = utils.generate_transformation_string(clone(breakpoint_settings.transformation));\n      }\n    }\n  }\n  return JSON.stringify(breakpoints);\n}\nfunction build_streaming_profiles_param() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var params = pickOnlyExistingValues(options, \"display_name\", \"representations\");\n  if (isArray(params.representations)) {\n    params.representations = JSON.stringify(params.representations.map(function (r) {\n      return {\n        transformation: utils.generate_transformation_string(r.transformation)\n      };\n    }));\n  }\n  return params;\n}\nfunction hashToParameters(hash) {\n  return entries(hash).reduce(function (parameters, _ref30) {\n    var _ref31 = _slicedToArray(_ref30, 2),\n      key = _ref31[0],\n      value = _ref31[1];\n    if (isArray(value)) {\n      key = key.endsWith('[]') ? key : key + '[]';\n      var items = value.map(function (v) {\n        return [key, v];\n      });\n      parameters = parameters.concat(items);\n    } else {\n      parameters.push([key, value]);\n    }\n    return parameters;\n  }, []);\n}\n\n/**\n * Convert a hash of values to a URI query string.\n * Array values are spread as individual parameters.\n * @param {object} hash Key-value parameters\n * @return {string} A URI query string.\n */\nfunction hashToQuery(hash) {\n  return hashToParameters(hash).map(function (_ref32) {\n    var _ref33 = _slicedToArray(_ref32, 2),\n      key = _ref33[0],\n      value = _ref33[1];\n    return `${querystring.escape(key)}=${querystring.escape(value)}`;\n  }).join('&');\n}\n\n/**\n * Verify that the parameter `value` is defined and it's string value is not zero.\n * <br>This function should not be confused with `isEmpty()`.\n * @private\n * @param {string|number} value The value to check.\n * @return {boolean} True if the value is defined and not empty.\n */\n\nfunction present(value) {\n  return value != null && (\"\" + value).length > 0;\n}\n\n/**\n * Returns a new object with key values from source based on the keys.\n * `null` or `undefined` values are not copied.\n * @private\n * @param {object} source The object to pick values from.\n * @param {...string} keys One or more keys to copy from source.\n * @return {object} A new object with the required keys and values.\n */\n\nfunction pickOnlyExistingValues(source) {\n  var result = {};\n  if (source) {\n    for (var _len2 = arguments.length, keys = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      keys[_key2 - 1] = arguments[_key2];\n    }\n    keys.forEach(function (key) {\n      if (source[key] != null) {\n        result[key] = source[key];\n      }\n    });\n  }\n  return result;\n}\n\n/**\n * Returns a JSON array as String.\n * Yields the array before it is converted to JSON format\n * @private\n * @param {object|String|Array<object>} data\n * @param {function(*):*} [modifier] called with the array before the array is stringified\n * @return {String|null} a JSON array string or `null` if data is `null`\n */\n\nfunction jsonArrayParam(data, modifier) {\n  if (!data) {\n    return null;\n  }\n  if (isString(data)) {\n    data = JSON.parse(data);\n  }\n  if (!isArray(data)) {\n    data = [data];\n  }\n  if (isFunction(modifier)) {\n    data = modifier(data);\n  }\n  return JSON.stringify(data);\n}\n\n/**\n * Empty function - do nothing\n *\n */\nexports.NOP = function () {};\nexports.generate_auth_token = generate_auth_token;\nexports.getUserAgent = getUserAgent;\nexports.build_upload_params = build_upload_params;\nexports.build_multi_and_sprite_params = build_multi_and_sprite_params;\nexports.api_download_url = api_download_url;\nexports.timestamp = function () {\n  return Math.floor(new Date().getTime() / 1000);\n};\nexports.option_consume = consumeOption; // for backwards compatibility\nexports.build_array = toArray; // for backwards compatibility\nexports.encode_double_array = encodeDoubleArray;\nexports.encode_key_value = encode_key_value;\nexports.encode_context = encode_context;\nexports.build_eager = build_eager;\nexports.build_custom_headers = build_custom_headers;\nexports.generate_transformation_string = generate_transformation_string;\nexports.updateable_resource_params = updateable_resource_params;\nexports.extractUrlParams = extractUrlParams;\nexports.extractTransformationParams = extractTransformationParams;\nexports.patchFetchFormat = patchFetchFormat;\nexports.url = url;\nexports.video_url = video_url;\nexports.video_thumbnail_url = video_thumbnail_url;\nexports.api_url = api_url;\nexports.random_public_id = random_public_id;\nexports.signed_preloaded_image = signed_preloaded_image;\nexports.api_sign_request = api_sign_request;\nexports.clear_blank = clear_blank;\nexports.merge = merge;\nexports.sign_request = sign_request;\nexports.webhook_signature = webhook_signature;\nexports.verifyNotificationSignature = verifyNotificationSignature;\nexports.process_request_params = process_request_params;\nexports.private_download_url = private_download_url;\nexports.zip_download_url = zip_download_url;\nexports.download_archive_url = download_archive_url;\nexports.download_zip_url = download_zip_url;\nexports.cloudinary_js_config = cloudinary_js_config;\nexports.v1_adapters = v1_adapters;\nexports.as_safe_bool = as_safe_bool;\nexports.archive_params = archive_params;\nexports.build_explicit_api_params = build_explicit_api_params;\nexports.generate_responsive_breakpoints_string = generate_responsive_breakpoints_string;\nexports.build_streaming_profiles_param = build_streaming_profiles_param;\nexports.hashToParameters = hashToParameters;\nexports.present = present;\nexports.only = pickOnlyExistingValues; // for backwards compatibility\nexports.pickOnlyExistingValues = pickOnlyExistingValues;\nexports.jsonArrayParam = jsonArrayParam;\nexports.download_folder = download_folder;\nexports.base_api_url = base_api_url;\nexports.download_backedup_asset = download_backedup_asset;\nexports.compute_hash = compute_hash;\nexports.build_distribution_domain = build_distribution_domain;\nexports.sort_object_by_key = sort_object_by_key;\n\n// was exported before, so kept for backwards compatibility\nexports.DEFAULT_POSTER_OPTIONS = DEFAULT_POSTER_OPTIONS;\nexports.DEFAULT_VIDEO_SOURCE_TYPES = DEFAULT_VIDEO_SOURCE_TYPES;\nObject.assign(module.exports, {\n  normalize_expression,\n  at,\n  clone,\n  extend,\n  filter,\n  includes,\n  isArray,\n  isEmpty,\n  isNumber,\n  isObject,\n  isRemoteUrl,\n  isString,\n  isUndefined,\n  keys: function keys(source) {\n    return Object.keys(source);\n  },\n  ensurePresenceOf\n});","map":{"version":3,"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_slicedToArray","sliceIterator","arr","_arr","_n","_d","_e","undefined","_i","Symbol","iterator","_s","next","done","push","value","err","Array","isArray","TypeError","_toConsumableArray","arr2","from","crypto","require","querystring","urlParse","parse","compact","first","isFunction","isPlainObject","last","map","take","at","clone","extend","filter","includes","isEmpty","isNumber","isObject","isString","isUndefined","smart_escape","consumeOption","toArray","_require","base64EncodeURL","encodeDoubleArray","config","generate_token","crc32","ensurePresenceOf","ensureOption","defaults","entries","isRemoteUrl","getSDKVersions","_require$Util","Util","getAnalyticsOptions","getSDKAnalyticsSignature","exports","module","utils","VERSION","version","error","generate_auth_token","options","token_options","auth_token","CF_SHARED_CDN","OLD_AKAMAI_SHARED_CDN","AKAMAI_SHARED_CDN","SHARED_CDN","USER_AGENT","process","versions","node","userPlatform","getUserAgent","_require2","DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION","DEFAULT_POSTER_OPTIONS","DEFAULT_VIDEO_SOURCE_TYPES","CONDITIONAL_OPERATORS","PREDEFINED_VARS","LAYER_KEYWORD_PARAMS","TRANSFORMATION_PARAMS","SIMPLE_PARAMS","UPLOAD_PREFIX","SUPPORTED_SIGNATURE_ALGORITHMS","DEFAULT_SIGNATURE_ALGORITHM","textStyle","layer","keywords","style","text_style","keys","forEach","attr","default_value","attr_value","split","pop","font_size","Error","font_family","unshift","join","normalize_expression","expression","match","operators","operatorsPattern","operatorsReplaceRE","RegExp","replace","predefinedVarsPattern","v","userVariablePattern","variablesReplaceRE","process_custom_function","customFunction","function_type","encodedSource","process_custom_pre_function","customPreFunction","result","process_if","ifValue","process_layer","resourceType","layerUrl","fetchLayerBegin","startsWith","substring","indexOf","parts","url","type","resource_type","_layer","text","public_id","format","fetchUrl","components","textOptions","variablesRegex","textDividedByVariables","x","encodedParts","subText","matches","isVariable","encodeCurlyBraces","encodeURIComponent","encodedUrl","replaceAllSubstrings","string","search","replacement","input","process_radius","radius","findIndex","build_multi_and_sprite_params","tagOrOptions","tag","urls","transformation","generate_transformation_string","fetch_format","timestamp","async","notification_url","build_upload_params","params","access_mode","allowed_formats","asset_folder","as_safe_bool","backup","callback","cinemagraph_analysis","colors","display_name","discard_original_filename","eager","build_eager","eager_async","eager_notification_url","eval","exif","faces","folder","filename_override","image_metadata","media_metadata","invalidate","moderation","overwrite","phash","proxy","public_id_prefix","quality_analysis","responsive_breakpoints","generate_responsive_breakpoints_string","return_delete_token","unique_filename","upload_preset","use_filename","use_filename_as_display_name","quality_override","accessibility_analysis","use_asset_folder_as_public_id_prefix","visual_search","on_success","updateable_resource_params","encode_key_value","arg","_ref","_ref2","k","escapeMetadataValue","toString","encode_context","metadataObj","_ref3","_ref4","values","innerVal","Number","isInteger","String","transformations","transformationString","build_custom_headers","headers","_ref5","_ref6","t","present","responsive_width","width","height","size","_size$split","_size$split2","_ref7","has_layer","overlay","underlay","crop","angle","no_html_sizes","parseFloat","background","color","base_transformations","named_transformation","some","tr","effect","_ref8","_ref9","border","exec","flags","dpr","offset","_split_range","split_range","_split_range2","start_offset","end_offset","custom_function","custom_pre_function","fps","a","ar","b","bo","c","co","e","fl","fn","h","ki","l","o","q","r","u","w","y","z","_ref10","_ref11","name","short","vc","process_video_params","norm_range_value","variablesParam","variables","_ref12","_ref13","_ref14","_ref15","sort","concat","_ref16","_ref17","_ref18","_ref19","_ref20","_ref21","raw_transformation","responsive_width_transformation","responsive","hidpi","access_control","jsonArrayParam","auto_tagging","background_removal","categorization","context","metadata","custom_coordinates","detection","face_coordinates","ocr","raw_convert","similarity_search","tags","unique_display_name","URL_KEYS","extractUrlParams","pickOnlyExistingValues","apply","extractTransformationParams","patchFetchFormat","build_distribution_domain","cloud_name","secure","ssl_detected","private_cdn","cname","secure_distribution","cdn_subdomain","secure_cdn_subdomain","unsigned_url_prefix","signature","source_to_sign","force_version","long_url_signature","shorten","sign_url","api_secret","url_suffix","use_root_path","signature_algorithm","merge","preloaded","original_source","_finalize_resource_ty","finalize_resource_type","_finalize_resource_ty2","_finalize_source","finalize_source","_finalize_source2","to_sign","part","signatureConfig","algorithm","signatureLength","truncated","compute_hash","slice","prefix","resultUrl","path","token","urlAnalytics","_getSDKVersions","sdkCode","sdkSemver","techVersion","sdkVersions","analyticsOptions","sdkAnalyticsSignature","appender","video_url","decodeURIComponent","video_thumbnail_url","shared_domain","subdomain","cdn_part","subdomain_part","host","base_api_url","cloudinary","encode_path","unencoded_path","encoded_path","api_url","action","random_public_id","randomBytes","signed_preloaded_image","api_sign_request","params_to_sign","_ref22","_ref23","_ref24","_ref25","encoding","hash","createHash","update","digest","Buffer","clear_blank","filtered_hash","_ref26","_ref27","_ref28","_ref29","sort_object_by_key","object","reduce","obj","hash1","hash2","sign_request","apiKey","apiSecret","api_key","webhook_signature","data","verifyNotificationSignature","body","valid_for","Math","round","Date","now","payload_hash","process_request_params","unsigned","oauth_token","private_download_url","attachment","expires_at","stringify","zip_download_url","hashToQuery","download_backedup_asset","asset_id","version_id","api_download_url","download_params","mode","cloudinary_params","download_archive_url","archive_params","download_zip_url","target_format","download_folder","folder_path","prefixes","join_pair","escapeQuotes","html_attrs","attrs","CLOUDINARY_JS_CONFIG_PARAMS","cloudinary_js_config","JSON","v1_result_adapter","v1_adapter","num_pass_args","v1","_len","args","_key","pass_args","v1_adapters","mapping","NUMBER_PATTERN","OFFSET_ANY_PATTERN","RANGE_VALUE_RE","OFFSET_ANY_PATTERN_RE","range","constructor","test","modifier","param","video","codec","profile","level","allow_missing","flatten_folders","flatten_transformations","keep_derived","fully_qualified_public_ids","public_ids","skip_transformation_name","target_public_id","target_tags","use_original_filename","create_source_tag","src","source_type","codecs","video_type","mime_type","codecs_str","build_explicit_api_params","breakpoints","j","breakpoint_settings","build_streaming_profiles_param","representations","hashToParameters","parameters","_ref30","_ref31","endsWith","items","_ref32","_ref33","escape","_len2","_key2","NOP","floor","getTime","option_consume","build_array","encode_double_array","only"],"sources":["C:/Users/PC/Documents/GitHub/IntercambioPropiedades/front-end/node_modules/cloudinary/lib-es5/utils/index.js"],"sourcesContent":["\"use strict\";\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i[\"return\"]) _i[\"return\"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } }; }();\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\n/**\n * Utilities\n * @module utils\n * @borrows module:auth_token as generate_auth_token\n */\n\nvar crypto = require(\"crypto\");\nvar querystring = require(\"querystring\");\nvar urlParse = require(\"url\").parse;\n\n// Functions used internally\nvar compact = require(\"lodash/compact\");\nvar first = require(\"lodash/first\");\nvar isFunction = require(\"lodash/isFunction\");\nvar isPlainObject = require(\"lodash/isPlainObject\");\nvar last = require(\"lodash/last\");\nvar map = require(\"lodash/map\");\nvar take = require(\"lodash/take\");\nvar at = require(\"lodash/at\");\n\n// Exposed by the module\nvar clone = require(\"lodash/clone\");\nvar extend = require(\"lodash/extend\");\nvar filter = require(\"lodash/filter\");\nvar includes = require(\"lodash/includes\");\nvar isArray = require(\"lodash/isArray\");\nvar isEmpty = require(\"lodash/isEmpty\");\nvar isNumber = require(\"lodash/isNumber\");\nvar isObject = require(\"lodash/isObject\");\nvar isString = require(\"lodash/isString\");\nvar isUndefined = require(\"lodash/isUndefined\");\n\nvar smart_escape = require(\"./encoding/smart_escape\");\nvar consumeOption = require('./parsing/consumeOption');\nvar toArray = require('./parsing/toArray');\n\nvar _require = require('./encoding/base64EncodeURL'),\n    base64EncodeURL = _require.base64EncodeURL;\n\nvar encodeDoubleArray = require('./encoding/encodeDoubleArray');\n\nvar config = require(\"../config\");\nvar generate_token = require(\"../auth_token\");\nvar crc32 = require('./crc32');\nvar ensurePresenceOf = require('./ensurePresenceOf');\nvar ensureOption = require('./ensureOption').defaults(config());\nvar entries = require('./entries');\nvar isRemoteUrl = require('./isRemoteUrl');\nvar getSDKVersions = require('./encoding/sdkAnalytics/getSDKVersions');\n\nvar _require$Util = require('cloudinary-core').Util,\n    getAnalyticsOptions = _require$Util.getAnalyticsOptions,\n    getSDKAnalyticsSignature = _require$Util.getSDKAnalyticsSignature;\n\nexports = module.exports;\nvar utils = module.exports;\n\ntry {\n  // eslint-disable-next-line global-require\n  utils.VERSION = require('../../package.json').version;\n} catch (error) {\n  utils.VERSION = '';\n}\n\nfunction generate_auth_token(options) {\n  var token_options = Object.assign({}, config().auth_token, options);\n  return generate_token(token_options);\n}\n\nexports.CF_SHARED_CDN = \"d3jpl91pxevbkh.cloudfront.net\";\nexports.OLD_AKAMAI_SHARED_CDN = \"cloudinary-a.akamaihd.net\";\nexports.AKAMAI_SHARED_CDN = \"res.cloudinary.com\";\nexports.SHARED_CDN = exports.AKAMAI_SHARED_CDN;\nexports.USER_AGENT = `CloudinaryNodeJS/${exports.VERSION} (Node ${process.versions.node})`;\n\n// Add platform information to the USER_AGENT header\n// This is intended for platform information and not individual applications!\nexports.userPlatform = \"\";\n\nfunction getUserAgent() {\n  return isEmpty(utils.userPlatform) ? `${utils.USER_AGENT}` : `${utils.userPlatform} ${utils.USER_AGENT}`;\n}\n\nvar _require2 = require('./consts'),\n    DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION = _require2.DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION,\n    DEFAULT_POSTER_OPTIONS = _require2.DEFAULT_POSTER_OPTIONS,\n    DEFAULT_VIDEO_SOURCE_TYPES = _require2.DEFAULT_VIDEO_SOURCE_TYPES,\n    CONDITIONAL_OPERATORS = _require2.CONDITIONAL_OPERATORS,\n    PREDEFINED_VARS = _require2.PREDEFINED_VARS,\n    LAYER_KEYWORD_PARAMS = _require2.LAYER_KEYWORD_PARAMS,\n    TRANSFORMATION_PARAMS = _require2.TRANSFORMATION_PARAMS,\n    SIMPLE_PARAMS = _require2.SIMPLE_PARAMS,\n    UPLOAD_PREFIX = _require2.UPLOAD_PREFIX,\n    SUPPORTED_SIGNATURE_ALGORITHMS = _require2.SUPPORTED_SIGNATURE_ALGORITHMS,\n    DEFAULT_SIGNATURE_ALGORITHM = _require2.DEFAULT_SIGNATURE_ALGORITHM;\n\nfunction textStyle(layer) {\n  var keywords = [];\n  var style = \"\";\n\n  if (!isEmpty(layer.text_style)) {\n    return layer.text_style;\n  }\n  Object.keys(LAYER_KEYWORD_PARAMS).forEach(function (attr) {\n    var default_value = LAYER_KEYWORD_PARAMS[attr];\n    var attr_value = layer[attr] || default_value;\n    if (attr_value !== default_value) {\n      keywords.push(attr_value);\n    }\n  });\n\n  Object.keys(layer).forEach(function (attr) {\n    if (attr === \"letter_spacing\" || attr === \"line_spacing\") {\n      keywords.push(`${attr}_${layer[attr]}`);\n    }\n    if (attr === \"font_hinting\") {\n      keywords.push(`${attr.split(\"_\").pop()}_${layer[attr]}`);\n    }\n    if (attr === \"font_antialiasing\") {\n      keywords.push(`antialias_${layer[attr]}`);\n    }\n  });\n\n  if (layer.hasOwnProperty(\"font_size\" || \"font_family\") || !isEmpty(keywords)) {\n    if (!layer.font_size) throw new Error('Must supply font_size for text in overlay/underlay');\n    if (!layer.font_family) throw new Error('Must supply font_family for text in overlay/underlay');\n    keywords.unshift(layer.font_size);\n    keywords.unshift(layer.font_family);\n    style = compact(keywords).join(\"_\");\n  }\n  return style;\n}\n\n/**\n * Normalize an expression string, replace \"nice names\" with their coded values and spaces with \"_\"\n * e.g. `width > 0` => `w_lt_0`\n *\n * @param {String} expression An expression to be normalized\n * @return {Object|String} A normalized String of the input value if possible otherwise the value itself\n */\nfunction normalize_expression(expression) {\n  if (!isString(expression) || expression.length === 0 || expression.match(/^!.+!$/)) {\n    return expression;\n  }\n\n  var operators = \"\\\\|\\\\||>=|<=|&&|!=|>|=|<|/|-|\\\\^|\\\\+|\\\\*\";\n  var operatorsPattern = \"((\" + operators + \")(?=[ _]))\";\n  var operatorsReplaceRE = new RegExp(operatorsPattern, \"g\");\n  expression = expression.replace(operatorsReplaceRE, function (match) {\n    return CONDITIONAL_OPERATORS[match];\n  });\n\n  // Duplicate PREDEFINED_VARS to also include :{var_name} as well as {var_name}\n  // Example:\n  // -- PREDEFINED_VARS = ['foo']\n  // -- predefinedVarsPattern = ':foo|foo'\n  // It is done like this because node 6 does not support regex lookbehind\n  var predefinedVarsPattern = \"(\" + Object.keys(PREDEFINED_VARS).map(function (v) {\n    return `:${v}|${v}`;\n  }).join(\"|\") + \")\";\n  var userVariablePattern = '(\\\\$_*[^_ ]+)';\n  var variablesReplaceRE = new RegExp(`${userVariablePattern}|${predefinedVarsPattern}`, \"g\");\n  expression = expression.replace(variablesReplaceRE, function (match) {\n    return PREDEFINED_VARS[match] || match;\n  });\n\n  return expression.replace(/[ _]+/g, '_');\n}\n\n/**\n * Parse custom_function options\n * @private\n * @param {object|*} customFunction a custom function object containing function_type and source values\n * @return {string|*} custom_function transformation string\n */\nfunction process_custom_function(customFunction) {\n  if (!isObject(customFunction)) {\n    return customFunction;\n  }\n  if (customFunction.function_type === \"remote\") {\n    var encodedSource = base64EncodeURL(customFunction.source);\n\n    return [customFunction.function_type, encodedSource].join(\":\");\n  }\n  return [customFunction.function_type, customFunction.source].join(\":\");\n}\n\n/**\n * Parse custom_pre_function options\n * @private\n * @param {object|*} customPreFunction a custom function object containing function_type and source values\n * @return {string|*} custom_pre_function transformation string\n */\nfunction process_custom_pre_function(customPreFunction) {\n  var result = process_custom_function(customPreFunction);\n  return utils.isString(result) ? `pre:${result}` : null;\n}\n\n/**\n * Parse \"if\" parameter\n * Translates the condition if provided.\n * @private\n * @return {string} \"if_\" + ifValue\n */\nfunction process_if(ifValue) {\n  return ifValue ? \"if_\" + normalize_expression(ifValue) : ifValue;\n}\n\n/**\n * Parse layer options\n * @private\n * @param {object|*} layer The layer to parse.\n * @return {string} layer transformation string\n */\nfunction process_layer(layer) {\n  if (isString(layer)) {\n    var resourceType = null;\n    var layerUrl = '';\n\n    var fetchLayerBegin = 'fetch:';\n    if (layer.startsWith(fetchLayerBegin)) {\n      layerUrl = layer.substring(fetchLayerBegin.length);\n    } else if (layer.indexOf(':fetch:', 0) !== -1) {\n      var parts = layer.split(':', 3);\n      resourceType = parts[0];\n      layerUrl = parts[2];\n    } else {\n      return layer;\n    }\n\n    layer = {\n      url: layerUrl,\n      type: 'fetch'\n    };\n\n    if (resourceType) {\n      layer.resource_type = resourceType;\n    }\n  }\n\n  if (typeof layer !== 'object') {\n    return layer;\n  }\n\n  var _layer = layer,\n      resource_type = _layer.resource_type,\n      text = _layer.text,\n      type = _layer.type,\n      public_id = _layer.public_id,\n      format = _layer.format,\n      fetchUrl = _layer.url;\n\n  var components = [];\n\n  if (!isEmpty(text) && isEmpty(resource_type)) {\n    resource_type = 'text';\n  }\n\n  if (!isEmpty(fetchUrl) && isEmpty(type)) {\n    type = 'fetch';\n  }\n\n  if (!isEmpty(public_id) && !isEmpty(format)) {\n    public_id = `${public_id}.${format}`;\n  }\n\n  if (isEmpty(public_id) && resource_type !== 'text' && type !== 'fetch') {\n    throw new Error('Must supply public_id for non-text overlay');\n  }\n\n  if (!isEmpty(resource_type) && resource_type !== 'image') {\n    components.push(resource_type);\n  }\n\n  if (!isEmpty(type) && type !== 'upload') {\n    components.push(type);\n  }\n\n  if (resource_type === 'text' || resource_type === 'subtitles') {\n    if (isEmpty(public_id) && isEmpty(text)) {\n      throw new Error('Must supply either text or public_in in overlay');\n    }\n\n    var textOptions = textStyle(layer);\n\n    if (!isEmpty(textOptions)) {\n      components.push(textOptions);\n    }\n\n    if (!isEmpty(public_id)) {\n      public_id = public_id.replace('/', ':');\n      components.push(public_id);\n    }\n\n    if (!isEmpty(text)) {\n      var variablesRegex = new RegExp(/(\\$\\([a-zA-Z]\\w+\\))/g);\n      var textDividedByVariables = text.split(variablesRegex).filter(function (x) {\n        return x;\n      });\n      var encodedParts = textDividedByVariables.map(function (subText) {\n        var matches = variablesRegex[Symbol.match](subText);\n        var isVariable = matches ? matches.length > 0 : false;\n        if (isVariable) {\n          return subText;\n        }\n        return encodeCurlyBraces(encodeURIComponent(smart_escape(subText, new RegExp(/([,\\/])/g))));\n      });\n      components.push(encodedParts.join(''));\n    }\n  } else if (type === 'fetch') {\n    var encodedUrl = base64EncodeURL(fetchUrl);\n    components.push(encodedUrl);\n  } else {\n    public_id = public_id.replace('/', ':');\n    components.push(public_id);\n  }\n\n  return components.join(':');\n}\n\nfunction replaceAllSubstrings(string, search) {\n  var replacement = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n\n  return string.split(search).join(replacement);\n}\n\nfunction encodeCurlyBraces(input) {\n  return replaceAllSubstrings(replaceAllSubstrings(input, '(', '%28'), ')', '%29');\n}\n\n/**\n * Parse radius options\n * @private\n * @param {Array<string|number>|string|number} radius The radius to parse\n * @return {string} radius transformation string\n */\nfunction process_radius(radius) {\n  if (!radius) {\n    return radius;\n  }\n  if (!isArray(radius)) {\n    radius = [radius];\n  }\n  if (radius.length === 0 || radius.length > 4) {\n    throw new Error(\"Radius array should contain between 1 and 4 values\");\n  }\n  if (radius.findIndex(function (x) {\n    return x === null;\n  }) >= 0) {\n    throw new Error(\"Corner: Cannot be null\");\n  }\n  return radius.map(normalize_expression).join(':');\n}\n\nfunction build_multi_and_sprite_params(tagOrOptions, options) {\n  var tag = null;\n  if (typeof tagOrOptions === 'string') {\n    tag = tagOrOptions;\n  } else {\n    if (isEmpty(options)) {\n      options = tagOrOptions;\n    } else {\n      throw new Error('First argument must be a tag when additional options are passed');\n    }\n    tag = null;\n  }\n  if (!options && !tag) {\n    throw new Error('Either tag or urls are required');\n  }\n  if (!options) {\n    options = {};\n  }\n  var urls = options.urls;\n  var transformation = generate_transformation_string(extend({}, options, {\n    fetch_format: options.format\n  }));\n  return {\n    tag,\n    transformation,\n    urls,\n    timestamp: utils.timestamp(),\n    async: options.async,\n    notification_url: options.notification_url\n  };\n}\n\nfunction build_upload_params(options) {\n  var params = {\n    access_mode: options.access_mode,\n    allowed_formats: options.allowed_formats && toArray(options.allowed_formats).join(\",\"),\n    asset_folder: options.asset_folder,\n    async: utils.as_safe_bool(options.async),\n    backup: utils.as_safe_bool(options.backup),\n    callback: options.callback,\n    cinemagraph_analysis: utils.as_safe_bool(options.cinemagraph_analysis),\n    colors: utils.as_safe_bool(options.colors),\n    display_name: options.display_name,\n    discard_original_filename: utils.as_safe_bool(options.discard_original_filename),\n    eager: utils.build_eager(options.eager),\n    eager_async: utils.as_safe_bool(options.eager_async),\n    eager_notification_url: options.eager_notification_url,\n    eval: options.eval,\n    exif: utils.as_safe_bool(options.exif),\n    faces: utils.as_safe_bool(options.faces),\n    folder: options.folder,\n    format: options.format,\n    filename_override: options.filename_override,\n    image_metadata: utils.as_safe_bool(options.image_metadata),\n    media_metadata: utils.as_safe_bool(options.media_metadata),\n    invalidate: utils.as_safe_bool(options.invalidate),\n    moderation: options.moderation,\n    notification_url: options.notification_url,\n    overwrite: utils.as_safe_bool(options.overwrite),\n    phash: utils.as_safe_bool(options.phash),\n    proxy: options.proxy,\n    public_id: options.public_id,\n    public_id_prefix: options.public_id_prefix,\n    quality_analysis: utils.as_safe_bool(options.quality_analysis),\n    responsive_breakpoints: utils.generate_responsive_breakpoints_string(options.responsive_breakpoints),\n    return_delete_token: utils.as_safe_bool(options.return_delete_token),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformation: utils.generate_transformation_string(clone(options)),\n    type: options.type,\n    unique_filename: utils.as_safe_bool(options.unique_filename),\n    upload_preset: options.upload_preset,\n    use_filename: utils.as_safe_bool(options.use_filename),\n    use_filename_as_display_name: utils.as_safe_bool(options.use_filename_as_display_name),\n    quality_override: options.quality_override,\n    accessibility_analysis: utils.as_safe_bool(options.accessibility_analysis),\n    use_asset_folder_as_public_id_prefix: utils.as_safe_bool(options.use_asset_folder_as_public_id_prefix),\n    visual_search: utils.as_safe_bool(options.visual_search),\n    on_success: options.on_success\n  };\n  return utils.updateable_resource_params(options, params);\n}\n\nfunction encode_key_value(arg) {\n  if (!isObject(arg)) {\n    return arg;\n  }\n  return entries(arg).map(function (_ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        k = _ref2[0],\n        v = _ref2[1];\n\n    return `${k}=${v}`;\n  }).join('|');\n}\n\n/**\n * @description Escape = and | with two backslashes \\\\\n * @param {string|number} value\n * @return {string}\n */\nfunction escapeMetadataValue(value) {\n  return value.toString().replace(/([=|])/g, '\\\\$&');\n}\n\n/**\n *\n * @description Encode metadata fields based on incoming value.\n *              If array, escape as color_id=[\\\"green\\\",\\\"red\\\"]\n *              If string/number, escape as in_stock_id=50\n *\n *              Joins resulting values with a pipe:\n *              in_stock_id=50|color_id=[\\\"green\\\",\\\"red\\\"]\n *\n *              = and | and escaped by default (this can't be turned off)\n *\n * @param metadataObj\n * @return {string}\n */\nfunction encode_context(metadataObj) {\n  if (!isObject(metadataObj)) {\n    return metadataObj;\n  }\n\n  return entries(metadataObj).map(function (_ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    // if string, simply parse the value and move on\n    if (isString(value)) {\n      return `${key}=${escapeMetadataValue(value)}`;\n\n      // If array, parse each item individually\n    } else if (isArray(value)) {\n      var values = value.map(function (innerVal) {\n        return `\\\"${escapeMetadataValue(innerVal)}\\\"`;\n      }).join(',');\n      return `${key}=[${values}]`;\n      // if number, convert to string\n    } else if (Number.isInteger(value)) {\n      return `${key}=${escapeMetadataValue(String(value))}`;\n      // if unknown, return the value as string\n    } else {\n      return value.toString();\n    }\n  }).join('|');\n}\n\nfunction build_eager(transformations) {\n  return toArray(transformations).map(function (transformation) {\n    var transformationString = utils.generate_transformation_string(clone(transformation));\n    var format = transformation.format;\n    return format == null ? transformationString : `${transformationString}/${format}`;\n  }).join('|');\n}\n\n/**\n * Build the custom headers for the request\n * @private\n * @param headers\n * @return {Array<string>|object|string} An object of name and value,\n *         an array of header strings, or a string of headers\n */\nfunction build_custom_headers(headers) {\n  switch (true) {\n    case headers == null:\n      return void 0;\n    case isArray(headers):\n      return headers.join(\"\\n\");\n    case isObject(headers):\n      return entries(headers).map(function (_ref5) {\n        var _ref6 = _slicedToArray(_ref5, 2),\n            k = _ref6[0],\n            v = _ref6[1];\n\n        return `${k}:${v}`;\n      }).join(\"\\n\");\n    default:\n      return headers;\n  }\n}\n\nfunction generate_transformation_string(options) {\n  if (utils.isString(options)) {\n    return options;\n  }\n  if (isArray(options)) {\n    return options.map(function (t) {\n      return utils.generate_transformation_string(clone(t));\n    }).filter(utils.present).join('/');\n  }\n\n  var responsive_width = consumeOption(options, \"responsive_width\", config().responsive_width);\n  var width = options.width;\n  var height = options.height;\n  var size = consumeOption(options, \"size\");\n  if (size) {\n    var _size$split = size.split(\"x\");\n\n    var _size$split2 = _slicedToArray(_size$split, 2);\n\n    width = _size$split2[0];\n    height = _size$split2[1];\n    var _ref7 = [width, height];\n    options.width = _ref7[0];\n    options.height = _ref7[1];\n  }\n  var has_layer = options.overlay || options.underlay;\n  var crop = consumeOption(options, \"crop\");\n  var angle = toArray(consumeOption(options, \"angle\")).join(\".\");\n  var no_html_sizes = has_layer || utils.present(angle) || crop === \"fit\" || crop === \"limit\" || responsive_width;\n  if (width && (width.toString().indexOf(\"auto\") === 0 || no_html_sizes || parseFloat(width) < 1)) {\n    delete options.width;\n  }\n  if (height && (no_html_sizes || parseFloat(height) < 1)) {\n    delete options.height;\n  }\n  var background = consumeOption(options, \"background\");\n  background = background && background.replace(/^#/, \"rgb:\");\n  var color = consumeOption(options, \"color\");\n  color = color && color.replace(/^#/, \"rgb:\");\n  var base_transformations = toArray(consumeOption(options, \"transformation\", []));\n  var named_transformation = [];\n  if (base_transformations.some(isObject)) {\n    base_transformations = base_transformations.map(function (tr) {\n      return utils.generate_transformation_string(isObject(tr) ? clone(tr) : { transformation: tr });\n    });\n  } else {\n    named_transformation = base_transformations.join(\".\");\n    base_transformations = [];\n  }\n  var effect = consumeOption(options, \"effect\");\n  if (isArray(effect)) {\n    effect = effect.join(\":\");\n  } else if (isObject(effect)) {\n    effect = entries(effect).map(function (_ref8) {\n      var _ref9 = _slicedToArray(_ref8, 2),\n          key = _ref9[0],\n          value = _ref9[1];\n\n      return `${key}:${value}`;\n    });\n  }\n  var border = consumeOption(options, \"border\");\n  if (isObject(border)) {\n    border = `${border.width != null ? border.width : 2}px_solid_${(border.color != null ? border.color : \"black\").replace(/^#/, 'rgb:')}`;\n  } else if (/^\\d+$/.exec(border)) {\n    // fallback to html border attributes\n    options.border = border;\n    border = void 0;\n  }\n  var flags = toArray(consumeOption(options, \"flags\")).join(\".\");\n  var dpr = consumeOption(options, \"dpr\", config().dpr);\n  if (options.offset != null) {\n    var _split_range = split_range(consumeOption(options, \"offset\"));\n\n    var _split_range2 = _slicedToArray(_split_range, 2);\n\n    options.start_offset = _split_range2[0];\n    options.end_offset = _split_range2[1];\n  }\n  if (options.start_offset) {\n    options.start_offset = normalize_expression(options.start_offset);\n  }\n  if (options.end_offset) {\n    options.end_offset = normalize_expression(options.end_offset);\n  }\n  var overlay = process_layer(consumeOption(options, \"overlay\"));\n  var radius = process_radius(consumeOption(options, \"radius\"));\n  var underlay = process_layer(consumeOption(options, \"underlay\"));\n  var ifValue = process_if(consumeOption(options, \"if\"));\n  var custom_function = process_custom_function(consumeOption(options, \"custom_function\"));\n  var custom_pre_function = process_custom_pre_function(consumeOption(options, \"custom_pre_function\"));\n  var fps = consumeOption(options, 'fps');\n  if (isArray(fps)) {\n    fps = fps.join('-');\n  }\n  var params = {\n    a: normalize_expression(angle),\n    ar: normalize_expression(consumeOption(options, \"aspect_ratio\")),\n    b: background,\n    bo: border,\n    c: crop,\n    co: color,\n    dpr: normalize_expression(dpr),\n    e: normalize_expression(effect),\n    fl: flags,\n    fn: custom_function || custom_pre_function,\n    fps: fps,\n    h: normalize_expression(height),\n    ki: normalize_expression(consumeOption(options, \"keyframe_interval\")),\n    l: overlay,\n    o: normalize_expression(consumeOption(options, \"opacity\")),\n    q: normalize_expression(consumeOption(options, \"quality\")),\n    r: radius,\n    t: named_transformation,\n    u: underlay,\n    w: normalize_expression(width),\n    x: normalize_expression(consumeOption(options, \"x\")),\n    y: normalize_expression(consumeOption(options, \"y\")),\n    z: normalize_expression(consumeOption(options, \"zoom\"))\n  };\n\n  SIMPLE_PARAMS.forEach(function (_ref10) {\n    var _ref11 = _slicedToArray(_ref10, 2),\n        name = _ref11[0],\n        short = _ref11[1];\n\n    var value = consumeOption(options, name);\n    if (value !== undefined) {\n      params[short] = value;\n    }\n  });\n  if (params.vc != null) {\n    params.vc = process_video_params(params.vc);\n  }\n  [\"so\", \"eo\", \"du\"].forEach(function (short) {\n    if (params[short] !== undefined) {\n      params[short] = norm_range_value(params[short]);\n    }\n  });\n\n  var variablesParam = consumeOption(options, \"variables\", []);\n  var variables = entries(options).filter(function (_ref12) {\n    var _ref13 = _slicedToArray(_ref12, 2),\n        key = _ref13[0],\n        value = _ref13[1];\n\n    return key.startsWith('$');\n  }).map(function (_ref14) {\n    var _ref15 = _slicedToArray(_ref14, 2),\n        key = _ref15[0],\n        value = _ref15[1];\n\n    delete options[key];\n    return `${key}_${normalize_expression(value)}`;\n  }).sort().concat(variablesParam.map(function (_ref16) {\n    var _ref17 = _slicedToArray(_ref16, 2),\n        name = _ref17[0],\n        value = _ref17[1];\n\n    return `${name}_${normalize_expression(value)}`;\n  })).join(',');\n\n  var transformations = entries(params).filter(function (_ref18) {\n    var _ref19 = _slicedToArray(_ref18, 2),\n        key = _ref19[0],\n        value = _ref19[1];\n\n    return utils.present(value);\n  }).map(function (_ref20) {\n    var _ref21 = _slicedToArray(_ref20, 2),\n        key = _ref21[0],\n        value = _ref21[1];\n\n    return key + '_' + value;\n  }).sort().join(',');\n\n  var raw_transformation = consumeOption(options, 'raw_transformation');\n  transformations = compact([ifValue, variables, transformations, raw_transformation]).join(\",\");\n  base_transformations.push(transformations);\n  transformations = base_transformations;\n  if (responsive_width) {\n    var responsive_width_transformation = config().responsive_width_transformation || DEFAULT_RESPONSIVE_WIDTH_TRANSFORMATION;\n\n    transformations.push(utils.generate_transformation_string(clone(responsive_width_transformation)));\n  }\n  if (String(width).startsWith(\"auto\") || responsive_width) {\n    options.responsive = true;\n  }\n  if (dpr === \"auto\") {\n    options.hidpi = true;\n  }\n  return filter(transformations, utils.present).join(\"/\");\n}\n\nfunction updateable_resource_params(options) {\n  var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (options.access_control != null) {\n    params.access_control = utils.jsonArrayParam(options.access_control);\n  }\n  if (options.auto_tagging != null) {\n    params.auto_tagging = options.auto_tagging;\n  }\n  if (options.background_removal != null) {\n    params.background_removal = options.background_removal;\n  }\n  if (options.categorization != null) {\n    params.categorization = options.categorization;\n  }\n  if (options.context != null) {\n    params.context = utils.encode_context(options.context);\n  }\n  if (options.metadata != null) {\n    params.metadata = utils.encode_context(options.metadata);\n  }\n  if (options.custom_coordinates != null) {\n    params.custom_coordinates = encodeDoubleArray(options.custom_coordinates);\n  }\n  if (options.detection != null) {\n    params.detection = options.detection;\n  }\n  if (options.face_coordinates != null) {\n    params.face_coordinates = encodeDoubleArray(options.face_coordinates);\n  }\n  if (options.headers != null) {\n    params.headers = utils.build_custom_headers(options.headers);\n  }\n  if (options.notification_url != null) {\n    params.notification_url = options.notification_url;\n  }\n  if (options.ocr != null) {\n    params.ocr = options.ocr;\n  }\n  if (options.raw_convert != null) {\n    params.raw_convert = options.raw_convert;\n  }\n  if (options.similarity_search != null) {\n    params.similarity_search = options.similarity_search;\n  }\n  if (options.tags != null) {\n    params.tags = toArray(options.tags).join(\",\");\n  }\n  if (options.quality_override != null) {\n    params.quality_override = options.quality_override;\n  }\n  if (options.asset_folder != null) {\n    params.asset_folder = options.asset_folder;\n  }\n  if (options.display_name != null) {\n    params.display_name = options.display_name;\n  }\n  if (options.unique_display_name != null) {\n    params.unique_display_name = options.unique_display_name;\n  }\n  if (options.visual_search != null) {\n    params.visual_search = options.visual_search;\n  }\n  return params;\n}\n\n/**\n * A list of keys used by the url() function.\n * @private\n */\nvar URL_KEYS = ['api_secret', 'auth_token', 'cdn_subdomain', 'cloud_name', 'cname', 'format', 'long_url_signature', 'private_cdn', 'resource_type', 'secure', 'secure_cdn_subdomain', 'secure_distribution', 'shorten', 'sign_url', 'ssl_detected', 'type', 'url_suffix', 'use_root_path', 'version'];\n\n/**\n * Create a new object with only URL parameters\n * @param {object} options The source object\n * @return {Object} An object containing only URL parameters\n */\n\nfunction extractUrlParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(URL_KEYS));\n}\n\n/**\n * Create a new object with only transformation parameters\n * @param {object} options The source object\n * @return {Object} An object containing only transformation parameters\n */\n\nfunction extractTransformationParams(options) {\n  return pickOnlyExistingValues.apply(undefined, [options].concat(_toConsumableArray(TRANSFORMATION_PARAMS)));\n}\n\n/**\n * Handle the format parameter for fetch urls\n * @private\n * @param options url and transformation options. This argument may be changed by the function!\n */\n\nfunction patchFetchFormat() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  if (options.type === \"fetch\") {\n    if (options.fetch_format == null) {\n      options.fetch_format = consumeOption(options, \"format\");\n    }\n  }\n}\n\nfunction build_distribution_domain(source, options) {\n  var cloud_name = consumeOption(options, 'cloud_name', config().cloud_name);\n  if (!cloud_name) {\n    throw new Error('Must supply cloud_name in tag or in configuration');\n  }\n\n  var secure = consumeOption(options, 'secure', null);\n  var ssl_detected = consumeOption(options, 'ssl_detected', config().ssl_detected);\n  if (secure === null) {\n    secure = ssl_detected || config().secure;\n  }\n\n  var private_cdn = consumeOption(options, 'private_cdn', config().private_cdn);\n  var cname = consumeOption(options, 'cname', config().cname);\n  var secure_distribution = consumeOption(options, 'secure_distribution', config().secure_distribution);\n  var cdn_subdomain = consumeOption(options, 'cdn_subdomain', config().cdn_subdomain);\n  var secure_cdn_subdomain = consumeOption(options, 'secure_cdn_subdomain', config().secure_cdn_subdomain);\n\n  return unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution);\n}\n\nfunction url(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var signature = void 0,\n      source_to_sign = void 0;\n  utils.patchFetchFormat(options);\n  var type = consumeOption(options, \"type\", null);\n  var transformation = utils.generate_transformation_string(options);\n\n  var resource_type = consumeOption(options, \"resource_type\", \"image\");\n  var version = consumeOption(options, \"version\");\n  var force_version = consumeOption(options, \"force_version\", config().force_version);\n  if (force_version == null) {\n    force_version = true;\n  }\n  var long_url_signature = !!consumeOption(options, \"long_url_signature\", config().long_url_signature);\n  var format = consumeOption(options, \"format\");\n  var shorten = consumeOption(options, \"shorten\", config().shorten);\n  var sign_url = consumeOption(options, \"sign_url\", config().sign_url);\n  var api_secret = consumeOption(options, \"api_secret\", config().api_secret);\n  var url_suffix = consumeOption(options, \"url_suffix\");\n  var use_root_path = consumeOption(options, \"use_root_path\", config().use_root_path);\n  var signature_algorithm = consumeOption(options, \"signature_algorithm\", config().signature_algorithm || DEFAULT_SIGNATURE_ALGORITHM);\n  if (long_url_signature) {\n    signature_algorithm = 'sha256';\n  }\n  var auth_token = consumeOption(options, \"auth_token\");\n  if (auth_token !== false) {\n    auth_token = exports.merge(config().auth_token, auth_token);\n  }\n  var preloaded = /^(image|raw)\\/([a-z0-9_]+)\\/v(\\d+)\\/([^#]+)$/.exec(public_id);\n  if (preloaded) {\n    resource_type = preloaded[1];\n    type = preloaded[2];\n    version = preloaded[3];\n    public_id = preloaded[4];\n  }\n  var original_source = public_id;\n  if (public_id == null) {\n    return original_source;\n  }\n  public_id = public_id.toString();\n  if (type === null && public_id.match(/^https?:\\//i)) {\n    return original_source;\n  }\n\n  var _finalize_resource_ty = finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten);\n\n  var _finalize_resource_ty2 = _slicedToArray(_finalize_resource_ty, 2);\n\n  resource_type = _finalize_resource_ty2[0];\n  type = _finalize_resource_ty2[1];\n\n  var _finalize_source = finalize_source(public_id, format, url_suffix);\n\n  var _finalize_source2 = _slicedToArray(_finalize_source, 2);\n\n  public_id = _finalize_source2[0];\n  source_to_sign = _finalize_source2[1];\n\n\n  if (version == null && force_version && source_to_sign.indexOf(\"/\") >= 0 && !source_to_sign.match(/^v[0-9]+/) && !source_to_sign.match(/^https?:\\//)) {\n    version = 1;\n  }\n  if (version != null) {\n    version = `v${version}`;\n  } else {\n    version = null;\n  }\n\n  transformation = transformation.replace(/([^:])\\/\\//g, '$1/');\n  if (sign_url && isEmpty(auth_token)) {\n    var to_sign = [transformation, source_to_sign].filter(function (part) {\n      return part != null && part !== '';\n    }).join('/');\n\n    var signatureConfig = {};\n    if (long_url_signature) {\n      signatureConfig.algorithm = 'sha256';\n      signatureConfig.signatureLength = 32;\n    } else {\n      signatureConfig.algorithm = signature_algorithm;\n      signatureConfig.signatureLength = 8;\n    }\n\n    var truncated = compute_hash(to_sign + api_secret, signatureConfig.algorithm, 'base64').slice(0, signatureConfig.signatureLength).replace(/\\//g, '_').replace(/\\+/g, '-');\n    signature = `s--${truncated}--`;\n  }\n\n  var prefix = build_distribution_domain(public_id, options);\n  var resultUrl = [prefix, resource_type, type, signature, transformation, version, public_id].filter(function (part) {\n    return part != null && part !== '';\n  }).join('/').replace(/ /g, '%20');\n  if (sign_url && !isEmpty(auth_token)) {\n    auth_token.url = urlParse(resultUrl).path;\n    var token = generate_token(auth_token);\n    resultUrl += `?${token}`;\n  }\n\n  var urlAnalytics = ensureOption(options, 'urlAnalytics', false);\n\n  if (urlAnalytics === true) {\n    var _getSDKVersions = getSDKVersions(),\n        sdkCode = _getSDKVersions.sdkCode,\n        sdkSemver = _getSDKVersions.sdkSemver,\n        techVersion = _getSDKVersions.techVersion;\n\n    var sdkVersions = {\n      sdkCode: ensureOption(options, 'sdkCode', sdkCode),\n      sdkSemver: ensureOption(options, 'sdkSemver', sdkSemver),\n      techVersion: ensureOption(options, 'techVersion', techVersion)\n    };\n\n    var analyticsOptions = getAnalyticsOptions(Object.assign({}, options, sdkVersions));\n\n    var sdkAnalyticsSignature = getSDKAnalyticsSignature(analyticsOptions);\n\n    // url might already have a '?' query param\n    var appender = '?';\n    if (resultUrl.indexOf('?') >= 0) {\n      appender = '&';\n    }\n    resultUrl = `${resultUrl}${appender}_a=${sdkAnalyticsSignature}`;\n  }\n\n  return resultUrl;\n}\n\nfunction video_url(public_id, options) {\n  options = extend({\n    resource_type: 'video'\n  }, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_source(source, format, url_suffix) {\n  var source_to_sign = void 0;\n  source = source.replace(/([^:])\\/\\//g, '$1/');\n  if (source.match(/^https?:\\//i)) {\n    source = smart_escape(source);\n    source_to_sign = source;\n  } else {\n    source = encodeURIComponent(decodeURIComponent(source)).replace(/%3A/g, \":\").replace(/%2F/g, \"/\");\n    source_to_sign = source;\n    if (url_suffix) {\n      if (url_suffix.match(/[\\.\\/]/)) {\n        throw new Error('url_suffix should not include . or /');\n      }\n      source = source + '/' + url_suffix;\n    }\n    if (format != null) {\n      source = source + '.' + format;\n      source_to_sign = source_to_sign + '.' + format;\n    }\n  }\n  return [source, source_to_sign];\n}\n\nfunction video_thumbnail_url(public_id, options) {\n  options = extend({}, DEFAULT_POSTER_OPTIONS, options);\n  return utils.url(public_id, options);\n}\n\nfunction finalize_resource_type(resource_type, type, url_suffix, use_root_path, shorten) {\n  if (type == null) {\n    type = 'upload';\n  }\n  if (url_suffix != null) {\n    if (resource_type === 'image' && type === 'upload') {\n      resource_type = \"images\";\n      type = null;\n    } else if (resource_type === 'image' && type === 'private') {\n      resource_type = 'private_images';\n      type = null;\n    } else if (resource_type === 'image' && type === 'authenticated') {\n      resource_type = 'authenticated_images';\n      type = null;\n    } else if (resource_type === 'raw' && type === 'upload') {\n      resource_type = 'files';\n      type = null;\n    } else if (resource_type === 'video' && type === 'upload') {\n      resource_type = 'videos';\n      type = null;\n    } else {\n      throw new Error(\"URL Suffix only supported for image/upload, image/private, image/authenticated, video/upload and raw/upload\");\n    }\n  }\n  if (use_root_path) {\n    if (resource_type === 'image' && type === 'upload' || resource_type === 'images' && type == null) {\n      resource_type = null;\n      type = null;\n    } else {\n      throw new Error(\"Root path only supported for image/upload\");\n    }\n  }\n  if (shorten && resource_type === 'image' && type === 'upload') {\n    resource_type = 'iu';\n    type = null;\n  }\n  return [resource_type, type];\n}\n\n// cdn_subdomain and secure_cdn_subdomain\n// 1) Customers in shared distribution (e.g. res.cloudinary.com)\n//    if cdn_domain is true uses res-[1-5].cloudinary.com for both http and https.\n//    Setting secure_cdn_subdomain to false disables this for https.\n// 2) Customers with private cdn\n//    if cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for http\n//    if secure_cdn_domain is true uses cloudname-res-[1-5].cloudinary.com for https\n//      (please contact support if you require this)\n// 3) Customers with cname\n//    if cdn_domain is true uses a[1-5].cname for http.\n//    For https, uses the same naming scheme as 1 for shared distribution and as 2 for private distribution.\n\nfunction unsigned_url_prefix(source, cloud_name, private_cdn, cdn_subdomain, secure_cdn_subdomain, cname, secure, secure_distribution) {\n  var prefix = void 0;\n  if (cloud_name.indexOf(\"/\") === 0) {\n    return '/res' + cloud_name;\n  }\n  var shared_domain = !private_cdn;\n  if (secure) {\n    if (secure_distribution == null || secure_distribution === exports.OLD_AKAMAI_SHARED_CDN) {\n      secure_distribution = private_cdn ? cloud_name + \"-res.cloudinary.com\" : exports.SHARED_CDN;\n    }\n    if (shared_domain == null) {\n      shared_domain = secure_distribution === exports.SHARED_CDN;\n    }\n    if (secure_cdn_subdomain == null && shared_domain) {\n      secure_cdn_subdomain = cdn_subdomain;\n    }\n    if (secure_cdn_subdomain) {\n      secure_distribution = secure_distribution.replace('res.cloudinary.com', 'res-' + (crc32(source) % 5 + 1 + '.cloudinary.com'));\n    }\n    prefix = 'https://' + secure_distribution;\n  } else if (cname) {\n    var subdomain = cdn_subdomain ? 'a' + (crc32(source) % 5 + 1) + '.' : '';\n    prefix = 'http://' + subdomain + cname;\n  } else {\n    var cdn_part = private_cdn ? cloud_name + '-' : '';\n    var subdomain_part = cdn_subdomain ? '-' + (crc32(source) % 5 + 1) : '';\n    var host = [cdn_part, 'res', subdomain_part, '.cloudinary.com'].join('');\n    prefix = 'http://' + host;\n  }\n  if (shared_domain) {\n    prefix += '/' + cloud_name;\n  }\n  return prefix;\n}\n\nfunction base_api_url() {\n  var path = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var cloudinary = ensureOption(options, \"upload_prefix\", UPLOAD_PREFIX);\n  var cloud_name = ensureOption(options, \"cloud_name\");\n  var encode_path = function encode_path(unencoded_path) {\n    return encodeURIComponent(unencoded_path).replace(\"'\", '%27');\n  };\n  var encoded_path = Array.isArray(path) ? path.map(encode_path) : encode_path(path);\n  return [cloudinary, \"v1_1\", cloud_name].concat(encoded_path).join(\"/\");\n}\n\nfunction api_url() {\n  var action = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'upload';\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var resource_type = options.resource_type || \"image\";\n  return base_api_url([resource_type, action], options);\n}\n\nfunction random_public_id() {\n  return crypto.randomBytes(12).toString('base64').replace(/[^a-z0-9]/g, \"\");\n}\n\nfunction signed_preloaded_image(result) {\n  return `${result.resource_type}/upload/v${result.version}/${filter([result.public_id, result.format], utils.present).join(\".\")}#${result.signature}`;\n}\n\nfunction api_sign_request(params_to_sign, api_secret) {\n  var to_sign = entries(params_to_sign).filter(function (_ref22) {\n    var _ref23 = _slicedToArray(_ref22, 2),\n        k = _ref23[0],\n        v = _ref23[1];\n\n    return utils.present(v);\n  }).map(function (_ref24) {\n    var _ref25 = _slicedToArray(_ref24, 2),\n        k = _ref25[0],\n        v = _ref25[1];\n\n    return `${k}=${toArray(v).join(\",\")}`;\n  }).sort().join(\"&\");\n  return compute_hash(to_sign + api_secret, config().signature_algorithm || DEFAULT_SIGNATURE_ALGORITHM, 'hex');\n}\n\n/**\n * Computes hash from input string using specified algorithm.\n * @private\n * @param {string} input string which to compute hash from\n * @param {string} signature_algorithm algorithm to use for computing hash\n * @param {string} encoding type of encoding\n * @return {string} computed hash value\n */\nfunction compute_hash(input, signature_algorithm, encoding) {\n  if (!SUPPORTED_SIGNATURE_ALGORITHMS.includes(signature_algorithm)) {\n    throw new Error(`Signature algorithm ${signature_algorithm} is not supported. Supported algorithms: ${SUPPORTED_SIGNATURE_ALGORITHMS.join(', ')}`);\n  }\n  var hash = crypto.createHash(signature_algorithm).update(input).digest();\n  return Buffer.from(hash).toString(encoding);\n}\n\nfunction clear_blank(hash) {\n  var filtered_hash = {};\n  entries(hash).filter(function (_ref26) {\n    var _ref27 = _slicedToArray(_ref26, 2),\n        k = _ref27[0],\n        v = _ref27[1];\n\n    return utils.present(v);\n  }).forEach(function (_ref28) {\n    var _ref29 = _slicedToArray(_ref28, 2),\n        k = _ref29[0],\n        v = _ref29[1];\n\n    filtered_hash[k] = v.filter ? v.filter(function (x) {\n      return x;\n    }) : v;\n  });\n  return filtered_hash;\n}\n\nfunction sort_object_by_key(object) {\n  return Object.keys(object).sort().reduce(function (obj, key) {\n    obj[key] = object[key];\n    return obj;\n  }, {});\n}\n\nfunction merge(hash1, hash2) {\n  return _extends({}, hash1, hash2);\n}\n\nfunction sign_request(params) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var apiKey = ensureOption(options, 'api_key');\n  var apiSecret = ensureOption(options, 'api_secret');\n  params = exports.clear_blank(params);\n  params.signature = exports.api_sign_request(params, apiSecret);\n  params.api_key = apiKey;\n  return params;\n}\n\nfunction webhook_signature(data, timestamp) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  ensurePresenceOf({\n    data,\n    timestamp\n  });\n\n  var api_secret = ensureOption(options, 'api_secret');\n  var signature_algorithm = ensureOption(options, 'signature_algorithm', DEFAULT_SIGNATURE_ALGORITHM);\n  return compute_hash(data + timestamp + api_secret, signature_algorithm, 'hex');\n}\n\n/**\n * Verifies the authenticity of a notification signature\n *\n * @param {string} body JSON of the request's body\n * @param {number} timestamp Unix timestamp in seconds. Can be retrieved from the X-Cld-Timestamp header\n * @param {string} signature Actual signature. Can be retrieved from the X-Cld-Signature header\n * @param {number} [valid_for=7200] The desired time in seconds for considering the request valid\n *\n * @return {boolean}\n */\nfunction verifyNotificationSignature(body, timestamp, signature) {\n  var valid_for = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 7200;\n\n  // verify that signature is valid for the given timestamp\n  if (timestamp < Math.round(Date.now() / 1000) - valid_for) {\n    return false;\n  }\n  var payload_hash = utils.webhook_signature(body, timestamp, {\n    api_secret: config().api_secret,\n    signature_algorithm: config().signature_algorithm\n  });\n  return signature === payload_hash;\n}\n\nfunction process_request_params(params, options) {\n  if (options.unsigned != null && options.unsigned) {\n    params = exports.clear_blank(params);\n    delete params.timestamp;\n  } else if (options.oauth_token || config().oauth_token) {\n    params = exports.clear_blank(params);\n  } else if (options.signature) {\n    params = exports.clear_blank(options);\n  } else {\n    params = exports.sign_request(params, options);\n  }\n\n  return params;\n}\n\nfunction private_download_url(public_id, format) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    public_id: public_id,\n    format: format,\n    type: options.type,\n    attachment: options.attachment,\n    expires_at: options.expires_at\n  }, options);\n  return exports.api_url(\"download\", options) + \"?\" + querystring.stringify(params);\n}\n\n/**\n * Utility method that uses the deprecated ZIP download API.\n * @deprecated Replaced by {download_zip_url} that uses the more advanced and robust archive generation and download API\n */\n\nfunction zip_download_url(tag) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    tag: tag,\n    transformation: utils.generate_transformation_string(options)\n  }, options);\n  return exports.api_url(\"download_tag.zip\", options) + \"?\" + hashToQuery(params);\n}\n\n/**\n * The returned url should allow downloading the backedup asset based on the\n * version and asset id\n * asset and version id are returned with resource(<PUBLIC_ID1>, { versions: true })\n * @param asset_id\n * @param version_id\n * @param options\n * @returns {string }\n */\nfunction download_backedup_asset(asset_id, version_id) {\n  var options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n  var params = exports.sign_request({\n    timestamp: options.timestamp || exports.timestamp(),\n    asset_id: asset_id,\n    version_id: version_id\n  }, options);\n  return exports.base_api_url(['download_backup'], options) + \"?\" + hashToQuery(params);\n}\n\n/**\n * Utility method to create a signed URL for specified resources.\n * @param action\n * @param params\n * @param options\n */\nfunction api_download_url(action, params, options) {\n  var download_params = _extends({}, params, {\n    mode: \"download\"\n  });\n  var cloudinary_params = exports.sign_request(download_params, options);\n  return exports.api_url(action, options) + \"?\" + hashToQuery(cloudinary_params);\n}\n\n/**\n * Returns a URL that when invokes creates an archive and returns it.\n * @param {object} options\n * @param {string} [options.resource_type=\"image\"] The resource type of files to include in the archive.\n *   Must be one of :image | :video | :raw\n * @param {string} [options.type=\"upload\"] The specific file type of resources: :upload|:private|:authenticated\n * @param {string|Array} [options.tags] list of tags to include in the archive\n * @param {string|Array<string>} [options.public_ids] list of public_ids to include in the archive\n * @param {string|Array<string>} [options.prefixes]  list of prefixes of public IDs (e.g., folders).\n * @param {string|Array<string>} [options.fully_qualified_public_ids] list of fully qualified public_ids to include\n *   in the archive.\n * @param {string|Array<string>} [options.transformations]  list of transformations.\n *   The derived images of the given transformations are included in the archive. Using the string representation of\n *   multiple chained transformations as we use for the 'eager' upload parameter.\n * @param {string} [options.mode=\"create\"] return the generated archive file or to store it as a raw resource and\n *   return a JSON with URLs for accessing the archive. Possible values: :download, :create\n * @param {string} [options.target_format=\"zip\"]\n * @param {string} [options.target_public_id]  public ID of the generated raw resource.\n *   Relevant only for the create mode. If not specified, random public ID is generated.\n * @param {boolean} [options.flatten_folders=false] If true, flatten public IDs with folders to be in the root\n *   of the archive. Add numeric counter to the file name in case of a name conflict.\n * @param {boolean} [options.flatten_transformations=false] If true, and multiple transformations are given,\n *   flatten the folder structure of derived images and store the transformation details on the file name instead.\n * @param {boolean} [options.use_original_filename] Use the original file name of included images\n *   (if available) instead of the public ID.\n * @param {boolean} [options.async=false] If true, return immediately and perform archive creation in the background.\n *   Relevant only for the create mode.\n * @param {string} [options.notification_url] URL to send an HTTP post request (webhook) to when the\n *   archive creation is completed.\n * @param {string|Array<string>} [options.target_tags=] Allows assigning one or more tags to the generated archive file\n *   (for later housekeeping via the admin API).\n * @param {string} [options.keep_derived=false] keep the derived images used for generating the archive\n * @return {String} archive url\n */\nfunction download_archive_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var params = exports.archive_params(merge(options, {\n    mode: \"download\"\n  }));\n  return api_download_url(\"generate_archive\", params, options);\n}\n\n/**\n * Returns a URL that when invokes creates an zip archive and returns it.\n * @see download_archive_url\n */\n\nfunction download_zip_url() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return exports.download_archive_url(merge(options, {\n    target_format: \"zip\"\n  }));\n}\n\n/**\n * Creates and returns a URL that when invoked creates an archive of a folder\n * @param {string} folder_path Full path (from the root) of the folder to download\n * @param {object} options Additional options\n * @returns {string} Url for downloading an archive of a folder\n */\nfunction download_folder(folder_path) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  options.resource_type = options.resource_type || \"all\";\n  options.prefixes = folder_path;\n  var cloudinary_params = exports.sign_request(exports.archive_params(merge(options, {\n    mode: \"download\"\n  })), options);\n  return exports.api_url(\"generate_archive\", options) + \"?\" + hashToQuery(cloudinary_params);\n}\n\n/**\n * Render the key/value pair as an HTML tag attribute\n * @private\n * @param {string} key\n * @param {string|boolean|number} [value]\n * @return {string} A string representing the HTML attribute\n */\nfunction join_pair(key, value) {\n  if (!value) {\n    return void 0;\n  }\n  return value === true ? key : key + \"='\" + value + \"'\";\n}\n\n/**\n * If the given value is a string, replaces single or double quotes with character entities\n * @private\n * @param {*} value The string to encode quotes in\n * @return {*} Encoded string or original value if not a string\n */\nfunction escapeQuotes(value) {\n  return isString(value) ? value.replace(/\\\"/g, '&#34;').replace(/\\'/g, '&#39;') : value;\n}\n\n/**\n *\n * @param attrs\n * @return {*}\n */\nexports.html_attrs = function html_attrs(attrs) {\n  return filter(map(attrs, function (value, key) {\n    return join_pair(key, escapeQuotes(value));\n  })).sort().join(\" \");\n};\n\nvar CLOUDINARY_JS_CONFIG_PARAMS = ['api_key', 'cloud_name', 'private_cdn', 'secure_distribution', 'cdn_subdomain'];\n\nfunction cloudinary_js_config() {\n  var params = pickOnlyExistingValues.apply(undefined, [config()].concat(CLOUDINARY_JS_CONFIG_PARAMS));\n  return `<script type='text/javascript'>\\n$.cloudinary.config(${JSON.stringify(params)});\\n</script>`;\n}\n\nfunction v1_result_adapter(callback) {\n  if (callback == null) {\n    return undefined;\n  }\n  return function (result) {\n    if (result.error != null) {\n      return callback(result.error);\n    }\n    return callback(void 0, result);\n  };\n}\n\nfunction v1_adapter(name, num_pass_args, v1) {\n  return function () {\n    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var pass_args = take(args, num_pass_args);\n    var options = args[num_pass_args];\n    var callback = args[num_pass_args + 1];\n    if (callback == null && isFunction(options)) {\n      callback = options;\n      options = {};\n    }\n    callback = v1_result_adapter(callback);\n    args = pass_args.concat([callback, options]);\n    return v1[name].apply(this, args);\n  };\n}\n\nfunction v1_adapters(exports, v1, mapping) {\n  return Object.keys(mapping).map(function (name) {\n    var num_pass_args = mapping[name];\n    exports[name] = v1_adapter(name, num_pass_args, v1);\n    return exports[name];\n  });\n}\n\nfunction as_safe_bool(value) {\n  if (value == null) {\n    return void 0;\n  }\n  if (value === true || value === 'true' || value === '1') {\n    value = 1;\n  }\n  if (value === false || value === 'false' || value === '0') {\n    value = 0;\n  }\n  return value;\n}\n\nvar NUMBER_PATTERN = \"([0-9]*)\\\\.([0-9]+)|([0-9]+)\";\n\nvar OFFSET_ANY_PATTERN = `(${NUMBER_PATTERN})([%pP])?`;\nvar RANGE_VALUE_RE = RegExp(`^${OFFSET_ANY_PATTERN}$`);\nvar OFFSET_ANY_PATTERN_RE = RegExp(`(${OFFSET_ANY_PATTERN})\\\\.\\\\.(${OFFSET_ANY_PATTERN})`);\n\n// Split a range into the start and end values\nfunction split_range(range) {\n  // :nodoc:\n  switch (range.constructor) {\n    case String:\n      if (!OFFSET_ANY_PATTERN_RE.test(range)) {\n        return range;\n      }\n      return range.split(\"..\");\n    case Array:\n      return [first(range), last(range)];\n    default:\n      return [null, null];\n  }\n}\n\nfunction norm_range_value(value) {\n  // :nodoc:\n  var offset = String(value).match(RANGE_VALUE_RE);\n  if (offset) {\n    var modifier = offset[5] ? 'p' : '';\n    value = `${offset[1] || offset[4]}${modifier}`;\n  }\n  return value;\n}\n\n/**\n * A video codec parameter can be either a String or a Hash.\n * @param {Object} param <code>vc_<codec>[ : <profile> : [<level>]]</code>\n *                       or <code>{ codec: 'h264', profile: 'basic', level: '3.1' }</code>\n * @return {String} <code><codec> : <profile> : [<level>]]</code> if a Hash was provided\n *                   or the param if a String was provided.\n *                   Returns null if param is not a Hash or String\n */\nfunction process_video_params(param) {\n  switch (param.constructor) {\n    case Object:\n      {\n        var video = \"\";\n        if ('codec' in param) {\n          video = param.codec;\n          if ('profile' in param) {\n            video += \":\" + param.profile;\n            if ('level' in param) {\n              video += \":\" + param.level;\n            }\n          }\n        }\n        return video;\n      }\n    case String:\n      return param;\n    default:\n      return null;\n  }\n}\n\n/**\n * Returns a Hash of parameters used to create an archive\n * @private\n * @param {object} options\n * @return {object} Archive API parameters\n */\n\nfunction archive_params() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  return {\n    allow_missing: exports.as_safe_bool(options.allow_missing),\n    async: exports.as_safe_bool(options.async),\n    expires_at: options.expires_at,\n    flatten_folders: exports.as_safe_bool(options.flatten_folders),\n    flatten_transformations: exports.as_safe_bool(options.flatten_transformations),\n    keep_derived: exports.as_safe_bool(options.keep_derived),\n    mode: options.mode,\n    notification_url: options.notification_url,\n    prefixes: options.prefixes && toArray(options.prefixes),\n    fully_qualified_public_ids: options.fully_qualified_public_ids && toArray(options.fully_qualified_public_ids),\n    public_ids: options.public_ids && toArray(options.public_ids),\n    skip_transformation_name: exports.as_safe_bool(options.skip_transformation_name),\n    tags: options.tags && toArray(options.tags),\n    target_format: options.target_format,\n    target_public_id: options.target_public_id,\n    target_tags: options.target_tags && toArray(options.target_tags),\n    timestamp: options.timestamp || exports.timestamp(),\n    transformations: utils.build_eager(options.transformations),\n    type: options.type,\n    use_original_filename: exports.as_safe_bool(options.use_original_filename)\n  };\n}\n\nexports.process_layer = process_layer;\n\nexports.create_source_tag = function create_source_tag(src, source_type) {\n  var codecs = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n  var video_type = source_type === 'ogv' ? 'ogg' : source_type;\n  var mime_type = `video/${video_type}`;\n  if (!isEmpty(codecs)) {\n    var codecs_str = isArray(codecs) ? codecs.join(', ') : codecs;\n    mime_type += `; codecs=${codecs_str}`;\n  }\n  return `<source ${utils.html_attrs({\n    src,\n    type: mime_type\n  })}>`;\n};\n\nfunction build_explicit_api_params(public_id) {\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  return [exports.build_upload_params(extend({}, { public_id }, options))];\n}\n\nfunction generate_responsive_breakpoints_string(breakpoints) {\n  if (breakpoints == null) {\n    return null;\n  }\n  breakpoints = clone(breakpoints);\n  if (!isArray(breakpoints)) {\n    breakpoints = [breakpoints];\n  }\n  for (var j = 0; j < breakpoints.length; j++) {\n    var breakpoint_settings = breakpoints[j];\n    if (breakpoint_settings != null) {\n      if (breakpoint_settings.transformation) {\n        breakpoint_settings.transformation = utils.generate_transformation_string(clone(breakpoint_settings.transformation));\n      }\n    }\n  }\n  return JSON.stringify(breakpoints);\n}\n\nfunction build_streaming_profiles_param() {\n  var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n  var params = pickOnlyExistingValues(options, \"display_name\", \"representations\");\n  if (isArray(params.representations)) {\n    params.representations = JSON.stringify(params.representations.map(function (r) {\n      return {\n        transformation: utils.generate_transformation_string(r.transformation)\n      };\n    }));\n  }\n  return params;\n}\n\nfunction hashToParameters(hash) {\n  return entries(hash).reduce(function (parameters, _ref30) {\n    var _ref31 = _slicedToArray(_ref30, 2),\n        key = _ref31[0],\n        value = _ref31[1];\n\n    if (isArray(value)) {\n      key = key.endsWith('[]') ? key : key + '[]';\n      var items = value.map(function (v) {\n        return [key, v];\n      });\n      parameters = parameters.concat(items);\n    } else {\n      parameters.push([key, value]);\n    }\n    return parameters;\n  }, []);\n}\n\n/**\n * Convert a hash of values to a URI query string.\n * Array values are spread as individual parameters.\n * @param {object} hash Key-value parameters\n * @return {string} A URI query string.\n */\nfunction hashToQuery(hash) {\n  return hashToParameters(hash).map(function (_ref32) {\n    var _ref33 = _slicedToArray(_ref32, 2),\n        key = _ref33[0],\n        value = _ref33[1];\n\n    return `${querystring.escape(key)}=${querystring.escape(value)}`;\n  }).join('&');\n}\n\n/**\n * Verify that the parameter `value` is defined and it's string value is not zero.\n * <br>This function should not be confused with `isEmpty()`.\n * @private\n * @param {string|number} value The value to check.\n * @return {boolean} True if the value is defined and not empty.\n */\n\nfunction present(value) {\n  return value != null && (\"\" + value).length > 0;\n}\n\n/**\n * Returns a new object with key values from source based on the keys.\n * `null` or `undefined` values are not copied.\n * @private\n * @param {object} source The object to pick values from.\n * @param {...string} keys One or more keys to copy from source.\n * @return {object} A new object with the required keys and values.\n */\n\nfunction pickOnlyExistingValues(source) {\n  var result = {};\n  if (source) {\n    for (var _len2 = arguments.length, keys = Array(_len2 > 1 ? _len2 - 1 : 0), _key2 = 1; _key2 < _len2; _key2++) {\n      keys[_key2 - 1] = arguments[_key2];\n    }\n\n    keys.forEach(function (key) {\n      if (source[key] != null) {\n        result[key] = source[key];\n      }\n    });\n  }\n  return result;\n}\n\n/**\n * Returns a JSON array as String.\n * Yields the array before it is converted to JSON format\n * @private\n * @param {object|String|Array<object>} data\n * @param {function(*):*} [modifier] called with the array before the array is stringified\n * @return {String|null} a JSON array string or `null` if data is `null`\n */\n\nfunction jsonArrayParam(data, modifier) {\n  if (!data) {\n    return null;\n  }\n  if (isString(data)) {\n    data = JSON.parse(data);\n  }\n  if (!isArray(data)) {\n    data = [data];\n  }\n  if (isFunction(modifier)) {\n    data = modifier(data);\n  }\n  return JSON.stringify(data);\n}\n\n/**\n * Empty function - do nothing\n *\n */\nexports.NOP = function () {};\nexports.generate_auth_token = generate_auth_token;\nexports.getUserAgent = getUserAgent;\nexports.build_upload_params = build_upload_params;\nexports.build_multi_and_sprite_params = build_multi_and_sprite_params;\nexports.api_download_url = api_download_url;\nexports.timestamp = function () {\n  return Math.floor(new Date().getTime() / 1000);\n};\nexports.option_consume = consumeOption; // for backwards compatibility\nexports.build_array = toArray; // for backwards compatibility\nexports.encode_double_array = encodeDoubleArray;\nexports.encode_key_value = encode_key_value;\nexports.encode_context = encode_context;\nexports.build_eager = build_eager;\nexports.build_custom_headers = build_custom_headers;\nexports.generate_transformation_string = generate_transformation_string;\nexports.updateable_resource_params = updateable_resource_params;\nexports.extractUrlParams = extractUrlParams;\nexports.extractTransformationParams = extractTransformationParams;\nexports.patchFetchFormat = patchFetchFormat;\nexports.url = url;\nexports.video_url = video_url;\nexports.video_thumbnail_url = video_thumbnail_url;\nexports.api_url = api_url;\nexports.random_public_id = random_public_id;\nexports.signed_preloaded_image = signed_preloaded_image;\nexports.api_sign_request = api_sign_request;\nexports.clear_blank = clear_blank;\nexports.merge = merge;\nexports.sign_request = sign_request;\nexports.webhook_signature = webhook_signature;\nexports.verifyNotificationSignature = verifyNotificationSignature;\nexports.process_request_params = process_request_params;\nexports.private_download_url = private_download_url;\nexports.zip_download_url = zip_download_url;\nexports.download_archive_url = download_archive_url;\nexports.download_zip_url = download_zip_url;\nexports.cloudinary_js_config = cloudinary_js_config;\nexports.v1_adapters = v1_adapters;\nexports.as_safe_bool = as_safe_bool;\nexports.archive_params = archive_params;\nexports.build_explicit_api_params = build_explicit_api_params;\nexports.generate_responsive_breakpoints_string = generate_responsive_breakpoints_string;\nexports.build_streaming_profiles_param = build_streaming_profiles_param;\nexports.hashToParameters = hashToParameters;\nexports.present = present;\nexports.only = pickOnlyExistingValues; // for backwards compatibility\nexports.pickOnlyExistingValues = pickOnlyExistingValues;\nexports.jsonArrayParam = jsonArrayParam;\nexports.download_folder = download_folder;\nexports.base_api_url = base_api_url;\nexports.download_backedup_asset = download_backedup_asset;\nexports.compute_hash = compute_hash;\nexports.build_distribution_domain = build_distribution_domain;\nexports.sort_object_by_key = sort_object_by_key;\n\n// was exported before, so kept for backwards compatibility\nexports.DEFAULT_POSTER_OPTIONS = DEFAULT_POSTER_OPTIONS;\nexports.DEFAULT_VIDEO_SOURCE_TYPES = DEFAULT_VIDEO_SOURCE_TYPES;\n\nObject.assign(module.exports, {\n  normalize_expression,\n  at,\n  clone,\n  extend,\n  filter,\n  includes,\n  isArray,\n  isEmpty,\n  isNumber,\n  isObject,\n  isRemoteUrl,\n  isString,\n  isUndefined,\n  keys: function keys(source) {\n    return Object.keys(source);\n  },\n  ensurePresenceOf\n});"],"mappings":"AAAA,YAAY;;AAEZ,IAAIA,QAAQ,GAAGC,MAAM,CAACC,MAAM,IAAI,UAAUC,MAAM,EAAE;EAAE,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGC,SAAS,CAACC,MAAM,EAAEF,CAAC,EAAE,EAAE;IAAE,IAAIG,MAAM,GAAGF,SAAS,CAACD,CAAC,CAAC;IAAE,KAAK,IAAII,GAAG,IAAID,MAAM,EAAE;MAAE,IAAIN,MAAM,CAACQ,SAAS,CAACC,cAAc,CAACC,IAAI,CAACJ,MAAM,EAAEC,GAAG,CAAC,EAAE;QAAEL,MAAM,CAACK,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;MAAE;IAAE;EAAE;EAAE,OAAOL,MAAM;AAAE,CAAC;AAEhQ,IAAIS,cAAc,GAAG,YAAY;EAAE,SAASC,aAAaA,CAACC,GAAG,EAAEV,CAAC,EAAE;IAAE,IAAIW,IAAI,GAAG,EAAE;IAAE,IAAIC,EAAE,GAAG,IAAI;IAAE,IAAIC,EAAE,GAAG,KAAK;IAAE,IAAIC,EAAE,GAAGC,SAAS;IAAE,IAAI;MAAE,KAAK,IAAIC,EAAE,GAAGN,GAAG,CAACO,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC,EAAEC,EAAE,EAAE,EAAEP,EAAE,GAAG,CAACO,EAAE,GAAGH,EAAE,CAACI,IAAI,CAAC,CAAC,EAAEC,IAAI,CAAC,EAAET,EAAE,GAAG,IAAI,EAAE;QAAED,IAAI,CAACW,IAAI,CAACH,EAAE,CAACI,KAAK,CAAC;QAAE,IAAIvB,CAAC,IAAIW,IAAI,CAACT,MAAM,KAAKF,CAAC,EAAE;MAAO;IAAE,CAAC,CAAC,OAAOwB,GAAG,EAAE;MAAEX,EAAE,GAAG,IAAI;MAAEC,EAAE,GAAGU,GAAG;IAAE,CAAC,SAAS;MAAE,IAAI;QAAE,IAAI,CAACZ,EAAE,IAAII,EAAE,CAAC,QAAQ,CAAC,EAAEA,EAAE,CAAC,QAAQ,CAAC,CAAC,CAAC;MAAE,CAAC,SAAS;QAAE,IAAIH,EAAE,EAAE,MAAMC,EAAE;MAAE;IAAE;IAAE,OAAOH,IAAI;EAAE;EAAE,OAAO,UAAUD,GAAG,EAAEV,CAAC,EAAE;IAAE,IAAIyB,KAAK,CAACC,OAAO,CAAChB,GAAG,CAAC,EAAE;MAAE,OAAOA,GAAG;IAAE,CAAC,MAAM,IAAIO,MAAM,CAACC,QAAQ,IAAIrB,MAAM,CAACa,GAAG,CAAC,EAAE;MAAE,OAAOD,aAAa,CAACC,GAAG,EAAEV,CAAC,CAAC;IAAE,CAAC,MAAM;MAAE,MAAM,IAAI2B,SAAS,CAAC,sDAAsD,CAAC;IAAE;EAAE,CAAC;AAAE,CAAC,CAAC,CAAC;AAEvpB,SAASC,kBAAkBA,CAAClB,GAAG,EAAE;EAAE,IAAIe,KAAK,CAACC,OAAO,CAAChB,GAAG,CAAC,EAAE;IAAE,KAAK,IAAIV,CAAC,GAAG,CAAC,EAAE6B,IAAI,GAAGJ,KAAK,CAACf,GAAG,CAACR,MAAM,CAAC,EAAEF,CAAC,GAAGU,GAAG,CAACR,MAAM,EAAEF,CAAC,EAAE,EAAE;MAAE6B,IAAI,CAAC7B,CAAC,CAAC,GAAGU,GAAG,CAACV,CAAC,CAAC;IAAE;IAAE,OAAO6B,IAAI;EAAE,CAAC,MAAM;IAAE,OAAOJ,KAAK,CAACK,IAAI,CAACpB,GAAG,CAAC;EAAE;AAAE;;AAElM;AACA;AACA;AACA;AACA;;AAEA,IAAIqB,MAAM,GAAGC,OAAO,CAAC,QAAQ,CAAC;AAC9B,IAAIC,WAAW,GAAGD,OAAO,CAAC,aAAa,CAAC;AACxC,IAAIE,QAAQ,GAAGF,OAAO,CAAC,KAAK,CAAC,CAACG,KAAK;;AAEnC;AACA,IAAIC,OAAO,GAAGJ,OAAO,CAAC,gBAAgB,CAAC;AACvC,IAAIK,KAAK,GAAGL,OAAO,CAAC,cAAc,CAAC;AACnC,IAAIM,UAAU,GAAGN,OAAO,CAAC,mBAAmB,CAAC;AAC7C,IAAIO,aAAa,GAAGP,OAAO,CAAC,sBAAsB,CAAC;AACnD,IAAIQ,IAAI,GAAGR,OAAO,CAAC,aAAa,CAAC;AACjC,IAAIS,GAAG,GAAGT,OAAO,CAAC,YAAY,CAAC;AAC/B,IAAIU,IAAI,GAAGV,OAAO,CAAC,aAAa,CAAC;AACjC,IAAIW,EAAE,GAAGX,OAAO,CAAC,WAAW,CAAC;;AAE7B;AACA,IAAIY,KAAK,GAAGZ,OAAO,CAAC,cAAc,CAAC;AACnC,IAAIa,MAAM,GAAGb,OAAO,CAAC,eAAe,CAAC;AACrC,IAAIc,MAAM,GAAGd,OAAO,CAAC,eAAe,CAAC;AACrC,IAAIe,QAAQ,GAAGf,OAAO,CAAC,iBAAiB,CAAC;AACzC,IAAIN,OAAO,GAAGM,OAAO,CAAC,gBAAgB,CAAC;AACvC,IAAIgB,OAAO,GAAGhB,OAAO,CAAC,gBAAgB,CAAC;AACvC,IAAIiB,QAAQ,GAAGjB,OAAO,CAAC,iBAAiB,CAAC;AACzC,IAAIkB,QAAQ,GAAGlB,OAAO,CAAC,iBAAiB,CAAC;AACzC,IAAImB,QAAQ,GAAGnB,OAAO,CAAC,iBAAiB,CAAC;AACzC,IAAIoB,WAAW,GAAGpB,OAAO,CAAC,oBAAoB,CAAC;AAE/C,IAAIqB,YAAY,GAAGrB,OAAO,CAAC,yBAAyB,CAAC;AACrD,IAAIsB,aAAa,GAAGtB,OAAO,CAAC,yBAAyB,CAAC;AACtD,IAAIuB,OAAO,GAAGvB,OAAO,CAAC,mBAAmB,CAAC;AAE1C,IAAIwB,QAAQ,GAAGxB,OAAO,CAAC,4BAA4B,CAAC;EAChDyB,eAAe,GAAGD,QAAQ,CAACC,eAAe;AAE9C,IAAIC,iBAAiB,GAAG1B,OAAO,CAAC,8BAA8B,CAAC;AAE/D,IAAI2B,MAAM,GAAG3B,OAAO,CAAC,WAAW,CAAC;AACjC,IAAI4B,cAAc,GAAG5B,OAAO,CAAC,eAAe,CAAC;AAC7C,IAAI6B,KAAK,GAAG7B,OAAO,CAAC,SAAS,CAAC;AAC9B,IAAI8B,gBAAgB,GAAG9B,OAAO,CAAC,oBAAoB,CAAC;AACpD,IAAI+B,YAAY,GAAG/B,OAAO,CAAC,gBAAgB,CAAC,CAACgC,QAAQ,CAACL,MAAM,CAAC,CAAC,CAAC;AAC/D,IAAIM,OAAO,GAAGjC,OAAO,CAAC,WAAW,CAAC;AAClC,IAAIkC,WAAW,GAAGlC,OAAO,CAAC,eAAe,CAAC;AAC1C,IAAImC,cAAc,GAAGnC,OAAO,CAAC,wCAAwC,CAAC;AAEtE,IAAIoC,aAAa,GAAGpC,OAAO,CAAC,iBAAiB,CAAC,CAACqC,IAAI;EAC/CC,mBAAmB,GAAGF,aAAa,CAACE,mBAAmB;EACvDC,wBAAwB,GAAGH,aAAa,CAACG,wBAAwB;AAErEC,OAAO,GAAGC,MAAM,CAACD,OAAO;AACxB,IAAIE,KAAK,GAAGD,MAAM,CAACD,OAAO;AAE1B,IAAI;EACF;EACAE,KAAK,CAACC,OAAO,GAAG3C,OAAO,CAAC,oBAAoB,CAAC,CAAC4C,OAAO;AACvD,CAAC,CAAC,OAAOC,KAAK,EAAE;EACdH,KAAK,CAACC,OAAO,GAAG,EAAE;AACpB;AAEA,SAASG,mBAAmBA,CAACC,OAAO,EAAE;EACpC,IAAIC,aAAa,GAAGnF,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAE6D,MAAM,CAAC,CAAC,CAACsB,UAAU,EAAEF,OAAO,CAAC;EACnE,OAAOnB,cAAc,CAACoB,aAAa,CAAC;AACtC;AAEAR,OAAO,CAACU,aAAa,GAAG,+BAA+B;AACvDV,OAAO,CAACW,qBAAqB,GAAG,2BAA2B;AAC3DX,OAAO,CAACY,iBAAiB,GAAG,oBAAoB;AAChDZ,OAAO,CAACa,UAAU,GAAGb,OAAO,CAACY,iBAAiB;AAC9CZ,OAAO,CAACc,UAAU,GAAI,oBAAmBd,OAAO,CAACG,OAAQ,UAASY,OAAO,CAACC,QAAQ,CAACC,IAAK,GAAE;;AAE1F;AACA;AACAjB,OAAO,CAACkB,YAAY,GAAG,EAAE;AAEzB,SAASC,YAAYA,CAAA,EAAG;EACtB,OAAO3C,OAAO,CAAC0B,KAAK,CAACgB,YAAY,CAAC,GAAI,GAAEhB,KAAK,CAACY,UAAW,EAAC,GAAI,GAAEZ,KAAK,CAACgB,YAAa,IAAGhB,KAAK,CAACY,UAAW,EAAC;AAC1G;AAEA,IAAIM,SAAS,GAAG5D,OAAO,CAAC,UAAU,CAAC;EAC/B6D,uCAAuC,GAAGD,SAAS,CAACC,uCAAuC;EAC3FC,sBAAsB,GAAGF,SAAS,CAACE,sBAAsB;EACzDC,0BAA0B,GAAGH,SAAS,CAACG,0BAA0B;EACjEC,qBAAqB,GAAGJ,SAAS,CAACI,qBAAqB;EACvDC,eAAe,GAAGL,SAAS,CAACK,eAAe;EAC3CC,oBAAoB,GAAGN,SAAS,CAACM,oBAAoB;EACrDC,qBAAqB,GAAGP,SAAS,CAACO,qBAAqB;EACvDC,aAAa,GAAGR,SAAS,CAACQ,aAAa;EACvCC,aAAa,GAAGT,SAAS,CAACS,aAAa;EACvCC,8BAA8B,GAAGV,SAAS,CAACU,8BAA8B;EACzEC,2BAA2B,GAAGX,SAAS,CAACW,2BAA2B;AAEvE,SAASC,SAASA,CAACC,KAAK,EAAE;EACxB,IAAIC,QAAQ,GAAG,EAAE;EACjB,IAAIC,KAAK,GAAG,EAAE;EAEd,IAAI,CAAC3D,OAAO,CAACyD,KAAK,CAACG,UAAU,CAAC,EAAE;IAC9B,OAAOH,KAAK,CAACG,UAAU;EACzB;EACA/G,MAAM,CAACgH,IAAI,CAACX,oBAAoB,CAAC,CAACY,OAAO,CAAC,UAAUC,IAAI,EAAE;IACxD,IAAIC,aAAa,GAAGd,oBAAoB,CAACa,IAAI,CAAC;IAC9C,IAAIE,UAAU,GAAGR,KAAK,CAACM,IAAI,CAAC,IAAIC,aAAa;IAC7C,IAAIC,UAAU,KAAKD,aAAa,EAAE;MAChCN,QAAQ,CAACpF,IAAI,CAAC2F,UAAU,CAAC;IAC3B;EACF,CAAC,CAAC;EAEFpH,MAAM,CAACgH,IAAI,CAACJ,KAAK,CAAC,CAACK,OAAO,CAAC,UAAUC,IAAI,EAAE;IACzC,IAAIA,IAAI,KAAK,gBAAgB,IAAIA,IAAI,KAAK,cAAc,EAAE;MACxDL,QAAQ,CAACpF,IAAI,CAAE,GAAEyF,IAAK,IAAGN,KAAK,CAACM,IAAI,CAAE,EAAC,CAAC;IACzC;IACA,IAAIA,IAAI,KAAK,cAAc,EAAE;MAC3BL,QAAQ,CAACpF,IAAI,CAAE,GAAEyF,IAAI,CAACG,KAAK,CAAC,GAAG,CAAC,CAACC,GAAG,CAAC,CAAE,IAAGV,KAAK,CAACM,IAAI,CAAE,EAAC,CAAC;IAC1D;IACA,IAAIA,IAAI,KAAK,mBAAmB,EAAE;MAChCL,QAAQ,CAACpF,IAAI,CAAE,aAAYmF,KAAK,CAACM,IAAI,CAAE,EAAC,CAAC;IAC3C;EACF,CAAC,CAAC;EAEF,IAAIN,KAAK,CAACnG,cAAc,CAAC,WAAW,IAAI,aAAa,CAAC,IAAI,CAAC0C,OAAO,CAAC0D,QAAQ,CAAC,EAAE;IAC5E,IAAI,CAACD,KAAK,CAACW,SAAS,EAAE,MAAM,IAAIC,KAAK,CAAC,oDAAoD,CAAC;IAC3F,IAAI,CAACZ,KAAK,CAACa,WAAW,EAAE,MAAM,IAAID,KAAK,CAAC,sDAAsD,CAAC;IAC/FX,QAAQ,CAACa,OAAO,CAACd,KAAK,CAACW,SAAS,CAAC;IACjCV,QAAQ,CAACa,OAAO,CAACd,KAAK,CAACa,WAAW,CAAC;IACnCX,KAAK,GAAGvE,OAAO,CAACsE,QAAQ,CAAC,CAACc,IAAI,CAAC,GAAG,CAAC;EACrC;EACA,OAAOb,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASc,oBAAoBA,CAACC,UAAU,EAAE;EACxC,IAAI,CAACvE,QAAQ,CAACuE,UAAU,CAAC,IAAIA,UAAU,CAACxH,MAAM,KAAK,CAAC,IAAIwH,UAAU,CAACC,KAAK,CAAC,QAAQ,CAAC,EAAE;IAClF,OAAOD,UAAU;EACnB;EAEA,IAAIE,SAAS,GAAG,0CAA0C;EAC1D,IAAIC,gBAAgB,GAAG,IAAI,GAAGD,SAAS,GAAG,YAAY;EACtD,IAAIE,kBAAkB,GAAG,IAAIC,MAAM,CAACF,gBAAgB,EAAE,GAAG,CAAC;EAC1DH,UAAU,GAAGA,UAAU,CAACM,OAAO,CAACF,kBAAkB,EAAE,UAAUH,KAAK,EAAE;IACnE,OAAO3B,qBAAqB,CAAC2B,KAAK,CAAC;EACrC,CAAC,CAAC;;EAEF;EACA;EACA;EACA;EACA;EACA,IAAIM,qBAAqB,GAAG,GAAG,GAAGpI,MAAM,CAACgH,IAAI,CAACZ,eAAe,CAAC,CAACxD,GAAG,CAAC,UAAUyF,CAAC,EAAE;IAC9E,OAAQ,IAAGA,CAAE,IAAGA,CAAE,EAAC;EACrB,CAAC,CAAC,CAACV,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG;EAClB,IAAIW,mBAAmB,GAAG,eAAe;EACzC,IAAIC,kBAAkB,GAAG,IAAIL,MAAM,CAAE,GAAEI,mBAAoB,IAAGF,qBAAsB,EAAC,EAAE,GAAG,CAAC;EAC3FP,UAAU,GAAGA,UAAU,CAACM,OAAO,CAACI,kBAAkB,EAAE,UAAUT,KAAK,EAAE;IACnE,OAAO1B,eAAe,CAAC0B,KAAK,CAAC,IAAIA,KAAK;EACxC,CAAC,CAAC;EAEF,OAAOD,UAAU,CAACM,OAAO,CAAC,QAAQ,EAAE,GAAG,CAAC;AAC1C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASK,uBAAuBA,CAACC,cAAc,EAAE;EAC/C,IAAI,CAACpF,QAAQ,CAACoF,cAAc,CAAC,EAAE;IAC7B,OAAOA,cAAc;EACvB;EACA,IAAIA,cAAc,CAACC,aAAa,KAAK,QAAQ,EAAE;IAC7C,IAAIC,aAAa,GAAG/E,eAAe,CAAC6E,cAAc,CAACnI,MAAM,CAAC;IAE1D,OAAO,CAACmI,cAAc,CAACC,aAAa,EAAEC,aAAa,CAAC,CAAChB,IAAI,CAAC,GAAG,CAAC;EAChE;EACA,OAAO,CAACc,cAAc,CAACC,aAAa,EAAED,cAAc,CAACnI,MAAM,CAAC,CAACqH,IAAI,CAAC,GAAG,CAAC;AACxE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiB,2BAA2BA,CAACC,iBAAiB,EAAE;EACtD,IAAIC,MAAM,GAAGN,uBAAuB,CAACK,iBAAiB,CAAC;EACvD,OAAOhE,KAAK,CAACvB,QAAQ,CAACwF,MAAM,CAAC,GAAI,OAAMA,MAAO,EAAC,GAAG,IAAI;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,UAAUA,CAACC,OAAO,EAAE;EAC3B,OAAOA,OAAO,GAAG,KAAK,GAAGpB,oBAAoB,CAACoB,OAAO,CAAC,GAAGA,OAAO;AAClE;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,aAAaA,CAACrC,KAAK,EAAE;EAC5B,IAAItD,QAAQ,CAACsD,KAAK,CAAC,EAAE;IACnB,IAAIsC,YAAY,GAAG,IAAI;IACvB,IAAIC,QAAQ,GAAG,EAAE;IAEjB,IAAIC,eAAe,GAAG,QAAQ;IAC9B,IAAIxC,KAAK,CAACyC,UAAU,CAACD,eAAe,CAAC,EAAE;MACrCD,QAAQ,GAAGvC,KAAK,CAAC0C,SAAS,CAACF,eAAe,CAAC/I,MAAM,CAAC;IACpD,CAAC,MAAM,IAAIuG,KAAK,CAAC2C,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;MAC7C,IAAIC,KAAK,GAAG5C,KAAK,CAACS,KAAK,CAAC,GAAG,EAAE,CAAC,CAAC;MAC/B6B,YAAY,GAAGM,KAAK,CAAC,CAAC,CAAC;MACvBL,QAAQ,GAAGK,KAAK,CAAC,CAAC,CAAC;IACrB,CAAC,MAAM;MACL,OAAO5C,KAAK;IACd;IAEAA,KAAK,GAAG;MACN6C,GAAG,EAAEN,QAAQ;MACbO,IAAI,EAAE;IACR,CAAC;IAED,IAAIR,YAAY,EAAE;MAChBtC,KAAK,CAAC+C,aAAa,GAAGT,YAAY;IACpC;EACF;EAEA,IAAI,OAAOtC,KAAK,KAAK,QAAQ,EAAE;IAC7B,OAAOA,KAAK;EACd;EAEA,IAAIgD,MAAM,GAAGhD,KAAK;IACd+C,aAAa,GAAGC,MAAM,CAACD,aAAa;IACpCE,IAAI,GAAGD,MAAM,CAACC,IAAI;IAClBH,IAAI,GAAGE,MAAM,CAACF,IAAI;IAClBI,SAAS,GAAGF,MAAM,CAACE,SAAS;IAC5BC,MAAM,GAAGH,MAAM,CAACG,MAAM;IACtBC,QAAQ,GAAGJ,MAAM,CAACH,GAAG;EAEzB,IAAIQ,UAAU,GAAG,EAAE;EAEnB,IAAI,CAAC9G,OAAO,CAAC0G,IAAI,CAAC,IAAI1G,OAAO,CAACwG,aAAa,CAAC,EAAE;IAC5CA,aAAa,GAAG,MAAM;EACxB;EAEA,IAAI,CAACxG,OAAO,CAAC6G,QAAQ,CAAC,IAAI7G,OAAO,CAACuG,IAAI,CAAC,EAAE;IACvCA,IAAI,GAAG,OAAO;EAChB;EAEA,IAAI,CAACvG,OAAO,CAAC2G,SAAS,CAAC,IAAI,CAAC3G,OAAO,CAAC4G,MAAM,CAAC,EAAE;IAC3CD,SAAS,GAAI,GAAEA,SAAU,IAAGC,MAAO,EAAC;EACtC;EAEA,IAAI5G,OAAO,CAAC2G,SAAS,CAAC,IAAIH,aAAa,KAAK,MAAM,IAAID,IAAI,KAAK,OAAO,EAAE;IACtE,MAAM,IAAIlC,KAAK,CAAC,4CAA4C,CAAC;EAC/D;EAEA,IAAI,CAACrE,OAAO,CAACwG,aAAa,CAAC,IAAIA,aAAa,KAAK,OAAO,EAAE;IACxDM,UAAU,CAACxI,IAAI,CAACkI,aAAa,CAAC;EAChC;EAEA,IAAI,CAACxG,OAAO,CAACuG,IAAI,CAAC,IAAIA,IAAI,KAAK,QAAQ,EAAE;IACvCO,UAAU,CAACxI,IAAI,CAACiI,IAAI,CAAC;EACvB;EAEA,IAAIC,aAAa,KAAK,MAAM,IAAIA,aAAa,KAAK,WAAW,EAAE;IAC7D,IAAIxG,OAAO,CAAC2G,SAAS,CAAC,IAAI3G,OAAO,CAAC0G,IAAI,CAAC,EAAE;MACvC,MAAM,IAAIrC,KAAK,CAAC,iDAAiD,CAAC;IACpE;IAEA,IAAI0C,WAAW,GAAGvD,SAAS,CAACC,KAAK,CAAC;IAElC,IAAI,CAACzD,OAAO,CAAC+G,WAAW,CAAC,EAAE;MACzBD,UAAU,CAACxI,IAAI,CAACyI,WAAW,CAAC;IAC9B;IAEA,IAAI,CAAC/G,OAAO,CAAC2G,SAAS,CAAC,EAAE;MACvBA,SAAS,GAAGA,SAAS,CAAC3B,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;MACvC8B,UAAU,CAACxI,IAAI,CAACqI,SAAS,CAAC;IAC5B;IAEA,IAAI,CAAC3G,OAAO,CAAC0G,IAAI,CAAC,EAAE;MAClB,IAAIM,cAAc,GAAG,IAAIjC,MAAM,CAAC,sBAAsB,CAAC;MACvD,IAAIkC,sBAAsB,GAAGP,IAAI,CAACxC,KAAK,CAAC8C,cAAc,CAAC,CAAClH,MAAM,CAAC,UAAUoH,CAAC,EAAE;QAC1E,OAAOA,CAAC;MACV,CAAC,CAAC;MACF,IAAIC,YAAY,GAAGF,sBAAsB,CAACxH,GAAG,CAAC,UAAU2H,OAAO,EAAE;QAC/D,IAAIC,OAAO,GAAGL,cAAc,CAAC/I,MAAM,CAAC0G,KAAK,CAAC,CAACyC,OAAO,CAAC;QACnD,IAAIE,UAAU,GAAGD,OAAO,GAAGA,OAAO,CAACnK,MAAM,GAAG,CAAC,GAAG,KAAK;QACrD,IAAIoK,UAAU,EAAE;UACd,OAAOF,OAAO;QAChB;QACA,OAAOG,iBAAiB,CAACC,kBAAkB,CAACnH,YAAY,CAAC+G,OAAO,EAAE,IAAIrC,MAAM,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;MAC7F,CAAC,CAAC;MACF+B,UAAU,CAACxI,IAAI,CAAC6I,YAAY,CAAC3C,IAAI,CAAC,EAAE,CAAC,CAAC;IACxC;EACF,CAAC,MAAM,IAAI+B,IAAI,KAAK,OAAO,EAAE;IAC3B,IAAIkB,UAAU,GAAGhH,eAAe,CAACoG,QAAQ,CAAC;IAC1CC,UAAU,CAACxI,IAAI,CAACmJ,UAAU,CAAC;EAC7B,CAAC,MAAM;IACLd,SAAS,GAAGA,SAAS,CAAC3B,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC;IACvC8B,UAAU,CAACxI,IAAI,CAACqI,SAAS,CAAC;EAC5B;EAEA,OAAOG,UAAU,CAACtC,IAAI,CAAC,GAAG,CAAC;AAC7B;AAEA,SAASkD,oBAAoBA,CAACC,MAAM,EAAEC,MAAM,EAAE;EAC5C,IAAIC,WAAW,GAAG5K,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EAExF,OAAO0K,MAAM,CAACzD,KAAK,CAAC0D,MAAM,CAAC,CAACpD,IAAI,CAACqD,WAAW,CAAC;AAC/C;AAEA,SAASN,iBAAiBA,CAACO,KAAK,EAAE;EAChC,OAAOJ,oBAAoB,CAACA,oBAAoB,CAACI,KAAK,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,GAAG,EAAE,KAAK,CAAC;AAClF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,cAAcA,CAACC,MAAM,EAAE;EAC9B,IAAI,CAACA,MAAM,EAAE;IACX,OAAOA,MAAM;EACf;EACA,IAAI,CAACtJ,OAAO,CAACsJ,MAAM,CAAC,EAAE;IACpBA,MAAM,GAAG,CAACA,MAAM,CAAC;EACnB;EACA,IAAIA,MAAM,CAAC9K,MAAM,KAAK,CAAC,IAAI8K,MAAM,CAAC9K,MAAM,GAAG,CAAC,EAAE;IAC5C,MAAM,IAAImH,KAAK,CAAC,oDAAoD,CAAC;EACvE;EACA,IAAI2D,MAAM,CAACC,SAAS,CAAC,UAAUf,CAAC,EAAE;IAChC,OAAOA,CAAC,KAAK,IAAI;EACnB,CAAC,CAAC,IAAI,CAAC,EAAE;IACP,MAAM,IAAI7C,KAAK,CAAC,wBAAwB,CAAC;EAC3C;EACA,OAAO2D,MAAM,CAACvI,GAAG,CAACgF,oBAAoB,CAAC,CAACD,IAAI,CAAC,GAAG,CAAC;AACnD;AAEA,SAAS0D,6BAA6BA,CAACC,YAAY,EAAEpG,OAAO,EAAE;EAC5D,IAAIqG,GAAG,GAAG,IAAI;EACd,IAAI,OAAOD,YAAY,KAAK,QAAQ,EAAE;IACpCC,GAAG,GAAGD,YAAY;EACpB,CAAC,MAAM;IACL,IAAInI,OAAO,CAAC+B,OAAO,CAAC,EAAE;MACpBA,OAAO,GAAGoG,YAAY;IACxB,CAAC,MAAM;MACL,MAAM,IAAI9D,KAAK,CAAC,iEAAiE,CAAC;IACpF;IACA+D,GAAG,GAAG,IAAI;EACZ;EACA,IAAI,CAACrG,OAAO,IAAI,CAACqG,GAAG,EAAE;IACpB,MAAM,IAAI/D,KAAK,CAAC,iCAAiC,CAAC;EACpD;EACA,IAAI,CAACtC,OAAO,EAAE;IACZA,OAAO,GAAG,CAAC,CAAC;EACd;EACA,IAAIsG,IAAI,GAAGtG,OAAO,CAACsG,IAAI;EACvB,IAAIC,cAAc,GAAGC,8BAA8B,CAAC1I,MAAM,CAAC,CAAC,CAAC,EAAEkC,OAAO,EAAE;IACtEyG,YAAY,EAAEzG,OAAO,CAAC6E;EACxB,CAAC,CAAC,CAAC;EACH,OAAO;IACLwB,GAAG;IACHE,cAAc;IACdD,IAAI;IACJI,SAAS,EAAE/G,KAAK,CAAC+G,SAAS,CAAC,CAAC;IAC5BC,KAAK,EAAE3G,OAAO,CAAC2G,KAAK;IACpBC,gBAAgB,EAAE5G,OAAO,CAAC4G;EAC5B,CAAC;AACH;AAEA,SAASC,mBAAmBA,CAAC7G,OAAO,EAAE;EACpC,IAAI8G,MAAM,GAAG;IACXC,WAAW,EAAE/G,OAAO,CAAC+G,WAAW;IAChCC,eAAe,EAAEhH,OAAO,CAACgH,eAAe,IAAIxI,OAAO,CAACwB,OAAO,CAACgH,eAAe,CAAC,CAACvE,IAAI,CAAC,GAAG,CAAC;IACtFwE,YAAY,EAAEjH,OAAO,CAACiH,YAAY;IAClCN,KAAK,EAAEhH,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAAC2G,KAAK,CAAC;IACxCQ,MAAM,EAAExH,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACmH,MAAM,CAAC;IAC1CC,QAAQ,EAAEpH,OAAO,CAACoH,QAAQ;IAC1BC,oBAAoB,EAAE1H,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACqH,oBAAoB,CAAC;IACtEC,MAAM,EAAE3H,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACsH,MAAM,CAAC;IAC1CC,YAAY,EAAEvH,OAAO,CAACuH,YAAY;IAClCC,yBAAyB,EAAE7H,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACwH,yBAAyB,CAAC;IAChFC,KAAK,EAAE9H,KAAK,CAAC+H,WAAW,CAAC1H,OAAO,CAACyH,KAAK,CAAC;IACvCE,WAAW,EAAEhI,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAAC2H,WAAW,CAAC;IACpDC,sBAAsB,EAAE5H,OAAO,CAAC4H,sBAAsB;IACtDC,IAAI,EAAE7H,OAAO,CAAC6H,IAAI;IAClBC,IAAI,EAAEnI,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAAC8H,IAAI,CAAC;IACtCC,KAAK,EAAEpI,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAAC+H,KAAK,CAAC;IACxCC,MAAM,EAAEhI,OAAO,CAACgI,MAAM;IACtBnD,MAAM,EAAE7E,OAAO,CAAC6E,MAAM;IACtBoD,iBAAiB,EAAEjI,OAAO,CAACiI,iBAAiB;IAC5CC,cAAc,EAAEvI,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACkI,cAAc,CAAC;IAC1DC,cAAc,EAAExI,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACmI,cAAc,CAAC;IAC1DC,UAAU,EAAEzI,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACoI,UAAU,CAAC;IAClDC,UAAU,EAAErI,OAAO,CAACqI,UAAU;IAC9BzB,gBAAgB,EAAE5G,OAAO,CAAC4G,gBAAgB;IAC1C0B,SAAS,EAAE3I,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACsI,SAAS,CAAC;IAChDC,KAAK,EAAE5I,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACuI,KAAK,CAAC;IACxCC,KAAK,EAAExI,OAAO,CAACwI,KAAK;IACpB5D,SAAS,EAAE5E,OAAO,CAAC4E,SAAS;IAC5B6D,gBAAgB,EAAEzI,OAAO,CAACyI,gBAAgB;IAC1CC,gBAAgB,EAAE/I,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAAC0I,gBAAgB,CAAC;IAC9DC,sBAAsB,EAAEhJ,KAAK,CAACiJ,sCAAsC,CAAC5I,OAAO,CAAC2I,sBAAsB,CAAC;IACpGE,mBAAmB,EAAElJ,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAAC6I,mBAAmB,CAAC;IACpEnC,SAAS,EAAE1G,OAAO,CAAC0G,SAAS,IAAIjH,OAAO,CAACiH,SAAS,CAAC,CAAC;IACnDH,cAAc,EAAE5G,KAAK,CAAC6G,8BAA8B,CAAC3I,KAAK,CAACmC,OAAO,CAAC,CAAC;IACpEwE,IAAI,EAAExE,OAAO,CAACwE,IAAI;IAClBsE,eAAe,EAAEnJ,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAAC8I,eAAe,CAAC;IAC5DC,aAAa,EAAE/I,OAAO,CAAC+I,aAAa;IACpCC,YAAY,EAAErJ,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACgJ,YAAY,CAAC;IACtDC,4BAA4B,EAAEtJ,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACiJ,4BAA4B,CAAC;IACtFC,gBAAgB,EAAElJ,OAAO,CAACkJ,gBAAgB;IAC1CC,sBAAsB,EAAExJ,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACmJ,sBAAsB,CAAC;IAC1EC,oCAAoC,EAAEzJ,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACoJ,oCAAoC,CAAC;IACtGC,aAAa,EAAE1J,KAAK,CAACuH,YAAY,CAAClH,OAAO,CAACqJ,aAAa,CAAC;IACxDC,UAAU,EAAEtJ,OAAO,CAACsJ;EACtB,CAAC;EACD,OAAO3J,KAAK,CAAC4J,0BAA0B,CAACvJ,OAAO,EAAE8G,MAAM,CAAC;AAC1D;AAEA,SAAS0C,gBAAgBA,CAACC,GAAG,EAAE;EAC7B,IAAI,CAACtL,QAAQ,CAACsL,GAAG,CAAC,EAAE;IAClB,OAAOA,GAAG;EACZ;EACA,OAAOvK,OAAO,CAACuK,GAAG,CAAC,CAAC/L,GAAG,CAAC,UAAUgM,IAAI,EAAE;IACtC,IAAIC,KAAK,GAAGlO,cAAc,CAACiO,IAAI,EAAE,CAAC,CAAC;MAC/BE,CAAC,GAAGD,KAAK,CAAC,CAAC,CAAC;MACZxG,CAAC,GAAGwG,KAAK,CAAC,CAAC,CAAC;IAEhB,OAAQ,GAAEC,CAAE,IAAGzG,CAAE,EAAC;EACpB,CAAC,CAAC,CAACV,IAAI,CAAC,GAAG,CAAC;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA,SAASoH,mBAAmBA,CAACrN,KAAK,EAAE;EAClC,OAAOA,KAAK,CAACsN,QAAQ,CAAC,CAAC,CAAC7G,OAAO,CAAC,SAAS,EAAE,MAAM,CAAC;AACpD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS8G,cAAcA,CAACC,WAAW,EAAE;EACnC,IAAI,CAAC7L,QAAQ,CAAC6L,WAAW,CAAC,EAAE;IAC1B,OAAOA,WAAW;EACpB;EAEA,OAAO9K,OAAO,CAAC8K,WAAW,CAAC,CAACtM,GAAG,CAAC,UAAUuM,KAAK,EAAE;IAC/C,IAAIC,KAAK,GAAGzO,cAAc,CAACwO,KAAK,EAAE,CAAC,CAAC;MAChC5O,GAAG,GAAG6O,KAAK,CAAC,CAAC,CAAC;MACd1N,KAAK,GAAG0N,KAAK,CAAC,CAAC,CAAC;;IAEpB;IACA,IAAI9L,QAAQ,CAAC5B,KAAK,CAAC,EAAE;MACnB,OAAQ,GAAEnB,GAAI,IAAGwO,mBAAmB,CAACrN,KAAK,CAAE,EAAC;;MAE7C;IACF,CAAC,MAAM,IAAIG,OAAO,CAACH,KAAK,CAAC,EAAE;MACzB,IAAI2N,MAAM,GAAG3N,KAAK,CAACkB,GAAG,CAAC,UAAU0M,QAAQ,EAAE;QACzC,OAAQ,KAAIP,mBAAmB,CAACO,QAAQ,CAAE,IAAG;MAC/C,CAAC,CAAC,CAAC3H,IAAI,CAAC,GAAG,CAAC;MACZ,OAAQ,GAAEpH,GAAI,KAAI8O,MAAO,GAAE;MAC3B;IACF,CAAC,MAAM,IAAIE,MAAM,CAACC,SAAS,CAAC9N,KAAK,CAAC,EAAE;MAClC,OAAQ,GAAEnB,GAAI,IAAGwO,mBAAmB,CAACU,MAAM,CAAC/N,KAAK,CAAC,CAAE,EAAC;MACrD;IACF,CAAC,MAAM;MACL,OAAOA,KAAK,CAACsN,QAAQ,CAAC,CAAC;IACzB;EACF,CAAC,CAAC,CAACrH,IAAI,CAAC,GAAG,CAAC;AACd;AAEA,SAASiF,WAAWA,CAAC8C,eAAe,EAAE;EACpC,OAAOhM,OAAO,CAACgM,eAAe,CAAC,CAAC9M,GAAG,CAAC,UAAU6I,cAAc,EAAE;IAC5D,IAAIkE,oBAAoB,GAAG9K,KAAK,CAAC6G,8BAA8B,CAAC3I,KAAK,CAAC0I,cAAc,CAAC,CAAC;IACtF,IAAI1B,MAAM,GAAG0B,cAAc,CAAC1B,MAAM;IAClC,OAAOA,MAAM,IAAI,IAAI,GAAG4F,oBAAoB,GAAI,GAAEA,oBAAqB,IAAG5F,MAAO,EAAC;EACpF,CAAC,CAAC,CAACpC,IAAI,CAAC,GAAG,CAAC;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASiI,oBAAoBA,CAACC,OAAO,EAAE;EACrC,QAAQ,IAAI;IACV,KAAKA,OAAO,IAAI,IAAI;MAClB,OAAO,KAAK,CAAC;IACf,KAAKhO,OAAO,CAACgO,OAAO,CAAC;MACnB,OAAOA,OAAO,CAAClI,IAAI,CAAC,IAAI,CAAC;IAC3B,KAAKtE,QAAQ,CAACwM,OAAO,CAAC;MACpB,OAAOzL,OAAO,CAACyL,OAAO,CAAC,CAACjN,GAAG,CAAC,UAAUkN,KAAK,EAAE;QAC3C,IAAIC,KAAK,GAAGpP,cAAc,CAACmP,KAAK,EAAE,CAAC,CAAC;UAChChB,CAAC,GAAGiB,KAAK,CAAC,CAAC,CAAC;UACZ1H,CAAC,GAAG0H,KAAK,CAAC,CAAC,CAAC;QAEhB,OAAQ,GAAEjB,CAAE,IAAGzG,CAAE,EAAC;MACpB,CAAC,CAAC,CAACV,IAAI,CAAC,IAAI,CAAC;IACf;MACE,OAAOkI,OAAO;EAClB;AACF;AAEA,SAASnE,8BAA8BA,CAACxG,OAAO,EAAE;EAC/C,IAAIL,KAAK,CAACvB,QAAQ,CAAC4B,OAAO,CAAC,EAAE;IAC3B,OAAOA,OAAO;EAChB;EACA,IAAIrD,OAAO,CAACqD,OAAO,CAAC,EAAE;IACpB,OAAOA,OAAO,CAACtC,GAAG,CAAC,UAAUoN,CAAC,EAAE;MAC9B,OAAOnL,KAAK,CAAC6G,8BAA8B,CAAC3I,KAAK,CAACiN,CAAC,CAAC,CAAC;IACvD,CAAC,CAAC,CAAC/M,MAAM,CAAC4B,KAAK,CAACoL,OAAO,CAAC,CAACtI,IAAI,CAAC,GAAG,CAAC;EACpC;EAEA,IAAIuI,gBAAgB,GAAGzM,aAAa,CAACyB,OAAO,EAAE,kBAAkB,EAAEpB,MAAM,CAAC,CAAC,CAACoM,gBAAgB,CAAC;EAC5F,IAAIC,KAAK,GAAGjL,OAAO,CAACiL,KAAK;EACzB,IAAIC,MAAM,GAAGlL,OAAO,CAACkL,MAAM;EAC3B,IAAIC,IAAI,GAAG5M,aAAa,CAACyB,OAAO,EAAE,MAAM,CAAC;EACzC,IAAImL,IAAI,EAAE;IACR,IAAIC,WAAW,GAAGD,IAAI,CAAChJ,KAAK,CAAC,GAAG,CAAC;IAEjC,IAAIkJ,YAAY,GAAG5P,cAAc,CAAC2P,WAAW,EAAE,CAAC,CAAC;IAEjDH,KAAK,GAAGI,YAAY,CAAC,CAAC,CAAC;IACvBH,MAAM,GAAGG,YAAY,CAAC,CAAC,CAAC;IACxB,IAAIC,KAAK,GAAG,CAACL,KAAK,EAAEC,MAAM,CAAC;IAC3BlL,OAAO,CAACiL,KAAK,GAAGK,KAAK,CAAC,CAAC,CAAC;IACxBtL,OAAO,CAACkL,MAAM,GAAGI,KAAK,CAAC,CAAC,CAAC;EAC3B;EACA,IAAIC,SAAS,GAAGvL,OAAO,CAACwL,OAAO,IAAIxL,OAAO,CAACyL,QAAQ;EACnD,IAAIC,IAAI,GAAGnN,aAAa,CAACyB,OAAO,EAAE,MAAM,CAAC;EACzC,IAAI2L,KAAK,GAAGnN,OAAO,CAACD,aAAa,CAACyB,OAAO,EAAE,OAAO,CAAC,CAAC,CAACyC,IAAI,CAAC,GAAG,CAAC;EAC9D,IAAImJ,aAAa,GAAGL,SAAS,IAAI5L,KAAK,CAACoL,OAAO,CAACY,KAAK,CAAC,IAAID,IAAI,KAAK,KAAK,IAAIA,IAAI,KAAK,OAAO,IAAIV,gBAAgB;EAC/G,IAAIC,KAAK,KAAKA,KAAK,CAACnB,QAAQ,CAAC,CAAC,CAACzF,OAAO,CAAC,MAAM,CAAC,KAAK,CAAC,IAAIuH,aAAa,IAAIC,UAAU,CAACZ,KAAK,CAAC,GAAG,CAAC,CAAC,EAAE;IAC/F,OAAOjL,OAAO,CAACiL,KAAK;EACtB;EACA,IAAIC,MAAM,KAAKU,aAAa,IAAIC,UAAU,CAACX,MAAM,CAAC,GAAG,CAAC,CAAC,EAAE;IACvD,OAAOlL,OAAO,CAACkL,MAAM;EACvB;EACA,IAAIY,UAAU,GAAGvN,aAAa,CAACyB,OAAO,EAAE,YAAY,CAAC;EACrD8L,UAAU,GAAGA,UAAU,IAAIA,UAAU,CAAC7I,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC;EAC3D,IAAI8I,KAAK,GAAGxN,aAAa,CAACyB,OAAO,EAAE,OAAO,CAAC;EAC3C+L,KAAK,GAAGA,KAAK,IAAIA,KAAK,CAAC9I,OAAO,CAAC,IAAI,EAAE,MAAM,CAAC;EAC5C,IAAI+I,oBAAoB,GAAGxN,OAAO,CAACD,aAAa,CAACyB,OAAO,EAAE,gBAAgB,EAAE,EAAE,CAAC,CAAC;EAChF,IAAIiM,oBAAoB,GAAG,EAAE;EAC7B,IAAID,oBAAoB,CAACE,IAAI,CAAC/N,QAAQ,CAAC,EAAE;IACvC6N,oBAAoB,GAAGA,oBAAoB,CAACtO,GAAG,CAAC,UAAUyO,EAAE,EAAE;MAC5D,OAAOxM,KAAK,CAAC6G,8BAA8B,CAACrI,QAAQ,CAACgO,EAAE,CAAC,GAAGtO,KAAK,CAACsO,EAAE,CAAC,GAAG;QAAE5F,cAAc,EAAE4F;MAAG,CAAC,CAAC;IAChG,CAAC,CAAC;EACJ,CAAC,MAAM;IACLF,oBAAoB,GAAGD,oBAAoB,CAACvJ,IAAI,CAAC,GAAG,CAAC;IACrDuJ,oBAAoB,GAAG,EAAE;EAC3B;EACA,IAAII,MAAM,GAAG7N,aAAa,CAACyB,OAAO,EAAE,QAAQ,CAAC;EAC7C,IAAIrD,OAAO,CAACyP,MAAM,CAAC,EAAE;IACnBA,MAAM,GAAGA,MAAM,CAAC3J,IAAI,CAAC,GAAG,CAAC;EAC3B,CAAC,MAAM,IAAItE,QAAQ,CAACiO,MAAM,CAAC,EAAE;IAC3BA,MAAM,GAAGlN,OAAO,CAACkN,MAAM,CAAC,CAAC1O,GAAG,CAAC,UAAU2O,KAAK,EAAE;MAC5C,IAAIC,KAAK,GAAG7Q,cAAc,CAAC4Q,KAAK,EAAE,CAAC,CAAC;QAChChR,GAAG,GAAGiR,KAAK,CAAC,CAAC,CAAC;QACd9P,KAAK,GAAG8P,KAAK,CAAC,CAAC,CAAC;MAEpB,OAAQ,GAAEjR,GAAI,IAAGmB,KAAM,EAAC;IAC1B,CAAC,CAAC;EACJ;EACA,IAAI+P,MAAM,GAAGhO,aAAa,CAACyB,OAAO,EAAE,QAAQ,CAAC;EAC7C,IAAI7B,QAAQ,CAACoO,MAAM,CAAC,EAAE;IACpBA,MAAM,GAAI,GAAEA,MAAM,CAACtB,KAAK,IAAI,IAAI,GAAGsB,MAAM,CAACtB,KAAK,GAAG,CAAE,YAAW,CAACsB,MAAM,CAACR,KAAK,IAAI,IAAI,GAAGQ,MAAM,CAACR,KAAK,GAAG,OAAO,EAAE9I,OAAO,CAAC,IAAI,EAAE,MAAM,CAAE,EAAC;EACxI,CAAC,MAAM,IAAI,OAAO,CAACuJ,IAAI,CAACD,MAAM,CAAC,EAAE;IAC/B;IACAvM,OAAO,CAACuM,MAAM,GAAGA,MAAM;IACvBA,MAAM,GAAG,KAAK,CAAC;EACjB;EACA,IAAIE,KAAK,GAAGjO,OAAO,CAACD,aAAa,CAACyB,OAAO,EAAE,OAAO,CAAC,CAAC,CAACyC,IAAI,CAAC,GAAG,CAAC;EAC9D,IAAIiK,GAAG,GAAGnO,aAAa,CAACyB,OAAO,EAAE,KAAK,EAAEpB,MAAM,CAAC,CAAC,CAAC8N,GAAG,CAAC;EACrD,IAAI1M,OAAO,CAAC2M,MAAM,IAAI,IAAI,EAAE;IAC1B,IAAIC,YAAY,GAAGC,WAAW,CAACtO,aAAa,CAACyB,OAAO,EAAE,QAAQ,CAAC,CAAC;IAEhE,IAAI8M,aAAa,GAAGrR,cAAc,CAACmR,YAAY,EAAE,CAAC,CAAC;IAEnD5M,OAAO,CAAC+M,YAAY,GAAGD,aAAa,CAAC,CAAC,CAAC;IACvC9M,OAAO,CAACgN,UAAU,GAAGF,aAAa,CAAC,CAAC,CAAC;EACvC;EACA,IAAI9M,OAAO,CAAC+M,YAAY,EAAE;IACxB/M,OAAO,CAAC+M,YAAY,GAAGrK,oBAAoB,CAAC1C,OAAO,CAAC+M,YAAY,CAAC;EACnE;EACA,IAAI/M,OAAO,CAACgN,UAAU,EAAE;IACtBhN,OAAO,CAACgN,UAAU,GAAGtK,oBAAoB,CAAC1C,OAAO,CAACgN,UAAU,CAAC;EAC/D;EACA,IAAIxB,OAAO,GAAGzH,aAAa,CAACxF,aAAa,CAACyB,OAAO,EAAE,SAAS,CAAC,CAAC;EAC9D,IAAIiG,MAAM,GAAGD,cAAc,CAACzH,aAAa,CAACyB,OAAO,EAAE,QAAQ,CAAC,CAAC;EAC7D,IAAIyL,QAAQ,GAAG1H,aAAa,CAACxF,aAAa,CAACyB,OAAO,EAAE,UAAU,CAAC,CAAC;EAChE,IAAI8D,OAAO,GAAGD,UAAU,CAACtF,aAAa,CAACyB,OAAO,EAAE,IAAI,CAAC,CAAC;EACtD,IAAIiN,eAAe,GAAG3J,uBAAuB,CAAC/E,aAAa,CAACyB,OAAO,EAAE,iBAAiB,CAAC,CAAC;EACxF,IAAIkN,mBAAmB,GAAGxJ,2BAA2B,CAACnF,aAAa,CAACyB,OAAO,EAAE,qBAAqB,CAAC,CAAC;EACpG,IAAImN,GAAG,GAAG5O,aAAa,CAACyB,OAAO,EAAE,KAAK,CAAC;EACvC,IAAIrD,OAAO,CAACwQ,GAAG,CAAC,EAAE;IAChBA,GAAG,GAAGA,GAAG,CAAC1K,IAAI,CAAC,GAAG,CAAC;EACrB;EACA,IAAIqE,MAAM,GAAG;IACXsG,CAAC,EAAE1K,oBAAoB,CAACiJ,KAAK,CAAC;IAC9B0B,EAAE,EAAE3K,oBAAoB,CAACnE,aAAa,CAACyB,OAAO,EAAE,cAAc,CAAC,CAAC;IAChEsN,CAAC,EAAExB,UAAU;IACbyB,EAAE,EAAEhB,MAAM;IACViB,CAAC,EAAE9B,IAAI;IACP+B,EAAE,EAAE1B,KAAK;IACTW,GAAG,EAAEhK,oBAAoB,CAACgK,GAAG,CAAC;IAC9BgB,CAAC,EAAEhL,oBAAoB,CAAC0J,MAAM,CAAC;IAC/BuB,EAAE,EAAElB,KAAK;IACTmB,EAAE,EAAEX,eAAe,IAAIC,mBAAmB;IAC1CC,GAAG,EAAEA,GAAG;IACRU,CAAC,EAAEnL,oBAAoB,CAACwI,MAAM,CAAC;IAC/B4C,EAAE,EAAEpL,oBAAoB,CAACnE,aAAa,CAACyB,OAAO,EAAE,mBAAmB,CAAC,CAAC;IACrE+N,CAAC,EAAEvC,OAAO;IACVwC,CAAC,EAAEtL,oBAAoB,CAACnE,aAAa,CAACyB,OAAO,EAAE,SAAS,CAAC,CAAC;IAC1DiO,CAAC,EAAEvL,oBAAoB,CAACnE,aAAa,CAACyB,OAAO,EAAE,SAAS,CAAC,CAAC;IAC1DkO,CAAC,EAAEjI,MAAM;IACT6E,CAAC,EAAEmB,oBAAoB;IACvBkC,CAAC,EAAE1C,QAAQ;IACX2C,CAAC,EAAE1L,oBAAoB,CAACuI,KAAK,CAAC;IAC9B9F,CAAC,EAAEzC,oBAAoB,CAACnE,aAAa,CAACyB,OAAO,EAAE,GAAG,CAAC,CAAC;IACpDqO,CAAC,EAAE3L,oBAAoB,CAACnE,aAAa,CAACyB,OAAO,EAAE,GAAG,CAAC,CAAC;IACpDsO,CAAC,EAAE5L,oBAAoB,CAACnE,aAAa,CAACyB,OAAO,EAAE,MAAM,CAAC;EACxD,CAAC;EAEDqB,aAAa,CAACU,OAAO,CAAC,UAAUwM,MAAM,EAAE;IACtC,IAAIC,MAAM,GAAG/S,cAAc,CAAC8S,MAAM,EAAE,CAAC,CAAC;MAClCE,IAAI,GAAGD,MAAM,CAAC,CAAC,CAAC;MAChBE,KAAK,GAAGF,MAAM,CAAC,CAAC,CAAC;IAErB,IAAIhS,KAAK,GAAG+B,aAAa,CAACyB,OAAO,EAAEyO,IAAI,CAAC;IACxC,IAAIjS,KAAK,KAAKR,SAAS,EAAE;MACvB8K,MAAM,CAAC4H,KAAK,CAAC,GAAGlS,KAAK;IACvB;EACF,CAAC,CAAC;EACF,IAAIsK,MAAM,CAAC6H,EAAE,IAAI,IAAI,EAAE;IACrB7H,MAAM,CAAC6H,EAAE,GAAGC,oBAAoB,CAAC9H,MAAM,CAAC6H,EAAE,CAAC;EAC7C;EACA,CAAC,IAAI,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC5M,OAAO,CAAC,UAAU2M,KAAK,EAAE;IAC1C,IAAI5H,MAAM,CAAC4H,KAAK,CAAC,KAAK1S,SAAS,EAAE;MAC/B8K,MAAM,CAAC4H,KAAK,CAAC,GAAGG,gBAAgB,CAAC/H,MAAM,CAAC4H,KAAK,CAAC,CAAC;IACjD;EACF,CAAC,CAAC;EAEF,IAAII,cAAc,GAAGvQ,aAAa,CAACyB,OAAO,EAAE,WAAW,EAAE,EAAE,CAAC;EAC5D,IAAI+O,SAAS,GAAG7P,OAAO,CAACc,OAAO,CAAC,CAACjC,MAAM,CAAC,UAAUiR,MAAM,EAAE;IACxD,IAAIC,MAAM,GAAGxT,cAAc,CAACuT,MAAM,EAAE,CAAC,CAAC;MAClC3T,GAAG,GAAG4T,MAAM,CAAC,CAAC,CAAC;MACfzS,KAAK,GAAGyS,MAAM,CAAC,CAAC,CAAC;IAErB,OAAO5T,GAAG,CAAC8I,UAAU,CAAC,GAAG,CAAC;EAC5B,CAAC,CAAC,CAACzG,GAAG,CAAC,UAAUwR,MAAM,EAAE;IACvB,IAAIC,MAAM,GAAG1T,cAAc,CAACyT,MAAM,EAAE,CAAC,CAAC;MAClC7T,GAAG,GAAG8T,MAAM,CAAC,CAAC,CAAC;MACf3S,KAAK,GAAG2S,MAAM,CAAC,CAAC,CAAC;IAErB,OAAOnP,OAAO,CAAC3E,GAAG,CAAC;IACnB,OAAQ,GAAEA,GAAI,IAAGqH,oBAAoB,CAAClG,KAAK,CAAE,EAAC;EAChD,CAAC,CAAC,CAAC4S,IAAI,CAAC,CAAC,CAACC,MAAM,CAACP,cAAc,CAACpR,GAAG,CAAC,UAAU4R,MAAM,EAAE;IACpD,IAAIC,MAAM,GAAG9T,cAAc,CAAC6T,MAAM,EAAE,CAAC,CAAC;MAClCb,IAAI,GAAGc,MAAM,CAAC,CAAC,CAAC;MAChB/S,KAAK,GAAG+S,MAAM,CAAC,CAAC,CAAC;IAErB,OAAQ,GAAEd,IAAK,IAAG/L,oBAAoB,CAAClG,KAAK,CAAE,EAAC;EACjD,CAAC,CAAC,CAAC,CAACiG,IAAI,CAAC,GAAG,CAAC;EAEb,IAAI+H,eAAe,GAAGtL,OAAO,CAAC4H,MAAM,CAAC,CAAC/I,MAAM,CAAC,UAAUyR,MAAM,EAAE;IAC7D,IAAIC,MAAM,GAAGhU,cAAc,CAAC+T,MAAM,EAAE,CAAC,CAAC;MAClCnU,GAAG,GAAGoU,MAAM,CAAC,CAAC,CAAC;MACfjT,KAAK,GAAGiT,MAAM,CAAC,CAAC,CAAC;IAErB,OAAO9P,KAAK,CAACoL,OAAO,CAACvO,KAAK,CAAC;EAC7B,CAAC,CAAC,CAACkB,GAAG,CAAC,UAAUgS,MAAM,EAAE;IACvB,IAAIC,MAAM,GAAGlU,cAAc,CAACiU,MAAM,EAAE,CAAC,CAAC;MAClCrU,GAAG,GAAGsU,MAAM,CAAC,CAAC,CAAC;MACfnT,KAAK,GAAGmT,MAAM,CAAC,CAAC,CAAC;IAErB,OAAOtU,GAAG,GAAG,GAAG,GAAGmB,KAAK;EAC1B,CAAC,CAAC,CAAC4S,IAAI,CAAC,CAAC,CAAC3M,IAAI,CAAC,GAAG,CAAC;EAEnB,IAAImN,kBAAkB,GAAGrR,aAAa,CAACyB,OAAO,EAAE,oBAAoB,CAAC;EACrEwK,eAAe,GAAGnN,OAAO,CAAC,CAACyG,OAAO,EAAEiL,SAAS,EAAEvE,eAAe,EAAEoF,kBAAkB,CAAC,CAAC,CAACnN,IAAI,CAAC,GAAG,CAAC;EAC9FuJ,oBAAoB,CAACzP,IAAI,CAACiO,eAAe,CAAC;EAC1CA,eAAe,GAAGwB,oBAAoB;EACtC,IAAIhB,gBAAgB,EAAE;IACpB,IAAI6E,+BAA+B,GAAGjR,MAAM,CAAC,CAAC,CAACiR,+BAA+B,IAAI/O,uCAAuC;IAEzH0J,eAAe,CAACjO,IAAI,CAACoD,KAAK,CAAC6G,8BAA8B,CAAC3I,KAAK,CAACgS,+BAA+B,CAAC,CAAC,CAAC;EACpG;EACA,IAAItF,MAAM,CAACU,KAAK,CAAC,CAAC9G,UAAU,CAAC,MAAM,CAAC,IAAI6G,gBAAgB,EAAE;IACxDhL,OAAO,CAAC8P,UAAU,GAAG,IAAI;EAC3B;EACA,IAAIpD,GAAG,KAAK,MAAM,EAAE;IAClB1M,OAAO,CAAC+P,KAAK,GAAG,IAAI;EACtB;EACA,OAAOhS,MAAM,CAACyM,eAAe,EAAE7K,KAAK,CAACoL,OAAO,CAAC,CAACtI,IAAI,CAAC,GAAG,CAAC;AACzD;AAEA,SAAS8G,0BAA0BA,CAACvJ,OAAO,EAAE;EAC3C,IAAI8G,MAAM,GAAG5L,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEnF,IAAI8E,OAAO,CAACgQ,cAAc,IAAI,IAAI,EAAE;IAClClJ,MAAM,CAACkJ,cAAc,GAAGrQ,KAAK,CAACsQ,cAAc,CAACjQ,OAAO,CAACgQ,cAAc,CAAC;EACtE;EACA,IAAIhQ,OAAO,CAACkQ,YAAY,IAAI,IAAI,EAAE;IAChCpJ,MAAM,CAACoJ,YAAY,GAAGlQ,OAAO,CAACkQ,YAAY;EAC5C;EACA,IAAIlQ,OAAO,CAACmQ,kBAAkB,IAAI,IAAI,EAAE;IACtCrJ,MAAM,CAACqJ,kBAAkB,GAAGnQ,OAAO,CAACmQ,kBAAkB;EACxD;EACA,IAAInQ,OAAO,CAACoQ,cAAc,IAAI,IAAI,EAAE;IAClCtJ,MAAM,CAACsJ,cAAc,GAAGpQ,OAAO,CAACoQ,cAAc;EAChD;EACA,IAAIpQ,OAAO,CAACqQ,OAAO,IAAI,IAAI,EAAE;IAC3BvJ,MAAM,CAACuJ,OAAO,GAAG1Q,KAAK,CAACoK,cAAc,CAAC/J,OAAO,CAACqQ,OAAO,CAAC;EACxD;EACA,IAAIrQ,OAAO,CAACsQ,QAAQ,IAAI,IAAI,EAAE;IAC5BxJ,MAAM,CAACwJ,QAAQ,GAAG3Q,KAAK,CAACoK,cAAc,CAAC/J,OAAO,CAACsQ,QAAQ,CAAC;EAC1D;EACA,IAAItQ,OAAO,CAACuQ,kBAAkB,IAAI,IAAI,EAAE;IACtCzJ,MAAM,CAACyJ,kBAAkB,GAAG5R,iBAAiB,CAACqB,OAAO,CAACuQ,kBAAkB,CAAC;EAC3E;EACA,IAAIvQ,OAAO,CAACwQ,SAAS,IAAI,IAAI,EAAE;IAC7B1J,MAAM,CAAC0J,SAAS,GAAGxQ,OAAO,CAACwQ,SAAS;EACtC;EACA,IAAIxQ,OAAO,CAACyQ,gBAAgB,IAAI,IAAI,EAAE;IACpC3J,MAAM,CAAC2J,gBAAgB,GAAG9R,iBAAiB,CAACqB,OAAO,CAACyQ,gBAAgB,CAAC;EACvE;EACA,IAAIzQ,OAAO,CAAC2K,OAAO,IAAI,IAAI,EAAE;IAC3B7D,MAAM,CAAC6D,OAAO,GAAGhL,KAAK,CAAC+K,oBAAoB,CAAC1K,OAAO,CAAC2K,OAAO,CAAC;EAC9D;EACA,IAAI3K,OAAO,CAAC4G,gBAAgB,IAAI,IAAI,EAAE;IACpCE,MAAM,CAACF,gBAAgB,GAAG5G,OAAO,CAAC4G,gBAAgB;EACpD;EACA,IAAI5G,OAAO,CAAC0Q,GAAG,IAAI,IAAI,EAAE;IACvB5J,MAAM,CAAC4J,GAAG,GAAG1Q,OAAO,CAAC0Q,GAAG;EAC1B;EACA,IAAI1Q,OAAO,CAAC2Q,WAAW,IAAI,IAAI,EAAE;IAC/B7J,MAAM,CAAC6J,WAAW,GAAG3Q,OAAO,CAAC2Q,WAAW;EAC1C;EACA,IAAI3Q,OAAO,CAAC4Q,iBAAiB,IAAI,IAAI,EAAE;IACrC9J,MAAM,CAAC8J,iBAAiB,GAAG5Q,OAAO,CAAC4Q,iBAAiB;EACtD;EACA,IAAI5Q,OAAO,CAAC6Q,IAAI,IAAI,IAAI,EAAE;IACxB/J,MAAM,CAAC+J,IAAI,GAAGrS,OAAO,CAACwB,OAAO,CAAC6Q,IAAI,CAAC,CAACpO,IAAI,CAAC,GAAG,CAAC;EAC/C;EACA,IAAIzC,OAAO,CAACkJ,gBAAgB,IAAI,IAAI,EAAE;IACpCpC,MAAM,CAACoC,gBAAgB,GAAGlJ,OAAO,CAACkJ,gBAAgB;EACpD;EACA,IAAIlJ,OAAO,CAACiH,YAAY,IAAI,IAAI,EAAE;IAChCH,MAAM,CAACG,YAAY,GAAGjH,OAAO,CAACiH,YAAY;EAC5C;EACA,IAAIjH,OAAO,CAACuH,YAAY,IAAI,IAAI,EAAE;IAChCT,MAAM,CAACS,YAAY,GAAGvH,OAAO,CAACuH,YAAY;EAC5C;EACA,IAAIvH,OAAO,CAAC8Q,mBAAmB,IAAI,IAAI,EAAE;IACvChK,MAAM,CAACgK,mBAAmB,GAAG9Q,OAAO,CAAC8Q,mBAAmB;EAC1D;EACA,IAAI9Q,OAAO,CAACqJ,aAAa,IAAI,IAAI,EAAE;IACjCvC,MAAM,CAACuC,aAAa,GAAGrJ,OAAO,CAACqJ,aAAa;EAC9C;EACA,OAAOvC,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA,IAAIiK,QAAQ,GAAG,CAAC,YAAY,EAAE,YAAY,EAAE,eAAe,EAAE,YAAY,EAAE,OAAO,EAAE,QAAQ,EAAE,oBAAoB,EAAE,aAAa,EAAE,eAAe,EAAE,QAAQ,EAAE,sBAAsB,EAAE,qBAAqB,EAAE,SAAS,EAAE,UAAU,EAAE,cAAc,EAAE,MAAM,EAAE,YAAY,EAAE,eAAe,EAAE,SAAS,CAAC;;AAErS;AACA;AACA;AACA;AACA;;AAEA,SAASC,gBAAgBA,CAAChR,OAAO,EAAE;EACjC,OAAOiR,sBAAsB,CAACC,KAAK,CAAClV,SAAS,EAAE,CAACgE,OAAO,CAAC,CAACqP,MAAM,CAAC0B,QAAQ,CAAC,CAAC;AAC5E;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASI,2BAA2BA,CAACnR,OAAO,EAAE;EAC5C,OAAOiR,sBAAsB,CAACC,KAAK,CAAClV,SAAS,EAAE,CAACgE,OAAO,CAAC,CAACqP,MAAM,CAACxS,kBAAkB,CAACuE,qBAAqB,CAAC,CAAC,CAAC;AAC7G;;AAEA;AACA;AACA;AACA;AACA;;AAEA,SAASgQ,gBAAgBA,CAAA,EAAG;EAC1B,IAAIpR,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,IAAI8E,OAAO,CAACwE,IAAI,KAAK,OAAO,EAAE;IAC5B,IAAIxE,OAAO,CAACyG,YAAY,IAAI,IAAI,EAAE;MAChCzG,OAAO,CAACyG,YAAY,GAAGlI,aAAa,CAACyB,OAAO,EAAE,QAAQ,CAAC;IACzD;EACF;AACF;AAEA,SAASqR,yBAAyBA,CAACjW,MAAM,EAAE4E,OAAO,EAAE;EAClD,IAAIsR,UAAU,GAAG/S,aAAa,CAACyB,OAAO,EAAE,YAAY,EAAEpB,MAAM,CAAC,CAAC,CAAC0S,UAAU,CAAC;EAC1E,IAAI,CAACA,UAAU,EAAE;IACf,MAAM,IAAIhP,KAAK,CAAC,mDAAmD,CAAC;EACtE;EAEA,IAAIiP,MAAM,GAAGhT,aAAa,CAACyB,OAAO,EAAE,QAAQ,EAAE,IAAI,CAAC;EACnD,IAAIwR,YAAY,GAAGjT,aAAa,CAACyB,OAAO,EAAE,cAAc,EAAEpB,MAAM,CAAC,CAAC,CAAC4S,YAAY,CAAC;EAChF,IAAID,MAAM,KAAK,IAAI,EAAE;IACnBA,MAAM,GAAGC,YAAY,IAAI5S,MAAM,CAAC,CAAC,CAAC2S,MAAM;EAC1C;EAEA,IAAIE,WAAW,GAAGlT,aAAa,CAACyB,OAAO,EAAE,aAAa,EAAEpB,MAAM,CAAC,CAAC,CAAC6S,WAAW,CAAC;EAC7E,IAAIC,KAAK,GAAGnT,aAAa,CAACyB,OAAO,EAAE,OAAO,EAAEpB,MAAM,CAAC,CAAC,CAAC8S,KAAK,CAAC;EAC3D,IAAIC,mBAAmB,GAAGpT,aAAa,CAACyB,OAAO,EAAE,qBAAqB,EAAEpB,MAAM,CAAC,CAAC,CAAC+S,mBAAmB,CAAC;EACrG,IAAIC,aAAa,GAAGrT,aAAa,CAACyB,OAAO,EAAE,eAAe,EAAEpB,MAAM,CAAC,CAAC,CAACgT,aAAa,CAAC;EACnF,IAAIC,oBAAoB,GAAGtT,aAAa,CAACyB,OAAO,EAAE,sBAAsB,EAAEpB,MAAM,CAAC,CAAC,CAACiT,oBAAoB,CAAC;EAExG,OAAOC,mBAAmB,CAAC1W,MAAM,EAAEkW,UAAU,EAAEG,WAAW,EAAEG,aAAa,EAAEC,oBAAoB,EAAEH,KAAK,EAAEH,MAAM,EAAEI,mBAAmB,CAAC;AACtI;AAEA,SAASpN,GAAGA,CAACK,SAAS,EAAE;EACtB,IAAI5E,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,IAAI6W,SAAS,GAAG,KAAK,CAAC;IAClBC,cAAc,GAAG,KAAK,CAAC;EAC3BrS,KAAK,CAACyR,gBAAgB,CAACpR,OAAO,CAAC;EAC/B,IAAIwE,IAAI,GAAGjG,aAAa,CAACyB,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC;EAC/C,IAAIuG,cAAc,GAAG5G,KAAK,CAAC6G,8BAA8B,CAACxG,OAAO,CAAC;EAElE,IAAIyE,aAAa,GAAGlG,aAAa,CAACyB,OAAO,EAAE,eAAe,EAAE,OAAO,CAAC;EACpE,IAAIH,OAAO,GAAGtB,aAAa,CAACyB,OAAO,EAAE,SAAS,CAAC;EAC/C,IAAIiS,aAAa,GAAG1T,aAAa,CAACyB,OAAO,EAAE,eAAe,EAAEpB,MAAM,CAAC,CAAC,CAACqT,aAAa,CAAC;EACnF,IAAIA,aAAa,IAAI,IAAI,EAAE;IACzBA,aAAa,GAAG,IAAI;EACtB;EACA,IAAIC,kBAAkB,GAAG,CAAC,CAAC3T,aAAa,CAACyB,OAAO,EAAE,oBAAoB,EAAEpB,MAAM,CAAC,CAAC,CAACsT,kBAAkB,CAAC;EACpG,IAAIrN,MAAM,GAAGtG,aAAa,CAACyB,OAAO,EAAE,QAAQ,CAAC;EAC7C,IAAImS,OAAO,GAAG5T,aAAa,CAACyB,OAAO,EAAE,SAAS,EAAEpB,MAAM,CAAC,CAAC,CAACuT,OAAO,CAAC;EACjE,IAAIC,QAAQ,GAAG7T,aAAa,CAACyB,OAAO,EAAE,UAAU,EAAEpB,MAAM,CAAC,CAAC,CAACwT,QAAQ,CAAC;EACpE,IAAIC,UAAU,GAAG9T,aAAa,CAACyB,OAAO,EAAE,YAAY,EAAEpB,MAAM,CAAC,CAAC,CAACyT,UAAU,CAAC;EAC1E,IAAIC,UAAU,GAAG/T,aAAa,CAACyB,OAAO,EAAE,YAAY,CAAC;EACrD,IAAIuS,aAAa,GAAGhU,aAAa,CAACyB,OAAO,EAAE,eAAe,EAAEpB,MAAM,CAAC,CAAC,CAAC2T,aAAa,CAAC;EACnF,IAAIC,mBAAmB,GAAGjU,aAAa,CAACyB,OAAO,EAAE,qBAAqB,EAAEpB,MAAM,CAAC,CAAC,CAAC4T,mBAAmB,IAAIhR,2BAA2B,CAAC;EACpI,IAAI0Q,kBAAkB,EAAE;IACtBM,mBAAmB,GAAG,QAAQ;EAChC;EACA,IAAItS,UAAU,GAAG3B,aAAa,CAACyB,OAAO,EAAE,YAAY,CAAC;EACrD,IAAIE,UAAU,KAAK,KAAK,EAAE;IACxBA,UAAU,GAAGT,OAAO,CAACgT,KAAK,CAAC7T,MAAM,CAAC,CAAC,CAACsB,UAAU,EAAEA,UAAU,CAAC;EAC7D;EACA,IAAIwS,SAAS,GAAG,8CAA8C,CAAClG,IAAI,CAAC5H,SAAS,CAAC;EAC9E,IAAI8N,SAAS,EAAE;IACbjO,aAAa,GAAGiO,SAAS,CAAC,CAAC,CAAC;IAC5BlO,IAAI,GAAGkO,SAAS,CAAC,CAAC,CAAC;IACnB7S,OAAO,GAAG6S,SAAS,CAAC,CAAC,CAAC;IACtB9N,SAAS,GAAG8N,SAAS,CAAC,CAAC,CAAC;EAC1B;EACA,IAAIC,eAAe,GAAG/N,SAAS;EAC/B,IAAIA,SAAS,IAAI,IAAI,EAAE;IACrB,OAAO+N,eAAe;EACxB;EACA/N,SAAS,GAAGA,SAAS,CAACkF,QAAQ,CAAC,CAAC;EAChC,IAAItF,IAAI,KAAK,IAAI,IAAII,SAAS,CAAChC,KAAK,CAAC,aAAa,CAAC,EAAE;IACnD,OAAO+P,eAAe;EACxB;EAEA,IAAIC,qBAAqB,GAAGC,sBAAsB,CAACpO,aAAa,EAAED,IAAI,EAAE8N,UAAU,EAAEC,aAAa,EAAEJ,OAAO,CAAC;EAE3G,IAAIW,sBAAsB,GAAGrX,cAAc,CAACmX,qBAAqB,EAAE,CAAC,CAAC;EAErEnO,aAAa,GAAGqO,sBAAsB,CAAC,CAAC,CAAC;EACzCtO,IAAI,GAAGsO,sBAAsB,CAAC,CAAC,CAAC;EAEhC,IAAIC,gBAAgB,GAAGC,eAAe,CAACpO,SAAS,EAAEC,MAAM,EAAEyN,UAAU,CAAC;EAErE,IAAIW,iBAAiB,GAAGxX,cAAc,CAACsX,gBAAgB,EAAE,CAAC,CAAC;EAE3DnO,SAAS,GAAGqO,iBAAiB,CAAC,CAAC,CAAC;EAChCjB,cAAc,GAAGiB,iBAAiB,CAAC,CAAC,CAAC;EAGrC,IAAIpT,OAAO,IAAI,IAAI,IAAIoS,aAAa,IAAID,cAAc,CAAC3N,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC2N,cAAc,CAACpP,KAAK,CAAC,UAAU,CAAC,IAAI,CAACoP,cAAc,CAACpP,KAAK,CAAC,YAAY,CAAC,EAAE;IACpJ/C,OAAO,GAAG,CAAC;EACb;EACA,IAAIA,OAAO,IAAI,IAAI,EAAE;IACnBA,OAAO,GAAI,IAAGA,OAAQ,EAAC;EACzB,CAAC,MAAM;IACLA,OAAO,GAAG,IAAI;EAChB;EAEA0G,cAAc,GAAGA,cAAc,CAACtD,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC;EAC7D,IAAImP,QAAQ,IAAInU,OAAO,CAACiC,UAAU,CAAC,EAAE;IACnC,IAAIgT,OAAO,GAAG,CAAC3M,cAAc,EAAEyL,cAAc,CAAC,CAACjU,MAAM,CAAC,UAAUoV,IAAI,EAAE;MACpE,OAAOA,IAAI,IAAI,IAAI,IAAIA,IAAI,KAAK,EAAE;IACpC,CAAC,CAAC,CAAC1Q,IAAI,CAAC,GAAG,CAAC;IAEZ,IAAI2Q,eAAe,GAAG,CAAC,CAAC;IACxB,IAAIlB,kBAAkB,EAAE;MACtBkB,eAAe,CAACC,SAAS,GAAG,QAAQ;MACpCD,eAAe,CAACE,eAAe,GAAG,EAAE;IACtC,CAAC,MAAM;MACLF,eAAe,CAACC,SAAS,GAAGb,mBAAmB;MAC/CY,eAAe,CAACE,eAAe,GAAG,CAAC;IACrC;IAEA,IAAIC,SAAS,GAAGC,YAAY,CAACN,OAAO,GAAGb,UAAU,EAAEe,eAAe,CAACC,SAAS,EAAE,QAAQ,CAAC,CAACI,KAAK,CAAC,CAAC,EAAEL,eAAe,CAACE,eAAe,CAAC,CAACrQ,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC;IACzK8O,SAAS,GAAI,MAAKwB,SAAU,IAAG;EACjC;EAEA,IAAIG,MAAM,GAAGrC,yBAAyB,CAACzM,SAAS,EAAE5E,OAAO,CAAC;EAC1D,IAAI2T,SAAS,GAAG,CAACD,MAAM,EAAEjP,aAAa,EAAED,IAAI,EAAEuN,SAAS,EAAExL,cAAc,EAAE1G,OAAO,EAAE+E,SAAS,CAAC,CAAC7G,MAAM,CAAC,UAAUoV,IAAI,EAAE;IAClH,OAAOA,IAAI,IAAI,IAAI,IAAIA,IAAI,KAAK,EAAE;EACpC,CAAC,CAAC,CAAC1Q,IAAI,CAAC,GAAG,CAAC,CAACQ,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC;EACjC,IAAImP,QAAQ,IAAI,CAACnU,OAAO,CAACiC,UAAU,CAAC,EAAE;IACpCA,UAAU,CAACqE,GAAG,GAAGpH,QAAQ,CAACwW,SAAS,CAAC,CAACC,IAAI;IACzC,IAAIC,KAAK,GAAGhV,cAAc,CAACqB,UAAU,CAAC;IACtCyT,SAAS,IAAK,IAAGE,KAAM,EAAC;EAC1B;EAEA,IAAIC,YAAY,GAAG9U,YAAY,CAACgB,OAAO,EAAE,cAAc,EAAE,KAAK,CAAC;EAE/D,IAAI8T,YAAY,KAAK,IAAI,EAAE;IACzB,IAAIC,eAAe,GAAG3U,cAAc,CAAC,CAAC;MAClC4U,OAAO,GAAGD,eAAe,CAACC,OAAO;MACjCC,SAAS,GAAGF,eAAe,CAACE,SAAS;MACrCC,WAAW,GAAGH,eAAe,CAACG,WAAW;IAE7C,IAAIC,WAAW,GAAG;MAChBH,OAAO,EAAEhV,YAAY,CAACgB,OAAO,EAAE,SAAS,EAAEgU,OAAO,CAAC;MAClDC,SAAS,EAAEjV,YAAY,CAACgB,OAAO,EAAE,WAAW,EAAEiU,SAAS,CAAC;MACxDC,WAAW,EAAElV,YAAY,CAACgB,OAAO,EAAE,aAAa,EAAEkU,WAAW;IAC/D,CAAC;IAED,IAAIE,gBAAgB,GAAG7U,mBAAmB,CAACzE,MAAM,CAACC,MAAM,CAAC,CAAC,CAAC,EAAEiF,OAAO,EAAEmU,WAAW,CAAC,CAAC;IAEnF,IAAIE,qBAAqB,GAAG7U,wBAAwB,CAAC4U,gBAAgB,CAAC;;IAEtE;IACA,IAAIE,QAAQ,GAAG,GAAG;IAClB,IAAIX,SAAS,CAACtP,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,EAAE;MAC/BiQ,QAAQ,GAAG,GAAG;IAChB;IACAX,SAAS,GAAI,GAAEA,SAAU,GAAEW,QAAS,MAAKD,qBAAsB,EAAC;EAClE;EAEA,OAAOV,SAAS;AAClB;AAEA,SAASY,SAASA,CAAC3P,SAAS,EAAE5E,OAAO,EAAE;EACrCA,OAAO,GAAGlC,MAAM,CAAC;IACf2G,aAAa,EAAE;EACjB,CAAC,EAAEzE,OAAO,CAAC;EACX,OAAOL,KAAK,CAAC4E,GAAG,CAACK,SAAS,EAAE5E,OAAO,CAAC;AACtC;AAEA,SAASgT,eAAeA,CAAC5X,MAAM,EAAEyJ,MAAM,EAAEyN,UAAU,EAAE;EACnD,IAAIN,cAAc,GAAG,KAAK,CAAC;EAC3B5W,MAAM,GAAGA,MAAM,CAAC6H,OAAO,CAAC,aAAa,EAAE,KAAK,CAAC;EAC7C,IAAI7H,MAAM,CAACwH,KAAK,CAAC,aAAa,CAAC,EAAE;IAC/BxH,MAAM,GAAGkD,YAAY,CAAClD,MAAM,CAAC;IAC7B4W,cAAc,GAAG5W,MAAM;EACzB,CAAC,MAAM;IACLA,MAAM,GAAGqK,kBAAkB,CAAC+O,kBAAkB,CAACpZ,MAAM,CAAC,CAAC,CAAC6H,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC,CAACA,OAAO,CAAC,MAAM,EAAE,GAAG,CAAC;IACjG+O,cAAc,GAAG5W,MAAM;IACvB,IAAIkX,UAAU,EAAE;MACd,IAAIA,UAAU,CAAC1P,KAAK,CAAC,QAAQ,CAAC,EAAE;QAC9B,MAAM,IAAIN,KAAK,CAAC,sCAAsC,CAAC;MACzD;MACAlH,MAAM,GAAGA,MAAM,GAAG,GAAG,GAAGkX,UAAU;IACpC;IACA,IAAIzN,MAAM,IAAI,IAAI,EAAE;MAClBzJ,MAAM,GAAGA,MAAM,GAAG,GAAG,GAAGyJ,MAAM;MAC9BmN,cAAc,GAAGA,cAAc,GAAG,GAAG,GAAGnN,MAAM;IAChD;EACF;EACA,OAAO,CAACzJ,MAAM,EAAE4W,cAAc,CAAC;AACjC;AAEA,SAASyC,mBAAmBA,CAAC7P,SAAS,EAAE5E,OAAO,EAAE;EAC/CA,OAAO,GAAGlC,MAAM,CAAC,CAAC,CAAC,EAAEiD,sBAAsB,EAAEf,OAAO,CAAC;EACrD,OAAOL,KAAK,CAAC4E,GAAG,CAACK,SAAS,EAAE5E,OAAO,CAAC;AACtC;AAEA,SAAS6S,sBAAsBA,CAACpO,aAAa,EAAED,IAAI,EAAE8N,UAAU,EAAEC,aAAa,EAAEJ,OAAO,EAAE;EACvF,IAAI3N,IAAI,IAAI,IAAI,EAAE;IAChBA,IAAI,GAAG,QAAQ;EACjB;EACA,IAAI8N,UAAU,IAAI,IAAI,EAAE;IACtB,IAAI7N,aAAa,KAAK,OAAO,IAAID,IAAI,KAAK,QAAQ,EAAE;MAClDC,aAAa,GAAG,QAAQ;MACxBD,IAAI,GAAG,IAAI;IACb,CAAC,MAAM,IAAIC,aAAa,KAAK,OAAO,IAAID,IAAI,KAAK,SAAS,EAAE;MAC1DC,aAAa,GAAG,gBAAgB;MAChCD,IAAI,GAAG,IAAI;IACb,CAAC,MAAM,IAAIC,aAAa,KAAK,OAAO,IAAID,IAAI,KAAK,eAAe,EAAE;MAChEC,aAAa,GAAG,sBAAsB;MACtCD,IAAI,GAAG,IAAI;IACb,CAAC,MAAM,IAAIC,aAAa,KAAK,KAAK,IAAID,IAAI,KAAK,QAAQ,EAAE;MACvDC,aAAa,GAAG,OAAO;MACvBD,IAAI,GAAG,IAAI;IACb,CAAC,MAAM,IAAIC,aAAa,KAAK,OAAO,IAAID,IAAI,KAAK,QAAQ,EAAE;MACzDC,aAAa,GAAG,QAAQ;MACxBD,IAAI,GAAG,IAAI;IACb,CAAC,MAAM;MACL,MAAM,IAAIlC,KAAK,CAAC,6GAA6G,CAAC;IAChI;EACF;EACA,IAAIiQ,aAAa,EAAE;IACjB,IAAI9N,aAAa,KAAK,OAAO,IAAID,IAAI,KAAK,QAAQ,IAAIC,aAAa,KAAK,QAAQ,IAAID,IAAI,IAAI,IAAI,EAAE;MAChGC,aAAa,GAAG,IAAI;MACpBD,IAAI,GAAG,IAAI;IACb,CAAC,MAAM;MACL,MAAM,IAAIlC,KAAK,CAAC,2CAA2C,CAAC;IAC9D;EACF;EACA,IAAI6P,OAAO,IAAI1N,aAAa,KAAK,OAAO,IAAID,IAAI,KAAK,QAAQ,EAAE;IAC7DC,aAAa,GAAG,IAAI;IACpBD,IAAI,GAAG,IAAI;EACb;EACA,OAAO,CAACC,aAAa,EAAED,IAAI,CAAC;AAC9B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASsN,mBAAmBA,CAAC1W,MAAM,EAAEkW,UAAU,EAAEG,WAAW,EAAEG,aAAa,EAAEC,oBAAoB,EAAEH,KAAK,EAAEH,MAAM,EAAEI,mBAAmB,EAAE;EACrI,IAAI+B,MAAM,GAAG,KAAK,CAAC;EACnB,IAAIpC,UAAU,CAACjN,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,EAAE;IACjC,OAAO,MAAM,GAAGiN,UAAU;EAC5B;EACA,IAAIoD,aAAa,GAAG,CAACjD,WAAW;EAChC,IAAIF,MAAM,EAAE;IACV,IAAII,mBAAmB,IAAI,IAAI,IAAIA,mBAAmB,KAAKlS,OAAO,CAACW,qBAAqB,EAAE;MACxFuR,mBAAmB,GAAGF,WAAW,GAAGH,UAAU,GAAG,qBAAqB,GAAG7R,OAAO,CAACa,UAAU;IAC7F;IACA,IAAIoU,aAAa,IAAI,IAAI,EAAE;MACzBA,aAAa,GAAG/C,mBAAmB,KAAKlS,OAAO,CAACa,UAAU;IAC5D;IACA,IAAIuR,oBAAoB,IAAI,IAAI,IAAI6C,aAAa,EAAE;MACjD7C,oBAAoB,GAAGD,aAAa;IACtC;IACA,IAAIC,oBAAoB,EAAE;MACxBF,mBAAmB,GAAGA,mBAAmB,CAAC1O,OAAO,CAAC,oBAAoB,EAAE,MAAM,IAAInE,KAAK,CAAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,iBAAiB,CAAC,CAAC;IAC/H;IACAsY,MAAM,GAAG,UAAU,GAAG/B,mBAAmB;EAC3C,CAAC,MAAM,IAAID,KAAK,EAAE;IAChB,IAAIiD,SAAS,GAAG/C,aAAa,GAAG,GAAG,IAAI9S,KAAK,CAAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE;IACxEsY,MAAM,GAAG,SAAS,GAAGiB,SAAS,GAAGjD,KAAK;EACxC,CAAC,MAAM;IACL,IAAIkD,QAAQ,GAAGnD,WAAW,GAAGH,UAAU,GAAG,GAAG,GAAG,EAAE;IAClD,IAAIuD,cAAc,GAAGjD,aAAa,GAAG,GAAG,IAAI9S,KAAK,CAAC1D,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,EAAE;IACvE,IAAI0Z,IAAI,GAAG,CAACF,QAAQ,EAAE,KAAK,EAAEC,cAAc,EAAE,iBAAiB,CAAC,CAACpS,IAAI,CAAC,EAAE,CAAC;IACxEiR,MAAM,GAAG,SAAS,GAAGoB,IAAI;EAC3B;EACA,IAAIJ,aAAa,EAAE;IACjBhB,MAAM,IAAI,GAAG,GAAGpC,UAAU;EAC5B;EACA,OAAOoC,MAAM;AACf;AAEA,SAASqB,YAAYA,CAAA,EAAG;EACtB,IAAInB,IAAI,GAAG1Y,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,EAAE;EACjF,IAAI8E,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,IAAI8Z,UAAU,GAAGhW,YAAY,CAACgB,OAAO,EAAE,eAAe,EAAEsB,aAAa,CAAC;EACtE,IAAIgQ,UAAU,GAAGtS,YAAY,CAACgB,OAAO,EAAE,YAAY,CAAC;EACpD,IAAIiV,WAAW,GAAG,SAASA,WAAWA,CAACC,cAAc,EAAE;IACrD,OAAOzP,kBAAkB,CAACyP,cAAc,CAAC,CAACjS,OAAO,CAAC,GAAG,EAAE,KAAK,CAAC;EAC/D,CAAC;EACD,IAAIkS,YAAY,GAAGzY,KAAK,CAACC,OAAO,CAACiX,IAAI,CAAC,GAAGA,IAAI,CAAClW,GAAG,CAACuX,WAAW,CAAC,GAAGA,WAAW,CAACrB,IAAI,CAAC;EAClF,OAAO,CAACoB,UAAU,EAAE,MAAM,EAAE1D,UAAU,CAAC,CAACjC,MAAM,CAAC8F,YAAY,CAAC,CAAC1S,IAAI,CAAC,GAAG,CAAC;AACxE;AAEA,SAAS2S,OAAOA,CAAA,EAAG;EACjB,IAAIC,MAAM,GAAGna,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,QAAQ;EACzF,IAAI8E,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,IAAIuJ,aAAa,GAAGzE,OAAO,CAACyE,aAAa,IAAI,OAAO;EACpD,OAAOsQ,YAAY,CAAC,CAACtQ,aAAa,EAAE4Q,MAAM,CAAC,EAAErV,OAAO,CAAC;AACvD;AAEA,SAASsV,gBAAgBA,CAAA,EAAG;EAC1B,OAAOtY,MAAM,CAACuY,WAAW,CAAC,EAAE,CAAC,CAACzL,QAAQ,CAAC,QAAQ,CAAC,CAAC7G,OAAO,CAAC,YAAY,EAAE,EAAE,CAAC;AAC5E;AAEA,SAASuS,sBAAsBA,CAAC5R,MAAM,EAAE;EACtC,OAAQ,GAAEA,MAAM,CAACa,aAAc,YAAWb,MAAM,CAAC/D,OAAQ,IAAG9B,MAAM,CAAC,CAAC6F,MAAM,CAACgB,SAAS,EAAEhB,MAAM,CAACiB,MAAM,CAAC,EAAElF,KAAK,CAACoL,OAAO,CAAC,CAACtI,IAAI,CAAC,GAAG,CAAE,IAAGmB,MAAM,CAACmO,SAAU,EAAC;AACtJ;AAEA,SAAS0D,gBAAgBA,CAACC,cAAc,EAAErD,UAAU,EAAE;EACpD,IAAIa,OAAO,GAAGhU,OAAO,CAACwW,cAAc,CAAC,CAAC3X,MAAM,CAAC,UAAU4X,MAAM,EAAE;IAC7D,IAAIC,MAAM,GAAGna,cAAc,CAACka,MAAM,EAAE,CAAC,CAAC;MAClC/L,CAAC,GAAGgM,MAAM,CAAC,CAAC,CAAC;MACbzS,CAAC,GAAGyS,MAAM,CAAC,CAAC,CAAC;IAEjB,OAAOjW,KAAK,CAACoL,OAAO,CAAC5H,CAAC,CAAC;EACzB,CAAC,CAAC,CAACzF,GAAG,CAAC,UAAUmY,MAAM,EAAE;IACvB,IAAIC,MAAM,GAAGra,cAAc,CAACoa,MAAM,EAAE,CAAC,CAAC;MAClCjM,CAAC,GAAGkM,MAAM,CAAC,CAAC,CAAC;MACb3S,CAAC,GAAG2S,MAAM,CAAC,CAAC,CAAC;IAEjB,OAAQ,GAAElM,CAAE,IAAGpL,OAAO,CAAC2E,CAAC,CAAC,CAACV,IAAI,CAAC,GAAG,CAAE,EAAC;EACvC,CAAC,CAAC,CAAC2M,IAAI,CAAC,CAAC,CAAC3M,IAAI,CAAC,GAAG,CAAC;EACnB,OAAO+Q,YAAY,CAACN,OAAO,GAAGb,UAAU,EAAEzT,MAAM,CAAC,CAAC,CAAC4T,mBAAmB,IAAIhR,2BAA2B,EAAE,KAAK,CAAC;AAC/G;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASgS,YAAYA,CAACzN,KAAK,EAAEyM,mBAAmB,EAAEuD,QAAQ,EAAE;EAC1D,IAAI,CAACxU,8BAA8B,CAACvD,QAAQ,CAACwU,mBAAmB,CAAC,EAAE;IACjE,MAAM,IAAIlQ,KAAK,CAAE,uBAAsBkQ,mBAAoB,4CAA2CjR,8BAA8B,CAACkB,IAAI,CAAC,IAAI,CAAE,EAAC,CAAC;EACpJ;EACA,IAAIuT,IAAI,GAAGhZ,MAAM,CAACiZ,UAAU,CAACzD,mBAAmB,CAAC,CAAC0D,MAAM,CAACnQ,KAAK,CAAC,CAACoQ,MAAM,CAAC,CAAC;EACxE,OAAOC,MAAM,CAACrZ,IAAI,CAACiZ,IAAI,CAAC,CAAClM,QAAQ,CAACiM,QAAQ,CAAC;AAC7C;AAEA,SAASM,WAAWA,CAACL,IAAI,EAAE;EACzB,IAAIM,aAAa,GAAG,CAAC,CAAC;EACtBpX,OAAO,CAAC8W,IAAI,CAAC,CAACjY,MAAM,CAAC,UAAUwY,MAAM,EAAE;IACrC,IAAIC,MAAM,GAAG/a,cAAc,CAAC8a,MAAM,EAAE,CAAC,CAAC;MAClC3M,CAAC,GAAG4M,MAAM,CAAC,CAAC,CAAC;MACbrT,CAAC,GAAGqT,MAAM,CAAC,CAAC,CAAC;IAEjB,OAAO7W,KAAK,CAACoL,OAAO,CAAC5H,CAAC,CAAC;EACzB,CAAC,CAAC,CAACpB,OAAO,CAAC,UAAU0U,MAAM,EAAE;IAC3B,IAAIC,MAAM,GAAGjb,cAAc,CAACgb,MAAM,EAAE,CAAC,CAAC;MAClC7M,CAAC,GAAG8M,MAAM,CAAC,CAAC,CAAC;MACbvT,CAAC,GAAGuT,MAAM,CAAC,CAAC,CAAC;IAEjBJ,aAAa,CAAC1M,CAAC,CAAC,GAAGzG,CAAC,CAACpF,MAAM,GAAGoF,CAAC,CAACpF,MAAM,CAAC,UAAUoH,CAAC,EAAE;MAClD,OAAOA,CAAC;IACV,CAAC,CAAC,GAAGhC,CAAC;EACR,CAAC,CAAC;EACF,OAAOmT,aAAa;AACtB;AAEA,SAASK,kBAAkBA,CAACC,MAAM,EAAE;EAClC,OAAO9b,MAAM,CAACgH,IAAI,CAAC8U,MAAM,CAAC,CAACxH,IAAI,CAAC,CAAC,CAACyH,MAAM,CAAC,UAAUC,GAAG,EAAEzb,GAAG,EAAE;IAC3Dyb,GAAG,CAACzb,GAAG,CAAC,GAAGub,MAAM,CAACvb,GAAG,CAAC;IACtB,OAAOyb,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;AACR;AAEA,SAASrE,KAAKA,CAACsE,KAAK,EAAEC,KAAK,EAAE;EAC3B,OAAOnc,QAAQ,CAAC,CAAC,CAAC,EAAEkc,KAAK,EAAEC,KAAK,CAAC;AACnC;AAEA,SAASC,YAAYA,CAACnQ,MAAM,EAAE;EAC5B,IAAI9G,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,IAAIgc,MAAM,GAAGlY,YAAY,CAACgB,OAAO,EAAE,SAAS,CAAC;EAC7C,IAAImX,SAAS,GAAGnY,YAAY,CAACgB,OAAO,EAAE,YAAY,CAAC;EACnD8G,MAAM,GAAGrH,OAAO,CAAC4W,WAAW,CAACvP,MAAM,CAAC;EACpCA,MAAM,CAACiL,SAAS,GAAGtS,OAAO,CAACgW,gBAAgB,CAAC3O,MAAM,EAAEqQ,SAAS,CAAC;EAC9DrQ,MAAM,CAACsQ,OAAO,GAAGF,MAAM;EACvB,OAAOpQ,MAAM;AACf;AAEA,SAASuQ,iBAAiBA,CAACC,IAAI,EAAE5Q,SAAS,EAAE;EAC1C,IAAI1G,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF6D,gBAAgB,CAAC;IACfuY,IAAI;IACJ5Q;EACF,CAAC,CAAC;EAEF,IAAI2L,UAAU,GAAGrT,YAAY,CAACgB,OAAO,EAAE,YAAY,CAAC;EACpD,IAAIwS,mBAAmB,GAAGxT,YAAY,CAACgB,OAAO,EAAE,qBAAqB,EAAEwB,2BAA2B,CAAC;EACnG,OAAOgS,YAAY,CAAC8D,IAAI,GAAG5Q,SAAS,GAAG2L,UAAU,EAAEG,mBAAmB,EAAE,KAAK,CAAC;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS+E,2BAA2BA,CAACC,IAAI,EAAE9Q,SAAS,EAAEqL,SAAS,EAAE;EAC/D,IAAI0F,SAAS,GAAGvc,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;;EAExF;EACA,IAAIwL,SAAS,GAAGgR,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI,CAAC,GAAGJ,SAAS,EAAE;IACzD,OAAO,KAAK;EACd;EACA,IAAIK,YAAY,GAAGnY,KAAK,CAAC0X,iBAAiB,CAACG,IAAI,EAAE9Q,SAAS,EAAE;IAC1D2L,UAAU,EAAEzT,MAAM,CAAC,CAAC,CAACyT,UAAU;IAC/BG,mBAAmB,EAAE5T,MAAM,CAAC,CAAC,CAAC4T;EAChC,CAAC,CAAC;EACF,OAAOT,SAAS,KAAK+F,YAAY;AACnC;AAEA,SAASC,sBAAsBA,CAACjR,MAAM,EAAE9G,OAAO,EAAE;EAC/C,IAAIA,OAAO,CAACgY,QAAQ,IAAI,IAAI,IAAIhY,OAAO,CAACgY,QAAQ,EAAE;IAChDlR,MAAM,GAAGrH,OAAO,CAAC4W,WAAW,CAACvP,MAAM,CAAC;IACpC,OAAOA,MAAM,CAACJ,SAAS;EACzB,CAAC,MAAM,IAAI1G,OAAO,CAACiY,WAAW,IAAIrZ,MAAM,CAAC,CAAC,CAACqZ,WAAW,EAAE;IACtDnR,MAAM,GAAGrH,OAAO,CAAC4W,WAAW,CAACvP,MAAM,CAAC;EACtC,CAAC,MAAM,IAAI9G,OAAO,CAAC+R,SAAS,EAAE;IAC5BjL,MAAM,GAAGrH,OAAO,CAAC4W,WAAW,CAACrW,OAAO,CAAC;EACvC,CAAC,MAAM;IACL8G,MAAM,GAAGrH,OAAO,CAACwX,YAAY,CAACnQ,MAAM,EAAE9G,OAAO,CAAC;EAChD;EAEA,OAAO8G,MAAM;AACf;AAEA,SAASoR,oBAAoBA,CAACtT,SAAS,EAAEC,MAAM,EAAE;EAC/C,IAAI7E,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,IAAI4L,MAAM,GAAGrH,OAAO,CAACwX,YAAY,CAAC;IAChCvQ,SAAS,EAAE1G,OAAO,CAAC0G,SAAS,IAAIjH,OAAO,CAACiH,SAAS,CAAC,CAAC;IACnD9B,SAAS,EAAEA,SAAS;IACpBC,MAAM,EAAEA,MAAM;IACdL,IAAI,EAAExE,OAAO,CAACwE,IAAI;IAClB2T,UAAU,EAAEnY,OAAO,CAACmY,UAAU;IAC9BC,UAAU,EAAEpY,OAAO,CAACoY;EACtB,CAAC,EAAEpY,OAAO,CAAC;EACX,OAAOP,OAAO,CAAC2V,OAAO,CAAC,UAAU,EAAEpV,OAAO,CAAC,GAAG,GAAG,GAAG9C,WAAW,CAACmb,SAAS,CAACvR,MAAM,CAAC;AACnF;;AAEA;AACA;AACA;AACA;;AAEA,SAASwR,gBAAgBA,CAACjS,GAAG,EAAE;EAC7B,IAAIrG,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,IAAI4L,MAAM,GAAGrH,OAAO,CAACwX,YAAY,CAAC;IAChCvQ,SAAS,EAAE1G,OAAO,CAAC0G,SAAS,IAAIjH,OAAO,CAACiH,SAAS,CAAC,CAAC;IACnDL,GAAG,EAAEA,GAAG;IACRE,cAAc,EAAE5G,KAAK,CAAC6G,8BAA8B,CAACxG,OAAO;EAC9D,CAAC,EAAEA,OAAO,CAAC;EACX,OAAOP,OAAO,CAAC2V,OAAO,CAAC,kBAAkB,EAAEpV,OAAO,CAAC,GAAG,GAAG,GAAGuY,WAAW,CAACzR,MAAM,CAAC;AACjF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS0R,uBAAuBA,CAACC,QAAQ,EAAEC,UAAU,EAAE;EACrD,IAAI1Y,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,IAAI4L,MAAM,GAAGrH,OAAO,CAACwX,YAAY,CAAC;IAChCvQ,SAAS,EAAE1G,OAAO,CAAC0G,SAAS,IAAIjH,OAAO,CAACiH,SAAS,CAAC,CAAC;IACnD+R,QAAQ,EAAEA,QAAQ;IAClBC,UAAU,EAAEA;EACd,CAAC,EAAE1Y,OAAO,CAAC;EACX,OAAOP,OAAO,CAACsV,YAAY,CAAC,CAAC,iBAAiB,CAAC,EAAE/U,OAAO,CAAC,GAAG,GAAG,GAAGuY,WAAW,CAACzR,MAAM,CAAC;AACvF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS6R,gBAAgBA,CAACtD,MAAM,EAAEvO,MAAM,EAAE9G,OAAO,EAAE;EACjD,IAAI4Y,eAAe,GAAG/d,QAAQ,CAAC,CAAC,CAAC,EAAEiM,MAAM,EAAE;IACzC+R,IAAI,EAAE;EACR,CAAC,CAAC;EACF,IAAIC,iBAAiB,GAAGrZ,OAAO,CAACwX,YAAY,CAAC2B,eAAe,EAAE5Y,OAAO,CAAC;EACtE,OAAOP,OAAO,CAAC2V,OAAO,CAACC,MAAM,EAAErV,OAAO,CAAC,GAAG,GAAG,GAAGuY,WAAW,CAACO,iBAAiB,CAAC;AAChF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,oBAAoBA,CAAA,EAAG;EAC9B,IAAI/Y,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,IAAI4L,MAAM,GAAGrH,OAAO,CAACuZ,cAAc,CAACvG,KAAK,CAACzS,OAAO,EAAE;IACjD6Y,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EACH,OAAOF,gBAAgB,CAAC,kBAAkB,EAAE7R,MAAM,EAAE9G,OAAO,CAAC;AAC9D;;AAEA;AACA;AACA;AACA;;AAEA,SAASiZ,gBAAgBA,CAAA,EAAG;EAC1B,IAAIjZ,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,OAAOuE,OAAO,CAACsZ,oBAAoB,CAACtG,KAAK,CAACzS,OAAO,EAAE;IACjDkZ,aAAa,EAAE;EACjB,CAAC,CAAC,CAAC;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,eAAeA,CAACC,WAAW,EAAE;EACpC,IAAIpZ,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF8E,OAAO,CAACyE,aAAa,GAAGzE,OAAO,CAACyE,aAAa,IAAI,KAAK;EACtDzE,OAAO,CAACqZ,QAAQ,GAAGD,WAAW;EAC9B,IAAIN,iBAAiB,GAAGrZ,OAAO,CAACwX,YAAY,CAACxX,OAAO,CAACuZ,cAAc,CAACvG,KAAK,CAACzS,OAAO,EAAE;IACjF6Y,IAAI,EAAE;EACR,CAAC,CAAC,CAAC,EAAE7Y,OAAO,CAAC;EACb,OAAOP,OAAO,CAAC2V,OAAO,CAAC,kBAAkB,EAAEpV,OAAO,CAAC,GAAG,GAAG,GAAGuY,WAAW,CAACO,iBAAiB,CAAC;AAC5F;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASQ,SAASA,CAACje,GAAG,EAAEmB,KAAK,EAAE;EAC7B,IAAI,CAACA,KAAK,EAAE;IACV,OAAO,KAAK,CAAC;EACf;EACA,OAAOA,KAAK,KAAK,IAAI,GAAGnB,GAAG,GAAGA,GAAG,GAAG,IAAI,GAAGmB,KAAK,GAAG,GAAG;AACxD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS+c,YAAYA,CAAC/c,KAAK,EAAE;EAC3B,OAAO4B,QAAQ,CAAC5B,KAAK,CAAC,GAAGA,KAAK,CAACyG,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,CAACA,OAAO,CAAC,KAAK,EAAE,OAAO,CAAC,GAAGzG,KAAK;AACxF;;AAEA;AACA;AACA;AACA;AACA;AACAiD,OAAO,CAAC+Z,UAAU,GAAG,SAASA,UAAUA,CAACC,KAAK,EAAE;EAC9C,OAAO1b,MAAM,CAACL,GAAG,CAAC+b,KAAK,EAAE,UAAUjd,KAAK,EAAEnB,GAAG,EAAE;IAC7C,OAAOie,SAAS,CAACje,GAAG,EAAEke,YAAY,CAAC/c,KAAK,CAAC,CAAC;EAC5C,CAAC,CAAC,CAAC,CAAC4S,IAAI,CAAC,CAAC,CAAC3M,IAAI,CAAC,GAAG,CAAC;AACtB,CAAC;AAED,IAAIiX,2BAA2B,GAAG,CAAC,SAAS,EAAE,YAAY,EAAE,aAAa,EAAE,qBAAqB,EAAE,eAAe,CAAC;AAElH,SAASC,oBAAoBA,CAAA,EAAG;EAC9B,IAAI7S,MAAM,GAAGmK,sBAAsB,CAACC,KAAK,CAAClV,SAAS,EAAE,CAAC4C,MAAM,CAAC,CAAC,CAAC,CAACyQ,MAAM,CAACqK,2BAA2B,CAAC,CAAC;EACpG,OAAQ,wDAAuDE,IAAI,CAACvB,SAAS,CAACvR,MAAM,CAAE,eAAc;AACtG;AAEA,SAAS+S,iBAAiBA,CAACzS,QAAQ,EAAE;EACnC,IAAIA,QAAQ,IAAI,IAAI,EAAE;IACpB,OAAOpL,SAAS;EAClB;EACA,OAAO,UAAU4H,MAAM,EAAE;IACvB,IAAIA,MAAM,CAAC9D,KAAK,IAAI,IAAI,EAAE;MACxB,OAAOsH,QAAQ,CAACxD,MAAM,CAAC9D,KAAK,CAAC;IAC/B;IACA,OAAOsH,QAAQ,CAAC,KAAK,CAAC,EAAExD,MAAM,CAAC;EACjC,CAAC;AACH;AAEA,SAASkW,UAAUA,CAACrL,IAAI,EAAEsL,aAAa,EAAEC,EAAE,EAAE;EAC3C,OAAO,YAAY;IACjB,KAAK,IAAIC,IAAI,GAAG/e,SAAS,CAACC,MAAM,EAAE+e,IAAI,GAAGxd,KAAK,CAACud,IAAI,CAAC,EAAEE,IAAI,GAAG,CAAC,EAAEA,IAAI,GAAGF,IAAI,EAAEE,IAAI,EAAE,EAAE;MACnFD,IAAI,CAACC,IAAI,CAAC,GAAGjf,SAAS,CAACif,IAAI,CAAC;IAC9B;IAEA,IAAIC,SAAS,GAAGzc,IAAI,CAACuc,IAAI,EAAEH,aAAa,CAAC;IACzC,IAAI/Z,OAAO,GAAGka,IAAI,CAACH,aAAa,CAAC;IACjC,IAAI3S,QAAQ,GAAG8S,IAAI,CAACH,aAAa,GAAG,CAAC,CAAC;IACtC,IAAI3S,QAAQ,IAAI,IAAI,IAAI7J,UAAU,CAACyC,OAAO,CAAC,EAAE;MAC3CoH,QAAQ,GAAGpH,OAAO;MAClBA,OAAO,GAAG,CAAC,CAAC;IACd;IACAoH,QAAQ,GAAGyS,iBAAiB,CAACzS,QAAQ,CAAC;IACtC8S,IAAI,GAAGE,SAAS,CAAC/K,MAAM,CAAC,CAACjI,QAAQ,EAAEpH,OAAO,CAAC,CAAC;IAC5C,OAAOga,EAAE,CAACvL,IAAI,CAAC,CAACyC,KAAK,CAAC,IAAI,EAAEgJ,IAAI,CAAC;EACnC,CAAC;AACH;AAEA,SAASG,WAAWA,CAAC5a,OAAO,EAAEua,EAAE,EAAEM,OAAO,EAAE;EACzC,OAAOxf,MAAM,CAACgH,IAAI,CAACwY,OAAO,CAAC,CAAC5c,GAAG,CAAC,UAAU+Q,IAAI,EAAE;IAC9C,IAAIsL,aAAa,GAAGO,OAAO,CAAC7L,IAAI,CAAC;IACjChP,OAAO,CAACgP,IAAI,CAAC,GAAGqL,UAAU,CAACrL,IAAI,EAAEsL,aAAa,EAAEC,EAAE,CAAC;IACnD,OAAOva,OAAO,CAACgP,IAAI,CAAC;EACtB,CAAC,CAAC;AACJ;AAEA,SAASvH,YAAYA,CAAC1K,KAAK,EAAE;EAC3B,IAAIA,KAAK,IAAI,IAAI,EAAE;IACjB,OAAO,KAAK,CAAC;EACf;EACA,IAAIA,KAAK,KAAK,IAAI,IAAIA,KAAK,KAAK,MAAM,IAAIA,KAAK,KAAK,GAAG,EAAE;IACvDA,KAAK,GAAG,CAAC;EACX;EACA,IAAIA,KAAK,KAAK,KAAK,IAAIA,KAAK,KAAK,OAAO,IAAIA,KAAK,KAAK,GAAG,EAAE;IACzDA,KAAK,GAAG,CAAC;EACX;EACA,OAAOA,KAAK;AACd;AAEA,IAAI+d,cAAc,GAAG,8BAA8B;AAEnD,IAAIC,kBAAkB,GAAI,IAAGD,cAAe,WAAU;AACtD,IAAIE,cAAc,GAAGzX,MAAM,CAAE,IAAGwX,kBAAmB,GAAE,CAAC;AACtD,IAAIE,qBAAqB,GAAG1X,MAAM,CAAE,IAAGwX,kBAAmB,WAAUA,kBAAmB,GAAE,CAAC;;AAE1F;AACA,SAAS3N,WAAWA,CAAC8N,KAAK,EAAE;EAC1B;EACA,QAAQA,KAAK,CAACC,WAAW;IACvB,KAAKrQ,MAAM;MACT,IAAI,CAACmQ,qBAAqB,CAACG,IAAI,CAACF,KAAK,CAAC,EAAE;QACtC,OAAOA,KAAK;MACd;MACA,OAAOA,KAAK,CAACxY,KAAK,CAAC,IAAI,CAAC;IAC1B,KAAKzF,KAAK;MACR,OAAO,CAACY,KAAK,CAACqd,KAAK,CAAC,EAAEld,IAAI,CAACkd,KAAK,CAAC,CAAC;IACpC;MACE,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC;EACvB;AACF;AAEA,SAAS9L,gBAAgBA,CAACrS,KAAK,EAAE;EAC/B;EACA,IAAImQ,MAAM,GAAGpC,MAAM,CAAC/N,KAAK,CAAC,CAACoG,KAAK,CAAC6X,cAAc,CAAC;EAChD,IAAI9N,MAAM,EAAE;IACV,IAAImO,QAAQ,GAAGnO,MAAM,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,EAAE;IACnCnQ,KAAK,GAAI,GAAEmQ,MAAM,CAAC,CAAC,CAAC,IAAIA,MAAM,CAAC,CAAC,CAAE,GAAEmO,QAAS,EAAC;EAChD;EACA,OAAOte,KAAK;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASoS,oBAAoBA,CAACmM,KAAK,EAAE;EACnC,QAAQA,KAAK,CAACH,WAAW;IACvB,KAAK9f,MAAM;MACT;QACE,IAAIkgB,KAAK,GAAG,EAAE;QACd,IAAI,OAAO,IAAID,KAAK,EAAE;UACpBC,KAAK,GAAGD,KAAK,CAACE,KAAK;UACnB,IAAI,SAAS,IAAIF,KAAK,EAAE;YACtBC,KAAK,IAAI,GAAG,GAAGD,KAAK,CAACG,OAAO;YAC5B,IAAI,OAAO,IAAIH,KAAK,EAAE;cACpBC,KAAK,IAAI,GAAG,GAAGD,KAAK,CAACI,KAAK;YAC5B;UACF;QACF;QACA,OAAOH,KAAK;MACd;IACF,KAAKzQ,MAAM;MACT,OAAOwQ,KAAK;IACd;MACE,OAAO,IAAI;EACf;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS/B,cAAcA,CAAA,EAAG;EACxB,IAAIhZ,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,OAAO;IACLkgB,aAAa,EAAE3b,OAAO,CAACyH,YAAY,CAAClH,OAAO,CAACob,aAAa,CAAC;IAC1DzU,KAAK,EAAElH,OAAO,CAACyH,YAAY,CAAClH,OAAO,CAAC2G,KAAK,CAAC;IAC1CyR,UAAU,EAAEpY,OAAO,CAACoY,UAAU;IAC9BiD,eAAe,EAAE5b,OAAO,CAACyH,YAAY,CAAClH,OAAO,CAACqb,eAAe,CAAC;IAC9DC,uBAAuB,EAAE7b,OAAO,CAACyH,YAAY,CAAClH,OAAO,CAACsb,uBAAuB,CAAC;IAC9EC,YAAY,EAAE9b,OAAO,CAACyH,YAAY,CAAClH,OAAO,CAACub,YAAY,CAAC;IACxD1C,IAAI,EAAE7Y,OAAO,CAAC6Y,IAAI;IAClBjS,gBAAgB,EAAE5G,OAAO,CAAC4G,gBAAgB;IAC1CyS,QAAQ,EAAErZ,OAAO,CAACqZ,QAAQ,IAAI7a,OAAO,CAACwB,OAAO,CAACqZ,QAAQ,CAAC;IACvDmC,0BAA0B,EAAExb,OAAO,CAACwb,0BAA0B,IAAIhd,OAAO,CAACwB,OAAO,CAACwb,0BAA0B,CAAC;IAC7GC,UAAU,EAAEzb,OAAO,CAACyb,UAAU,IAAIjd,OAAO,CAACwB,OAAO,CAACyb,UAAU,CAAC;IAC7DC,wBAAwB,EAAEjc,OAAO,CAACyH,YAAY,CAAClH,OAAO,CAAC0b,wBAAwB,CAAC;IAChF7K,IAAI,EAAE7Q,OAAO,CAAC6Q,IAAI,IAAIrS,OAAO,CAACwB,OAAO,CAAC6Q,IAAI,CAAC;IAC3CqI,aAAa,EAAElZ,OAAO,CAACkZ,aAAa;IACpCyC,gBAAgB,EAAE3b,OAAO,CAAC2b,gBAAgB;IAC1CC,WAAW,EAAE5b,OAAO,CAAC4b,WAAW,IAAIpd,OAAO,CAACwB,OAAO,CAAC4b,WAAW,CAAC;IAChElV,SAAS,EAAE1G,OAAO,CAAC0G,SAAS,IAAIjH,OAAO,CAACiH,SAAS,CAAC,CAAC;IACnD8D,eAAe,EAAE7K,KAAK,CAAC+H,WAAW,CAAC1H,OAAO,CAACwK,eAAe,CAAC;IAC3DhG,IAAI,EAAExE,OAAO,CAACwE,IAAI;IAClBqX,qBAAqB,EAAEpc,OAAO,CAACyH,YAAY,CAAClH,OAAO,CAAC6b,qBAAqB;EAC3E,CAAC;AACH;AAEApc,OAAO,CAACsE,aAAa,GAAGA,aAAa;AAErCtE,OAAO,CAACqc,iBAAiB,GAAG,SAASA,iBAAiBA,CAACC,GAAG,EAAEC,WAAW,EAAE;EACvE,IAAIC,MAAM,GAAG/gB,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,IAAI;EAErF,IAAIghB,UAAU,GAAGF,WAAW,KAAK,KAAK,GAAG,KAAK,GAAGA,WAAW;EAC5D,IAAIG,SAAS,GAAI,SAAQD,UAAW,EAAC;EACrC,IAAI,CAACje,OAAO,CAACge,MAAM,CAAC,EAAE;IACpB,IAAIG,UAAU,GAAGzf,OAAO,CAACsf,MAAM,CAAC,GAAGA,MAAM,CAACxZ,IAAI,CAAC,IAAI,CAAC,GAAGwZ,MAAM;IAC7DE,SAAS,IAAK,YAAWC,UAAW,EAAC;EACvC;EACA,OAAQ,WAAUzc,KAAK,CAAC6Z,UAAU,CAAC;IACjCuC,GAAG;IACHvX,IAAI,EAAE2X;EACR,CAAC,CAAE,GAAE;AACP,CAAC;AAED,SAASE,yBAAyBA,CAACzX,SAAS,EAAE;EAC5C,IAAI5E,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,OAAO,CAACuE,OAAO,CAACoH,mBAAmB,CAAC/I,MAAM,CAAC,CAAC,CAAC,EAAE;IAAE8G;EAAU,CAAC,EAAE5E,OAAO,CAAC,CAAC,CAAC;AAC1E;AAEA,SAAS4I,sCAAsCA,CAAC0T,WAAW,EAAE;EAC3D,IAAIA,WAAW,IAAI,IAAI,EAAE;IACvB,OAAO,IAAI;EACb;EACAA,WAAW,GAAGze,KAAK,CAACye,WAAW,CAAC;EAChC,IAAI,CAAC3f,OAAO,CAAC2f,WAAW,CAAC,EAAE;IACzBA,WAAW,GAAG,CAACA,WAAW,CAAC;EAC7B;EACA,KAAK,IAAIC,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGD,WAAW,CAACnhB,MAAM,EAAEohB,CAAC,EAAE,EAAE;IAC3C,IAAIC,mBAAmB,GAAGF,WAAW,CAACC,CAAC,CAAC;IACxC,IAAIC,mBAAmB,IAAI,IAAI,EAAE;MAC/B,IAAIA,mBAAmB,CAACjW,cAAc,EAAE;QACtCiW,mBAAmB,CAACjW,cAAc,GAAG5G,KAAK,CAAC6G,8BAA8B,CAAC3I,KAAK,CAAC2e,mBAAmB,CAACjW,cAAc,CAAC,CAAC;MACtH;IACF;EACF;EACA,OAAOqT,IAAI,CAACvB,SAAS,CAACiE,WAAW,CAAC;AACpC;AAEA,SAASG,8BAA8BA,CAAA,EAAG;EACxC,IAAIzc,OAAO,GAAG9E,SAAS,CAACC,MAAM,GAAG,CAAC,IAAID,SAAS,CAAC,CAAC,CAAC,KAAKc,SAAS,GAAGd,SAAS,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC;EAEpF,IAAI4L,MAAM,GAAGmK,sBAAsB,CAACjR,OAAO,EAAE,cAAc,EAAE,iBAAiB,CAAC;EAC/E,IAAIrD,OAAO,CAACmK,MAAM,CAAC4V,eAAe,CAAC,EAAE;IACnC5V,MAAM,CAAC4V,eAAe,GAAG9C,IAAI,CAACvB,SAAS,CAACvR,MAAM,CAAC4V,eAAe,CAAChf,GAAG,CAAC,UAAUwQ,CAAC,EAAE;MAC9E,OAAO;QACL3H,cAAc,EAAE5G,KAAK,CAAC6G,8BAA8B,CAAC0H,CAAC,CAAC3H,cAAc;MACvE,CAAC;IACH,CAAC,CAAC,CAAC;EACL;EACA,OAAOO,MAAM;AACf;AAEA,SAAS6V,gBAAgBA,CAAC3G,IAAI,EAAE;EAC9B,OAAO9W,OAAO,CAAC8W,IAAI,CAAC,CAACa,MAAM,CAAC,UAAU+F,UAAU,EAAEC,MAAM,EAAE;IACxD,IAAIC,MAAM,GAAGrhB,cAAc,CAACohB,MAAM,EAAE,CAAC,CAAC;MAClCxhB,GAAG,GAAGyhB,MAAM,CAAC,CAAC,CAAC;MACftgB,KAAK,GAAGsgB,MAAM,CAAC,CAAC,CAAC;IAErB,IAAIngB,OAAO,CAACH,KAAK,CAAC,EAAE;MAClBnB,GAAG,GAAGA,GAAG,CAAC0hB,QAAQ,CAAC,IAAI,CAAC,GAAG1hB,GAAG,GAAGA,GAAG,GAAG,IAAI;MAC3C,IAAI2hB,KAAK,GAAGxgB,KAAK,CAACkB,GAAG,CAAC,UAAUyF,CAAC,EAAE;QACjC,OAAO,CAAC9H,GAAG,EAAE8H,CAAC,CAAC;MACjB,CAAC,CAAC;MACFyZ,UAAU,GAAGA,UAAU,CAACvN,MAAM,CAAC2N,KAAK,CAAC;IACvC,CAAC,MAAM;MACLJ,UAAU,CAACrgB,IAAI,CAAC,CAAClB,GAAG,EAAEmB,KAAK,CAAC,CAAC;IAC/B;IACA,OAAOogB,UAAU;EACnB,CAAC,EAAE,EAAE,CAAC;AACR;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,SAASrE,WAAWA,CAACvC,IAAI,EAAE;EACzB,OAAO2G,gBAAgB,CAAC3G,IAAI,CAAC,CAACtY,GAAG,CAAC,UAAUuf,MAAM,EAAE;IAClD,IAAIC,MAAM,GAAGzhB,cAAc,CAACwhB,MAAM,EAAE,CAAC,CAAC;MAClC5hB,GAAG,GAAG6hB,MAAM,CAAC,CAAC,CAAC;MACf1gB,KAAK,GAAG0gB,MAAM,CAAC,CAAC,CAAC;IAErB,OAAQ,GAAEhgB,WAAW,CAACigB,MAAM,CAAC9hB,GAAG,CAAE,IAAG6B,WAAW,CAACigB,MAAM,CAAC3gB,KAAK,CAAE,EAAC;EAClE,CAAC,CAAC,CAACiG,IAAI,CAAC,GAAG,CAAC;AACd;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASsI,OAAOA,CAACvO,KAAK,EAAE;EACtB,OAAOA,KAAK,IAAI,IAAI,IAAI,CAAC,EAAE,GAAGA,KAAK,EAAErB,MAAM,GAAG,CAAC;AACjD;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAAS8V,sBAAsBA,CAAC7V,MAAM,EAAE;EACtC,IAAIwI,MAAM,GAAG,CAAC,CAAC;EACf,IAAIxI,MAAM,EAAE;IACV,KAAK,IAAIgiB,KAAK,GAAGliB,SAAS,CAACC,MAAM,EAAE2G,IAAI,GAAGpF,KAAK,CAAC0gB,KAAK,GAAG,CAAC,GAAGA,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC,EAAEC,KAAK,GAAG,CAAC,EAAEA,KAAK,GAAGD,KAAK,EAAEC,KAAK,EAAE,EAAE;MAC7Gvb,IAAI,CAACub,KAAK,GAAG,CAAC,CAAC,GAAGniB,SAAS,CAACmiB,KAAK,CAAC;IACpC;IAEAvb,IAAI,CAACC,OAAO,CAAC,UAAU1G,GAAG,EAAE;MAC1B,IAAID,MAAM,CAACC,GAAG,CAAC,IAAI,IAAI,EAAE;QACvBuI,MAAM,CAACvI,GAAG,CAAC,GAAGD,MAAM,CAACC,GAAG,CAAC;MAC3B;IACF,CAAC,CAAC;EACJ;EACA,OAAOuI,MAAM;AACf;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASqM,cAAcA,CAACqH,IAAI,EAAEwD,QAAQ,EAAE;EACtC,IAAI,CAACxD,IAAI,EAAE;IACT,OAAO,IAAI;EACb;EACA,IAAIlZ,QAAQ,CAACkZ,IAAI,CAAC,EAAE;IAClBA,IAAI,GAAGsC,IAAI,CAACxc,KAAK,CAACka,IAAI,CAAC;EACzB;EACA,IAAI,CAAC3a,OAAO,CAAC2a,IAAI,CAAC,EAAE;IAClBA,IAAI,GAAG,CAACA,IAAI,CAAC;EACf;EACA,IAAI/Z,UAAU,CAACud,QAAQ,CAAC,EAAE;IACxBxD,IAAI,GAAGwD,QAAQ,CAACxD,IAAI,CAAC;EACvB;EACA,OAAOsC,IAAI,CAACvB,SAAS,CAACf,IAAI,CAAC;AAC7B;;AAEA;AACA;AACA;AACA;AACA7X,OAAO,CAAC6d,GAAG,GAAG,YAAY,CAAC,CAAC;AAC5B7d,OAAO,CAACM,mBAAmB,GAAGA,mBAAmB;AACjDN,OAAO,CAACmB,YAAY,GAAGA,YAAY;AACnCnB,OAAO,CAACoH,mBAAmB,GAAGA,mBAAmB;AACjDpH,OAAO,CAAC0G,6BAA6B,GAAGA,6BAA6B;AACrE1G,OAAO,CAACkZ,gBAAgB,GAAGA,gBAAgB;AAC3ClZ,OAAO,CAACiH,SAAS,GAAG,YAAY;EAC9B,OAAOgR,IAAI,CAAC6F,KAAK,CAAC,IAAI3F,IAAI,CAAC,CAAC,CAAC4F,OAAO,CAAC,CAAC,GAAG,IAAI,CAAC;AAChD,CAAC;AACD/d,OAAO,CAACge,cAAc,GAAGlf,aAAa,CAAC,CAAC;AACxCkB,OAAO,CAACie,WAAW,GAAGlf,OAAO,CAAC,CAAC;AAC/BiB,OAAO,CAACke,mBAAmB,GAAGhf,iBAAiB;AAC/Cc,OAAO,CAAC+J,gBAAgB,GAAGA,gBAAgB;AAC3C/J,OAAO,CAACsK,cAAc,GAAGA,cAAc;AACvCtK,OAAO,CAACiI,WAAW,GAAGA,WAAW;AACjCjI,OAAO,CAACiL,oBAAoB,GAAGA,oBAAoB;AACnDjL,OAAO,CAAC+G,8BAA8B,GAAGA,8BAA8B;AACvE/G,OAAO,CAAC8J,0BAA0B,GAAGA,0BAA0B;AAC/D9J,OAAO,CAACuR,gBAAgB,GAAGA,gBAAgB;AAC3CvR,OAAO,CAAC0R,2BAA2B,GAAGA,2BAA2B;AACjE1R,OAAO,CAAC2R,gBAAgB,GAAGA,gBAAgB;AAC3C3R,OAAO,CAAC8E,GAAG,GAAGA,GAAG;AACjB9E,OAAO,CAAC8U,SAAS,GAAGA,SAAS;AAC7B9U,OAAO,CAACgV,mBAAmB,GAAGA,mBAAmB;AACjDhV,OAAO,CAAC2V,OAAO,GAAGA,OAAO;AACzB3V,OAAO,CAAC6V,gBAAgB,GAAGA,gBAAgB;AAC3C7V,OAAO,CAAC+V,sBAAsB,GAAGA,sBAAsB;AACvD/V,OAAO,CAACgW,gBAAgB,GAAGA,gBAAgB;AAC3ChW,OAAO,CAAC4W,WAAW,GAAGA,WAAW;AACjC5W,OAAO,CAACgT,KAAK,GAAGA,KAAK;AACrBhT,OAAO,CAACwX,YAAY,GAAGA,YAAY;AACnCxX,OAAO,CAAC4X,iBAAiB,GAAGA,iBAAiB;AAC7C5X,OAAO,CAAC8X,2BAA2B,GAAGA,2BAA2B;AACjE9X,OAAO,CAACsY,sBAAsB,GAAGA,sBAAsB;AACvDtY,OAAO,CAACyY,oBAAoB,GAAGA,oBAAoB;AACnDzY,OAAO,CAAC6Y,gBAAgB,GAAGA,gBAAgB;AAC3C7Y,OAAO,CAACsZ,oBAAoB,GAAGA,oBAAoB;AACnDtZ,OAAO,CAACwZ,gBAAgB,GAAGA,gBAAgB;AAC3CxZ,OAAO,CAACka,oBAAoB,GAAGA,oBAAoB;AACnDla,OAAO,CAAC4a,WAAW,GAAGA,WAAW;AACjC5a,OAAO,CAACyH,YAAY,GAAGA,YAAY;AACnCzH,OAAO,CAACuZ,cAAc,GAAGA,cAAc;AACvCvZ,OAAO,CAAC4c,yBAAyB,GAAGA,yBAAyB;AAC7D5c,OAAO,CAACmJ,sCAAsC,GAAGA,sCAAsC;AACvFnJ,OAAO,CAACgd,8BAA8B,GAAGA,8BAA8B;AACvEhd,OAAO,CAACkd,gBAAgB,GAAGA,gBAAgB;AAC3Cld,OAAO,CAACsL,OAAO,GAAGA,OAAO;AACzBtL,OAAO,CAACme,IAAI,GAAG3M,sBAAsB,CAAC,CAAC;AACvCxR,OAAO,CAACwR,sBAAsB,GAAGA,sBAAsB;AACvDxR,OAAO,CAACwQ,cAAc,GAAGA,cAAc;AACvCxQ,OAAO,CAAC0Z,eAAe,GAAGA,eAAe;AACzC1Z,OAAO,CAACsV,YAAY,GAAGA,YAAY;AACnCtV,OAAO,CAAC+Y,uBAAuB,GAAGA,uBAAuB;AACzD/Y,OAAO,CAAC+T,YAAY,GAAGA,YAAY;AACnC/T,OAAO,CAAC4R,yBAAyB,GAAGA,yBAAyB;AAC7D5R,OAAO,CAACkX,kBAAkB,GAAGA,kBAAkB;;AAE/C;AACAlX,OAAO,CAACsB,sBAAsB,GAAGA,sBAAsB;AACvDtB,OAAO,CAACuB,0BAA0B,GAAGA,0BAA0B;AAE/DlG,MAAM,CAACC,MAAM,CAAC2E,MAAM,CAACD,OAAO,EAAE;EAC5BiD,oBAAoB;EACpB9E,EAAE;EACFC,KAAK;EACLC,MAAM;EACNC,MAAM;EACNC,QAAQ;EACRrB,OAAO;EACPsB,OAAO;EACPC,QAAQ;EACRC,QAAQ;EACRgB,WAAW;EACXf,QAAQ;EACRC,WAAW;EACXyD,IAAI,EAAE,SAASA,IAAIA,CAAC1G,MAAM,EAAE;IAC1B,OAAON,MAAM,CAACgH,IAAI,CAAC1G,MAAM,CAAC;EAC5B,CAAC;EACD2D;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}