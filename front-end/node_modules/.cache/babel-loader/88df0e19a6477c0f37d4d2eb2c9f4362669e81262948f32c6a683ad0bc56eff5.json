{"ast":null,"code":"const utils = require(\"../utils\");\nconst call_account_api = require('../api_client/call_account_api');\nconst {\n  pickOnlyExistingValues\n} = utils;\n\n/**\n * @desc Lists sub-accounts.\n * @param [enabled] {boolean} - Whether to only return enabled sub-accounts (true) or disabled accounts (false).\n *                              Default: all accounts are returned (both enabled and disabled).\n * @param [ids] {number[]} - A list of up to 100 sub-account IDs. When provided, other parameters are ignored.\n * @param [prefix] {string} - Returns accounts where the name begins with the specified case-insensitive string.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction sub_accounts(enabled, ids = [], prefix, options = {}, callback) {\n  let params = {\n    enabled,\n    ids,\n    prefix\n  };\n  let uri = ['sub_accounts'];\n  return call_account_api('GET', uri, params, callback, options);\n}\n\n/**\n * @desc Retrieves the details of the specified sub-account.\n * @param sub_account_id {string} - The ID of the sub-account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction sub_account(sub_account_id, options = {}, callback) {\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Creates a new sub-account. Any users that have access to all sub-accounts will also automatically have access\n *       to the new sub-account.\n * @param name {string} The display name as shown in the management console.\n * @param cloud_name {string} A case-insensitive cloud name comprised of alphanumeric and underscore characters.\n *                            Generates an error if the specified cloud name is not unique across all Cloudinary\n *                            accounts. Note: Once created, the name can only be changed for accounts with fewer than\n *                            1000 assets.\n * @param custom_attributes {object} Any custom attributes you want to associate with the sub-account, as a map/hash of\n *                                   key/value pairs.\n * @param enabled {boolean} Whether the sub-account is enabled. Default: true\n * @param base_account {string} The ID of another sub-account, from which to copy all of the following settings:\n *                              Size limits, Timed limits, and Flags.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param callback\n */\nfunction create_sub_account(name, cloud_name, custom_attributes, enabled, base_account, options = {}, callback) {\n  let params = {\n    cloud_name: cloud_name,\n    name,\n    custom_attributes: custom_attributes,\n    enabled,\n    base_sub_account_id: base_account\n  };\n  options.content_type = \"json\";\n  let uri = ['sub_accounts'];\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes the specified sub-account. Supported only for accounts with fewer than 1000 assets.\n * @param sub_account_id {string} - The ID of the sub-account to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_sub_account(sub_account_id, options = {}, callback) {\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Updates the specified details of the sub-account.\n * @param sub_account_id {string} - The ID of the sub-account.\n * @param [name] {string} - The display name as shown in the management console.\n * @param [cloud_name] {string} - A new cloud name for the account.\n *                                Notes:\n *                                  - Can only be changed for accounts with fewer than 1000 assets.\n *                                  - generates an error if the cloud name is not unique across all Cloudinary accounts.\n * @param [custom_attributes] {object} - Any custom attributes you want to associate with the sub-account, as a map/hash\n *                                       of key/value pairs.\n * @param [enabled] {boolean} - Whether the sub-account is enabled.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_sub_account(sub_account_id, name, cloud_name, custom_attributes, enabled, options = {}, callback) {\n  let params = {\n    cloud_name: cloud_name,\n    name,\n    custom_attributes: custom_attributes,\n    enabled\n  };\n  options.content_type = \"json\";\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Returns the user with the specified ID.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user(user_id, options = {}, callback) {\n  let uri = ['users', user_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists users in the account.\n * @param [pending] {boolean} - Limit results to pending users (true), users that are not pending (false), or all users (undefined, the default)\n * @param [user_ids] {string[]} - A list of up to 100 user IDs. When provided, other parameters are ignored.\n * @param [prefix] {string} - Returns users where the name or email address begins with the specified case-insensitive\n *                            string.\n * @param [sub_account_id[ {string} - Only returns users who have access to the specified account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction users(pending, user_ids, prefix, sub_account_id, options = {}, callback) {\n  let uri = ['users'];\n  let params = {\n    ids: user_ids,\n    pending,\n    prefix,\n    sub_account_id\n  };\n  return call_account_api('GET', uri, pickOnlyExistingValues(params, \"ids\", \"pending\", \"prefix\", \"sub_account_id\"), callback, options);\n}\n\n/**\n * @desc Creates a new user in the account.\n * @param name {string} - The name of the user.\n * @param email {string} - A unique email address, which serves as the login name and notification address.\n * @param role {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\n *                                                             media_library_admin, media_library_user\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction create_user(name, email, role, sub_account_ids, options = {}, callback) {\n  let uri = ['users'];\n  let params = {\n    name,\n    email,\n    role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Updates the details of the specified user.\n * @param user_id {string} - The ID of the user to update.\n * @param [name] {string} - The name of the user.\n * @param [email] {string} - A unique email address, which serves as the login name and notification address.\n * @param [role] {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\n *                                              media_library_admin, media_library_user\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_user(user_id, name, email, role, sub_account_ids, options = {}, callback) {\n  let uri = ['users', user_id];\n  let params = {\n    name,\n    email,\n    role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes an existing user.\n * @param user_id {string} - The ID of the user to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_user(user_id, options = {}, callback) {\n  let uri = ['users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Creates a new user group.\n * @param name {string} - The name for the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction create_user_group(name, options = {}, callback) {\n  let uri = ['user_groups'];\n  options.content_type = 'json';\n  let params = {\n    name\n  };\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Updates the specified user group.\n * @param group_id {string} The ID of the user group to update.\n * @param name {string} - The name for the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_user_group(group_id, name, options = {}, callback) {\n  let uri = ['user_groups', group_id];\n  let params = {\n    name\n  };\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes the user group with the specified ID.\n * @param group_id {string} The ID of the user group to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_user_group(group_id, options = {}, callback) {\n  let uri = ['user_groups', group_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Adds a user to a group with the specified ID.\n * @param group_id {string} - The ID of the user group.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction add_user_to_group(group_id, user_id, options = {}, callback) {\n  let uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('POST', uri, {}, callback, options);\n}\n\n/**\n * @desc Removes a user from a group with the specified ID.\n * @param group_id {string} - The ID of the user group.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction remove_user_from_group(group_id, user_id, options = {}, callback) {\n  let uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Retrieves the details of the specified user group.\n * @param group_id {string} - The ID of the user group to retrieve.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_group(group_id, options = {}, callback) {\n  let uri = ['user_groups', group_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists user groups in the account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_groups(options = {}, callback) {\n  let uri = ['user_groups'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists users in the specified user group.\n * @param group_id {string} - The ID of the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_group_users(group_id, options = {}, callback) {\n  let uri = ['user_groups', group_id, 'users'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\nmodule.exports = {\n  sub_accounts,\n  create_sub_account,\n  delete_sub_account,\n  sub_account,\n  update_sub_account,\n  user,\n  users,\n  user_group,\n  user_groups,\n  user_group_users,\n  remove_user_from_group,\n  delete_user,\n  update_user_group,\n  update_user,\n  create_user,\n  create_user_group,\n  add_user_to_group,\n  delete_user_group\n};","map":{"version":3,"names":["utils","require","call_account_api","pickOnlyExistingValues","sub_accounts","enabled","ids","prefix","options","callback","params","uri","sub_account","sub_account_id","create_sub_account","name","cloud_name","custom_attributes","base_account","base_sub_account_id","content_type","delete_sub_account","update_sub_account","user","user_id","users","pending","user_ids","create_user","email","role","sub_account_ids","update_user","delete_user","create_user_group","update_user_group","group_id","delete_user_group","add_user_to_group","remove_user_from_group","user_group","user_groups","user_group_users","module","exports"],"sources":["C:/Users/PC/Documents/GitHub/IntercambioPropiedades/front-end/node_modules/cloudinary/lib/provisioning/account.js"],"sourcesContent":["const utils = require(\"../utils\");\nconst call_account_api = require('../api_client/call_account_api');\n\nconst { pickOnlyExistingValues } = utils;\n\n/**\n * @desc Lists sub-accounts.\n * @param [enabled] {boolean} - Whether to only return enabled sub-accounts (true) or disabled accounts (false).\n *                              Default: all accounts are returned (both enabled and disabled).\n * @param [ids] {number[]} - A list of up to 100 sub-account IDs. When provided, other parameters are ignored.\n * @param [prefix] {string} - Returns accounts where the name begins with the specified case-insensitive string.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction sub_accounts(enabled, ids = [], prefix, options = {}, callback) {\n  let params = {\n    enabled,\n    ids,\n    prefix\n  };\n\n  let uri = ['sub_accounts'];\n  return call_account_api('GET', uri, params, callback, options);\n}\n\n\n/**\n * @desc Retrieves the details of the specified sub-account.\n * @param sub_account_id {string} - The ID of the sub-account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction sub_account(sub_account_id, options = {}, callback) {\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n\n/**\n * @desc Creates a new sub-account. Any users that have access to all sub-accounts will also automatically have access\n *       to the new sub-account.\n * @param name {string} The display name as shown in the management console.\n * @param cloud_name {string} A case-insensitive cloud name comprised of alphanumeric and underscore characters.\n *                            Generates an error if the specified cloud name is not unique across all Cloudinary\n *                            accounts. Note: Once created, the name can only be changed for accounts with fewer than\n *                            1000 assets.\n * @param custom_attributes {object} Any custom attributes you want to associate with the sub-account, as a map/hash of\n *                                   key/value pairs.\n * @param enabled {boolean} Whether the sub-account is enabled. Default: true\n * @param base_account {string} The ID of another sub-account, from which to copy all of the following settings:\n *                              Size limits, Timed limits, and Flags.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param callback\n */\nfunction create_sub_account(name, cloud_name, custom_attributes, enabled, base_account, options = {}, callback) {\n  let params = {\n    cloud_name: cloud_name,\n    name,\n    custom_attributes: custom_attributes,\n    enabled,\n    base_sub_account_id: base_account\n  };\n\n  options.content_type = \"json\";\n  let uri = ['sub_accounts'];\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes the specified sub-account. Supported only for accounts with fewer than 1000 assets.\n * @param sub_account_id {string} - The ID of the sub-account to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_sub_account(sub_account_id, options = {}, callback) {\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Updates the specified details of the sub-account.\n * @param sub_account_id {string} - The ID of the sub-account.\n * @param [name] {string} - The display name as shown in the management console.\n * @param [cloud_name] {string} - A new cloud name for the account.\n *                                Notes:\n *                                  - Can only be changed for accounts with fewer than 1000 assets.\n *                                  - generates an error if the cloud name is not unique across all Cloudinary accounts.\n * @param [custom_attributes] {object} - Any custom attributes you want to associate with the sub-account, as a map/hash\n *                                       of key/value pairs.\n * @param [enabled] {boolean} - Whether the sub-account is enabled.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_sub_account(sub_account_id, name, cloud_name, custom_attributes, enabled, options = {}, callback) {\n  let params = {\n    cloud_name: cloud_name,\n    name,\n    custom_attributes: custom_attributes,\n    enabled\n  };\n\n  options.content_type = \"json\";\n  let uri = ['sub_accounts', sub_account_id];\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Returns the user with the specified ID.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user(user_id, options = {}, callback) {\n  let uri = ['users', user_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists users in the account.\n * @param [pending] {boolean} - Limit results to pending users (true), users that are not pending (false), or all users (undefined, the default)\n * @param [user_ids] {string[]} - A list of up to 100 user IDs. When provided, other parameters are ignored.\n * @param [prefix] {string} - Returns users where the name or email address begins with the specified case-insensitive\n *                            string.\n * @param [sub_account_id[ {string} - Only returns users who have access to the specified account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction users(pending, user_ids, prefix, sub_account_id, options = {}, callback) {\n  let uri = ['users'];\n  let params = {\n    ids: user_ids,\n    pending,\n    prefix,\n    sub_account_id\n  };\n  return call_account_api('GET', uri, pickOnlyExistingValues(params, \"ids\", \"pending\", \"prefix\", \"sub_account_id\"), callback, options);\n}\n\n/**\n * @desc Creates a new user in the account.\n * @param name {string} - The name of the user.\n * @param email {string} - A unique email address, which serves as the login name and notification address.\n * @param role {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\n *                                                             media_library_admin, media_library_user\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction create_user(name, email, role, sub_account_ids, options = {}, callback) {\n  let uri = ['users'];\n  let params = {\n    name,\n    email,\n    role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Updates the details of the specified user.\n * @param user_id {string} - The ID of the user to update.\n * @param [name] {string} - The name of the user.\n * @param [email] {string} - A unique email address, which serves as the login name and notification address.\n * @param [role] {string} - The role to assign. Possible values: master_admin, admin, billing, technical_admin, reports,\n *                                              media_library_admin, media_library_user\n * @param [sub_account_ids] {string[]} - The list of sub-account IDs that this user can access.\n *                                       Note: This parameter is ignored if the role is specified as master_admin.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_user(user_id, name, email, role, sub_account_ids, options = {}, callback) {\n  let uri = ['users', user_id];\n  let params = {\n    name,\n    email,\n    role,\n    sub_account_ids: sub_account_ids\n  };\n  options.content_type = 'json';\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes an existing user.\n * @param user_id {string} - The ID of the user to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_user(user_id, options = {}, callback) {\n  let uri = ['users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Creates a new user group.\n * @param name {string} - The name for the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction create_user_group(name, options = {}, callback) {\n  let uri = ['user_groups'];\n  options.content_type = 'json';\n  let params = {\n    name\n  };\n  return call_account_api('POST', uri, params, callback, options);\n}\n\n/**\n * @desc Updates the specified user group.\n * @param group_id {string} The ID of the user group to update.\n * @param name {string} - The name for the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction update_user_group(group_id, name, options = {}, callback) {\n  let uri = ['user_groups', group_id];\n  let params = {\n    name\n  };\n  return call_account_api('PUT', uri, params, callback, options);\n}\n\n/**\n * @desc Deletes the user group with the specified ID.\n * @param group_id {string} The ID of the user group to delete.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction delete_user_group(group_id, options = {}, callback) {\n  let uri = ['user_groups', group_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Adds a user to a group with the specified ID.\n * @param group_id {string} - The ID of the user group.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction add_user_to_group(group_id, user_id, options = {}, callback) {\n  let uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('POST', uri, {}, callback, options);\n}\n\n/**\n * @desc Removes a user from a group with the specified ID.\n * @param group_id {string} - The ID of the user group.\n * @param user_id {string} - The ID of the user.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction remove_user_from_group(group_id, user_id, options = {}, callback) {\n  let uri = ['user_groups', group_id, 'users', user_id];\n  return call_account_api('DELETE', uri, {}, callback, options);\n}\n\n/**\n * @desc Retrieves the details of the specified user group.\n * @param group_id {string} - The ID of the user group to retrieve.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_group(group_id, options = {}, callback) {\n  let uri = ['user_groups', group_id];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists user groups in the account.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_groups(options = {}, callback) {\n  let uri = ['user_groups'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n/**\n * @desc Lists users in the specified user group.\n * @param group_id {string} - The ID of the user group.\n * @param [options] {object} - See {@link https://cloudinary.com/documentation/cloudinary_sdks#configuration_parameters|Configuration parameters} in the SDK documentation.\n * @param [callback] {function}\n */\nfunction user_group_users(group_id, options = {}, callback) {\n  let uri = ['user_groups', group_id, 'users'];\n  return call_account_api('GET', uri, {}, callback, options);\n}\n\n\nmodule.exports = {\n  sub_accounts,\n  create_sub_account,\n  delete_sub_account,\n  sub_account,\n  update_sub_account,\n  user,\n  users,\n  user_group,\n  user_groups,\n  user_group_users,\n  remove_user_from_group,\n  delete_user,\n  update_user_group,\n  update_user,\n  create_user,\n  create_user_group,\n  add_user_to_group,\n  delete_user_group\n};\n"],"mappings":"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"},"metadata":{},"sourceType":"script","externalDependencies":[]}