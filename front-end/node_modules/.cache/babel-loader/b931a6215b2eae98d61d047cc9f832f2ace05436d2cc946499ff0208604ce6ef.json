{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toPropertyKey = require('../internals/to-property-key');\nvar iterate = require('../internals/iterate');\nvar create = getBuiltIn('Object', 'create');\nvar push = uncurryThis([].push);\n\n// `Object.groupBy` method\n// https://github.com/tc39/proposal-array-grouping\n$({\n  target: 'Object',\n  stat: true\n}, {\n  groupBy: function groupBy(items, callbackfn) {\n    requireObjectCoercible(items);\n    aCallable(callbackfn);\n    var obj = create(null);\n    var k = 0;\n    iterate(items, function (value) {\n      var key = toPropertyKey(callbackfn(value, k++));\n      // in some IE versions, `hasOwnProperty` returns incorrect result on integer keys\n      // but since it's a `null` prototype object, we can safely use `in`\n      if (key in obj) push(obj[key], value);else obj[key] = [value];\n    });\n    return obj;\n  }\n});","map":{"version":3,"names":["$","require","getBuiltIn","uncurryThis","aCallable","requireObjectCoercible","toPropertyKey","iterate","create","push","target","stat","groupBy","items","callbackfn","obj","k","value","key"],"sources":["C:/Users/PC/Documents/GitHub/IntercambioPropiedades/front-end/node_modules/core-js/modules/es.object.group-by.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar getBuiltIn = require('../internals/get-built-in');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar toPropertyKey = require('../internals/to-property-key');\nvar iterate = require('../internals/iterate');\n\nvar create = getBuiltIn('Object', 'create');\nvar push = uncurryThis([].push);\n\n// `Object.groupBy` method\n// https://github.com/tc39/proposal-array-grouping\n$({ target: 'Object', stat: true }, {\n  groupBy: function groupBy(items, callbackfn) {\n    requireObjectCoercible(items);\n    aCallable(callbackfn);\n    var obj = create(null);\n    var k = 0;\n    iterate(items, function (value) {\n      var key = toPropertyKey(callbackfn(value, k++));\n      // in some IE versions, `hasOwnProperty` returns incorrect result on integer keys\n      // but since it's a `null` prototype object, we can safely use `in`\n      if (key in obj) push(obj[key], value);\n      else obj[key] = [value];\n    });\n    return obj;\n  }\n});\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,UAAU,GAAGD,OAAO,CAAC,2BAA2B,CAAC;AACrD,IAAIE,WAAW,GAAGF,OAAO,CAAC,oCAAoC,CAAC;AAC/D,IAAIG,SAAS,GAAGH,OAAO,CAAC,yBAAyB,CAAC;AAClD,IAAII,sBAAsB,GAAGJ,OAAO,CAAC,uCAAuC,CAAC;AAC7E,IAAIK,aAAa,GAAGL,OAAO,CAAC,8BAA8B,CAAC;AAC3D,IAAIM,OAAO,GAAGN,OAAO,CAAC,sBAAsB,CAAC;AAE7C,IAAIO,MAAM,GAAGN,UAAU,CAAC,QAAQ,EAAE,QAAQ,CAAC;AAC3C,IAAIO,IAAI,GAAGN,WAAW,CAAC,EAAE,CAACM,IAAI,CAAC;;AAE/B;AACA;AACAT,CAAC,CAAC;EAAEU,MAAM,EAAE,QAAQ;EAAEC,IAAI,EAAE;AAAK,CAAC,EAAE;EAClCC,OAAO,EAAE,SAASA,OAAOA,CAACC,KAAK,EAAEC,UAAU,EAAE;IAC3CT,sBAAsB,CAACQ,KAAK,CAAC;IAC7BT,SAAS,CAACU,UAAU,CAAC;IACrB,IAAIC,GAAG,GAAGP,MAAM,CAAC,IAAI,CAAC;IACtB,IAAIQ,CAAC,GAAG,CAAC;IACTT,OAAO,CAACM,KAAK,EAAE,UAAUI,KAAK,EAAE;MAC9B,IAAIC,GAAG,GAAGZ,aAAa,CAACQ,UAAU,CAACG,KAAK,EAAED,CAAC,EAAE,CAAC,CAAC;MAC/C;MACA;MACA,IAAIE,GAAG,IAAIH,GAAG,EAAEN,IAAI,CAACM,GAAG,CAACG,GAAG,CAAC,EAAED,KAAK,CAAC,CAAC,KACjCF,GAAG,CAACG,GAAG,CAAC,GAAG,CAACD,KAAK,CAAC;IACzB,CAAC,CAAC;IACF,OAAOF,GAAG;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}