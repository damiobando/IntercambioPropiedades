{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\PC\\\\Documents\\\\GitHub\\\\IntercambioPropiedades\\\\front-end\\\\src\\\\components\\\\PropertyList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport PropertyCard from './PropertyCard';\nimport Pagination from './Pagination';\nimport './PropertyList.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PropertyList = () => {\n  _s();\n  // Estado para manejar la lista de propiedades\n  const [properties, setProperties] = useState([]);\n  // Estado para manejar la página actual\n  const [currentPage, setCurrentPage] = useState(1);\n  // Estado para manejar el número de propiedades por página\n  const [propertiesPerPage] = useState(10); // Puedes ajustar este número según tus necesidades\n\n  // Lógica para obtener las propiedades, por ejemplo, usando una API\n  useEffect(() => {\n    // Lógica para obtener las propiedades (puedes usar fetch o axios)\n    // y actualizar el estado de las propiedades\n    // Ejemplo: fetchProperties().then(data => setProperties(data));\n  }, []); // Se ejecuta solo al montar el componente\n\n  // Lógica para la paginación\n  const indexOfLastProperty = currentPage * propertiesPerPage;\n  const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\n  const currentProperties = properties.slice(indexOfFirstProperty, indexOfLastProperty);\n\n  // Cambiar de página\n  const paginate = pageNumber => setCurrentPage(pageNumber);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"main\",\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      placeholder: \"Buscar propiedades\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"property-list\",\n      children: currentProperties.map(property => /*#__PURE__*/_jsxDEV(PropertyCard, {\n        property: property\n      }, property.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pagination\",\n      children: /*#__PURE__*/_jsxDEV(Pagination, {\n        propertiesPerPage: propertiesPerPage,\n        totalProperties: properties.length,\n        currentPage: currentPage,\n        paginate: paginate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n};\n_s(PropertyList, \"m613hurdoe9YGMEI3C1CxCWVw/8=\");\n_c = PropertyList;\nexport default PropertyList;\nvar _c;\n$RefreshReg$(_c, \"PropertyList\");","map":{"version":3,"names":["React","useState","useEffect","PropertyCard","Pagination","jsxDEV","_jsxDEV","PropertyList","_s","properties","setProperties","currentPage","setCurrentPage","propertiesPerPage","indexOfLastProperty","indexOfFirstProperty","currentProperties","slice","paginate","pageNumber","className","children","type","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","map","property","id","totalProperties","length","_c","$RefreshReg$"],"sources":["C:/Users/PC/Documents/GitHub/IntercambioPropiedades/front-end/src/components/PropertyList.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropertyCard from './PropertyCard'; \r\nimport Pagination from './Pagination'; \r\nimport './PropertyList.css'\r\n\r\nconst PropertyList = () => {\r\n  // Estado para manejar la lista de propiedades\r\n  const [properties, setProperties] = useState([]);\r\n  // Estado para manejar la página actual\r\n  const [currentPage, setCurrentPage] = useState(1);\r\n  // Estado para manejar el número de propiedades por página\r\n  const [propertiesPerPage] = useState(10); // Puedes ajustar este número según tus necesidades\r\n\r\n  // Lógica para obtener las propiedades, por ejemplo, usando una API\r\n  useEffect(() => {\r\n    // Lógica para obtener las propiedades (puedes usar fetch o axios)\r\n    // y actualizar el estado de las propiedades\r\n    // Ejemplo: fetchProperties().then(data => setProperties(data));\r\n  }, []); // Se ejecuta solo al montar el componente\r\n\r\n  // Lógica para la paginación\r\n  const indexOfLastProperty = currentPage * propertiesPerPage;\r\n  const indexOfFirstProperty = indexOfLastProperty - propertiesPerPage;\r\n  const currentProperties = properties.slice(indexOfFirstProperty, indexOfLastProperty);\r\n\r\n  // Cambiar de página\r\n  const paginate = (pageNumber) => setCurrentPage(pageNumber);\r\n\r\n  return (\r\n    <div className='main'>\r\n      <input type=\"text\" placeholder=\"Buscar propiedades\" />\r\n\r\n        <div className=\"property-list\">\r\n        {currentProperties.map((property) => (\r\n            <PropertyCard key={property.id} property={property} />\r\n        ))}\r\n        </div>\r\n\r\n        <div className=\"pagination\">\r\n        <Pagination\r\n            propertiesPerPage={propertiesPerPage}\r\n            totalProperties={properties.length}\r\n            currentPage={currentPage}\r\n            paginate={paginate}\r\n        />\r\n        </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default PropertyList;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,YAAY,MAAM,gBAAgB;AACzC,OAAOC,UAAU,MAAM,cAAc;AACrC,OAAO,oBAAoB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE3B,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACzB;EACA,MAAM,CAACC,UAAU,EAAEC,aAAa,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAChD;EACA,MAAM,CAACU,WAAW,EAAEC,cAAc,CAAC,GAAGX,QAAQ,CAAC,CAAC,CAAC;EACjD;EACA,MAAM,CAACY,iBAAiB,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE1C;EACAC,SAAS,CAAC,MAAM;IACd;IACA;IACA;EAAA,CACD,EAAE,EAAE,CAAC,CAAC,CAAC;;EAER;EACA,MAAMY,mBAAmB,GAAGH,WAAW,GAAGE,iBAAiB;EAC3D,MAAME,oBAAoB,GAAGD,mBAAmB,GAAGD,iBAAiB;EACpE,MAAMG,iBAAiB,GAAGP,UAAU,CAACQ,KAAK,CAACF,oBAAoB,EAAED,mBAAmB,CAAC;;EAErF;EACA,MAAMI,QAAQ,GAAIC,UAAU,IAAKP,cAAc,CAACO,UAAU,CAAC;EAE3D,oBACEb,OAAA;IAAKc,SAAS,EAAC,MAAM;IAAAC,QAAA,gBACnBf,OAAA;MAAOgB,IAAI,EAAC,MAAM;MAACC,WAAW,EAAC;IAAoB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eAEpDrB,OAAA;MAAKc,SAAS,EAAC,eAAe;MAAAC,QAAA,EAC7BL,iBAAiB,CAACY,GAAG,CAAEC,QAAQ,iBAC5BvB,OAAA,CAACH,YAAY;QAAmB0B,QAAQ,EAAEA;MAAS,GAAhCA,QAAQ,CAACC,EAAE;QAAAN,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAuB,CACxD;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC,eAENrB,OAAA;MAAKc,SAAS,EAAC,YAAY;MAAAC,QAAA,eAC3Bf,OAAA,CAACF,UAAU;QACPS,iBAAiB,EAAEA,iBAAkB;QACrCkB,eAAe,EAAEtB,UAAU,CAACuB,MAAO;QACnCrB,WAAW,EAAEA,WAAY;QACzBO,QAAQ,EAAEA;MAAS;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAACnB,EAAA,CA3CID,YAAY;AAAA0B,EAAA,GAAZ1B,YAAY;AA6ClB,eAAeA,YAAY;AAAC,IAAA0B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}