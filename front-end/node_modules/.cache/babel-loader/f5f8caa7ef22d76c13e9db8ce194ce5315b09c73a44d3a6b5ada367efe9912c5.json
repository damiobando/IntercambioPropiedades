{"ast":null,"code":"'use strict';\n\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar iterate = require('../internals/iterate');\nvar MapHelpers = require('../internals/map-helpers');\nvar IS_PURE = require('../internals/is-pure');\nvar Map = MapHelpers.Map;\nvar has = MapHelpers.has;\nvar get = MapHelpers.get;\nvar set = MapHelpers.set;\nvar push = uncurryThis([].push);\n\n// `Map.groupBy` method\n// https://github.com/tc39/proposal-array-grouping\n$({\n  target: 'Map',\n  stat: true,\n  forced: IS_PURE\n}, {\n  groupBy: function groupBy(items, callbackfn) {\n    requireObjectCoercible(items);\n    aCallable(callbackfn);\n    var map = new Map();\n    var k = 0;\n    iterate(items, function (value) {\n      var key = callbackfn(value, k++);\n      if (!has(map, key)) set(map, key, [value]);else push(get(map, key), value);\n    });\n    return map;\n  }\n});","map":{"version":3,"names":["$","require","uncurryThis","aCallable","requireObjectCoercible","iterate","MapHelpers","IS_PURE","Map","has","get","set","push","target","stat","forced","groupBy","items","callbackfn","map","k","value","key"],"sources":["C:/Users/PC/Documents/GitHub/IntercambioPropiedades/front-end/node_modules/core-js/modules/es.map.group-by.js"],"sourcesContent":["'use strict';\nvar $ = require('../internals/export');\nvar uncurryThis = require('../internals/function-uncurry-this');\nvar aCallable = require('../internals/a-callable');\nvar requireObjectCoercible = require('../internals/require-object-coercible');\nvar iterate = require('../internals/iterate');\nvar MapHelpers = require('../internals/map-helpers');\nvar IS_PURE = require('../internals/is-pure');\n\nvar Map = MapHelpers.Map;\nvar has = MapHelpers.has;\nvar get = MapHelpers.get;\nvar set = MapHelpers.set;\nvar push = uncurryThis([].push);\n\n// `Map.groupBy` method\n// https://github.com/tc39/proposal-array-grouping\n$({ target: 'Map', stat: true, forced: IS_PURE }, {\n  groupBy: function groupBy(items, callbackfn) {\n    requireObjectCoercible(items);\n    aCallable(callbackfn);\n    var map = new Map();\n    var k = 0;\n    iterate(items, function (value) {\n      var key = callbackfn(value, k++);\n      if (!has(map, key)) set(map, key, [value]);\n      else push(get(map, key), value);\n    });\n    return map;\n  }\n});\n"],"mappings":"AAAA,YAAY;;AACZ,IAAIA,CAAC,GAAGC,OAAO,CAAC,qBAAqB,CAAC;AACtC,IAAIC,WAAW,GAAGD,OAAO,CAAC,oCAAoC,CAAC;AAC/D,IAAIE,SAAS,GAAGF,OAAO,CAAC,yBAAyB,CAAC;AAClD,IAAIG,sBAAsB,GAAGH,OAAO,CAAC,uCAAuC,CAAC;AAC7E,IAAII,OAAO,GAAGJ,OAAO,CAAC,sBAAsB,CAAC;AAC7C,IAAIK,UAAU,GAAGL,OAAO,CAAC,0BAA0B,CAAC;AACpD,IAAIM,OAAO,GAAGN,OAAO,CAAC,sBAAsB,CAAC;AAE7C,IAAIO,GAAG,GAAGF,UAAU,CAACE,GAAG;AACxB,IAAIC,GAAG,GAAGH,UAAU,CAACG,GAAG;AACxB,IAAIC,GAAG,GAAGJ,UAAU,CAACI,GAAG;AACxB,IAAIC,GAAG,GAAGL,UAAU,CAACK,GAAG;AACxB,IAAIC,IAAI,GAAGV,WAAW,CAAC,EAAE,CAACU,IAAI,CAAC;;AAE/B;AACA;AACAZ,CAAC,CAAC;EAAEa,MAAM,EAAE,KAAK;EAAEC,IAAI,EAAE,IAAI;EAAEC,MAAM,EAAER;AAAQ,CAAC,EAAE;EAChDS,OAAO,EAAE,SAASA,OAAOA,CAACC,KAAK,EAAEC,UAAU,EAAE;IAC3Cd,sBAAsB,CAACa,KAAK,CAAC;IAC7Bd,SAAS,CAACe,UAAU,CAAC;IACrB,IAAIC,GAAG,GAAG,IAAIX,GAAG,CAAC,CAAC;IACnB,IAAIY,CAAC,GAAG,CAAC;IACTf,OAAO,CAACY,KAAK,EAAE,UAAUI,KAAK,EAAE;MAC9B,IAAIC,GAAG,GAAGJ,UAAU,CAACG,KAAK,EAAED,CAAC,EAAE,CAAC;MAChC,IAAI,CAACX,GAAG,CAACU,GAAG,EAAEG,GAAG,CAAC,EAAEX,GAAG,CAACQ,GAAG,EAAEG,GAAG,EAAE,CAACD,KAAK,CAAC,CAAC,CAAC,KACtCT,IAAI,CAACF,GAAG,CAACS,GAAG,EAAEG,GAAG,CAAC,EAAED,KAAK,CAAC;IACjC,CAAC,CAAC;IACF,OAAOF,GAAG;EACZ;AACF,CAAC,CAAC"},"metadata":{},"sourceType":"script","externalDependencies":[]}